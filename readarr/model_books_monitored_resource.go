/*
Readarr

Readarr API docs

API version: v0.4.10.2734
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package readarr

import (
	"encoding/json"
)

// checks if the BooksMonitoredResource type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BooksMonitoredResource{}

// BooksMonitoredResource struct for BooksMonitoredResource
type BooksMonitoredResource struct {
	BookIds []int32 `json:"bookIds,omitempty"`
	Monitored *bool `json:"monitored,omitempty"`
}

// NewBooksMonitoredResource instantiates a new BooksMonitoredResource object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBooksMonitoredResource() *BooksMonitoredResource {
	this := BooksMonitoredResource{}
	return &this
}

// NewBooksMonitoredResourceWithDefaults instantiates a new BooksMonitoredResource object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBooksMonitoredResourceWithDefaults() *BooksMonitoredResource {
	this := BooksMonitoredResource{}
	return &this
}

// GetBookIds returns the BookIds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BooksMonitoredResource) GetBookIds() []int32 {
	if o == nil {
		var ret []int32
		return ret
	}
	return o.BookIds
}

// GetBookIdsOk returns a tuple with the BookIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BooksMonitoredResource) GetBookIdsOk() ([]int32, bool) {
	if o == nil || IsNil(o.BookIds) {
		return nil, false
	}
	return o.BookIds, true
}

// HasBookIds returns a boolean if a field has been set.
func (o *BooksMonitoredResource) HasBookIds() bool {
	if o != nil && !IsNil(o.BookIds) {
		return true
	}

	return false
}

// SetBookIds gets a reference to the given []int32 and assigns it to the BookIds field.
func (o *BooksMonitoredResource) SetBookIds(v []int32) {
	o.BookIds = v
}

// GetMonitored returns the Monitored field value if set, zero value otherwise.
func (o *BooksMonitoredResource) GetMonitored() bool {
	if o == nil || IsNil(o.Monitored) {
		var ret bool
		return ret
	}
	return *o.Monitored
}

// GetMonitoredOk returns a tuple with the Monitored field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BooksMonitoredResource) GetMonitoredOk() (*bool, bool) {
	if o == nil || IsNil(o.Monitored) {
		return nil, false
	}
	return o.Monitored, true
}

// HasMonitored returns a boolean if a field has been set.
func (o *BooksMonitoredResource) HasMonitored() bool {
	if o != nil && !IsNil(o.Monitored) {
		return true
	}

	return false
}

// SetMonitored gets a reference to the given bool and assigns it to the Monitored field.
func (o *BooksMonitoredResource) SetMonitored(v bool) {
	o.Monitored = &v
}

func (o BooksMonitoredResource) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BooksMonitoredResource) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.BookIds != nil {
		toSerialize["bookIds"] = o.BookIds
	}
	if !IsNil(o.Monitored) {
		toSerialize["monitored"] = o.Monitored
	}
	return toSerialize, nil
}

type NullableBooksMonitoredResource struct {
	value *BooksMonitoredResource
	isSet bool
}

func (v NullableBooksMonitoredResource) Get() *BooksMonitoredResource {
	return v.value
}

func (v *NullableBooksMonitoredResource) Set(val *BooksMonitoredResource) {
	v.value = val
	v.isSet = true
}

func (v NullableBooksMonitoredResource) IsSet() bool {
	return v.isSet
}

func (v *NullableBooksMonitoredResource) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBooksMonitoredResource(val *BooksMonitoredResource) *NullableBooksMonitoredResource {
	return &NullableBooksMonitoredResource{value: val, isSet: true}
}

func (v NullableBooksMonitoredResource) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBooksMonitoredResource) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


