/*
Readarr

Readarr API docs

API version: v0.3.18.2411
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package readarr

import (
	"encoding/json"
)

// AuthorStatisticsResource struct for AuthorStatisticsResource
type AuthorStatisticsResource struct {
	BookFileCount *int32 `json:"bookFileCount,omitempty"`
	BookCount *int32 `json:"bookCount,omitempty"`
	AvailableBookCount *int32 `json:"availableBookCount,omitempty"`
	TotalBookCount *int32 `json:"totalBookCount,omitempty"`
	SizeOnDisk *int64 `json:"sizeOnDisk,omitempty"`
	PercentOfBooks *float64 `json:"percentOfBooks,omitempty"`
}

// NewAuthorStatisticsResource instantiates a new AuthorStatisticsResource object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthorStatisticsResource() *AuthorStatisticsResource {
	this := AuthorStatisticsResource{}
	return &this
}

// NewAuthorStatisticsResourceWithDefaults instantiates a new AuthorStatisticsResource object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthorStatisticsResourceWithDefaults() *AuthorStatisticsResource {
	this := AuthorStatisticsResource{}
	return &this
}

// GetBookFileCount returns the BookFileCount field value if set, zero value otherwise.
func (o *AuthorStatisticsResource) GetBookFileCount() int32 {
	if o == nil || isNil(o.BookFileCount) {
		var ret int32
		return ret
	}
	return *o.BookFileCount
}

// GetBookFileCountOk returns a tuple with the BookFileCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorStatisticsResource) GetBookFileCountOk() (*int32, bool) {
	if o == nil || isNil(o.BookFileCount) {
    return nil, false
	}
	return o.BookFileCount, true
}

// HasBookFileCount returns a boolean if a field has been set.
func (o *AuthorStatisticsResource) HasBookFileCount() bool {
	if o != nil && !isNil(o.BookFileCount) {
		return true
	}

	return false
}

// SetBookFileCount gets a reference to the given int32 and assigns it to the BookFileCount field.
func (o *AuthorStatisticsResource) SetBookFileCount(v int32) {
	o.BookFileCount = &v
}

// GetBookCount returns the BookCount field value if set, zero value otherwise.
func (o *AuthorStatisticsResource) GetBookCount() int32 {
	if o == nil || isNil(o.BookCount) {
		var ret int32
		return ret
	}
	return *o.BookCount
}

// GetBookCountOk returns a tuple with the BookCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorStatisticsResource) GetBookCountOk() (*int32, bool) {
	if o == nil || isNil(o.BookCount) {
    return nil, false
	}
	return o.BookCount, true
}

// HasBookCount returns a boolean if a field has been set.
func (o *AuthorStatisticsResource) HasBookCount() bool {
	if o != nil && !isNil(o.BookCount) {
		return true
	}

	return false
}

// SetBookCount gets a reference to the given int32 and assigns it to the BookCount field.
func (o *AuthorStatisticsResource) SetBookCount(v int32) {
	o.BookCount = &v
}

// GetAvailableBookCount returns the AvailableBookCount field value if set, zero value otherwise.
func (o *AuthorStatisticsResource) GetAvailableBookCount() int32 {
	if o == nil || isNil(o.AvailableBookCount) {
		var ret int32
		return ret
	}
	return *o.AvailableBookCount
}

// GetAvailableBookCountOk returns a tuple with the AvailableBookCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorStatisticsResource) GetAvailableBookCountOk() (*int32, bool) {
	if o == nil || isNil(o.AvailableBookCount) {
    return nil, false
	}
	return o.AvailableBookCount, true
}

// HasAvailableBookCount returns a boolean if a field has been set.
func (o *AuthorStatisticsResource) HasAvailableBookCount() bool {
	if o != nil && !isNil(o.AvailableBookCount) {
		return true
	}

	return false
}

// SetAvailableBookCount gets a reference to the given int32 and assigns it to the AvailableBookCount field.
func (o *AuthorStatisticsResource) SetAvailableBookCount(v int32) {
	o.AvailableBookCount = &v
}

// GetTotalBookCount returns the TotalBookCount field value if set, zero value otherwise.
func (o *AuthorStatisticsResource) GetTotalBookCount() int32 {
	if o == nil || isNil(o.TotalBookCount) {
		var ret int32
		return ret
	}
	return *o.TotalBookCount
}

// GetTotalBookCountOk returns a tuple with the TotalBookCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorStatisticsResource) GetTotalBookCountOk() (*int32, bool) {
	if o == nil || isNil(o.TotalBookCount) {
    return nil, false
	}
	return o.TotalBookCount, true
}

// HasTotalBookCount returns a boolean if a field has been set.
func (o *AuthorStatisticsResource) HasTotalBookCount() bool {
	if o != nil && !isNil(o.TotalBookCount) {
		return true
	}

	return false
}

// SetTotalBookCount gets a reference to the given int32 and assigns it to the TotalBookCount field.
func (o *AuthorStatisticsResource) SetTotalBookCount(v int32) {
	o.TotalBookCount = &v
}

// GetSizeOnDisk returns the SizeOnDisk field value if set, zero value otherwise.
func (o *AuthorStatisticsResource) GetSizeOnDisk() int64 {
	if o == nil || isNil(o.SizeOnDisk) {
		var ret int64
		return ret
	}
	return *o.SizeOnDisk
}

// GetSizeOnDiskOk returns a tuple with the SizeOnDisk field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorStatisticsResource) GetSizeOnDiskOk() (*int64, bool) {
	if o == nil || isNil(o.SizeOnDisk) {
    return nil, false
	}
	return o.SizeOnDisk, true
}

// HasSizeOnDisk returns a boolean if a field has been set.
func (o *AuthorStatisticsResource) HasSizeOnDisk() bool {
	if o != nil && !isNil(o.SizeOnDisk) {
		return true
	}

	return false
}

// SetSizeOnDisk gets a reference to the given int64 and assigns it to the SizeOnDisk field.
func (o *AuthorStatisticsResource) SetSizeOnDisk(v int64) {
	o.SizeOnDisk = &v
}

// GetPercentOfBooks returns the PercentOfBooks field value if set, zero value otherwise.
func (o *AuthorStatisticsResource) GetPercentOfBooks() float64 {
	if o == nil || isNil(o.PercentOfBooks) {
		var ret float64
		return ret
	}
	return *o.PercentOfBooks
}

// GetPercentOfBooksOk returns a tuple with the PercentOfBooks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorStatisticsResource) GetPercentOfBooksOk() (*float64, bool) {
	if o == nil || isNil(o.PercentOfBooks) {
    return nil, false
	}
	return o.PercentOfBooks, true
}

// HasPercentOfBooks returns a boolean if a field has been set.
func (o *AuthorStatisticsResource) HasPercentOfBooks() bool {
	if o != nil && !isNil(o.PercentOfBooks) {
		return true
	}

	return false
}

// SetPercentOfBooks gets a reference to the given float64 and assigns it to the PercentOfBooks field.
func (o *AuthorStatisticsResource) SetPercentOfBooks(v float64) {
	o.PercentOfBooks = &v
}

func (o AuthorStatisticsResource) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.BookFileCount) {
		toSerialize["bookFileCount"] = o.BookFileCount
	}
	if !isNil(o.BookCount) {
		toSerialize["bookCount"] = o.BookCount
	}
	if !isNil(o.AvailableBookCount) {
		toSerialize["availableBookCount"] = o.AvailableBookCount
	}
	if !isNil(o.TotalBookCount) {
		toSerialize["totalBookCount"] = o.TotalBookCount
	}
	if !isNil(o.SizeOnDisk) {
		toSerialize["sizeOnDisk"] = o.SizeOnDisk
	}
	if !isNil(o.PercentOfBooks) {
		toSerialize["percentOfBooks"] = o.PercentOfBooks
	}
	return json.Marshal(toSerialize)
}

type NullableAuthorStatisticsResource struct {
	value *AuthorStatisticsResource
	isSet bool
}

func (v NullableAuthorStatisticsResource) Get() *AuthorStatisticsResource {
	return v.value
}

func (v *NullableAuthorStatisticsResource) Set(val *AuthorStatisticsResource) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthorStatisticsResource) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthorStatisticsResource) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthorStatisticsResource(val *AuthorStatisticsResource) *NullableAuthorStatisticsResource {
	return &NullableAuthorStatisticsResource{value: val, isSet: true}
}

func (v NullableAuthorStatisticsResource) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthorStatisticsResource) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


