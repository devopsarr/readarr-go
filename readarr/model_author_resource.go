/*
Readarr

Readarr API docs

API version: v0.3.18.2411
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package readarr

import (
	"encoding/json"
	"time"
)

// AuthorResource struct for AuthorResource
type AuthorResource struct {
	Id *int32 `json:"id,omitempty"`
	AuthorMetadataId *int32 `json:"authorMetadataId,omitempty"`
	Status *AuthorStatusType `json:"status,omitempty"`
	Ended *bool `json:"ended,omitempty"`
	AuthorName NullableString `json:"authorName,omitempty"`
	AuthorNameLastFirst NullableString `json:"authorNameLastFirst,omitempty"`
	ForeignAuthorId NullableString `json:"foreignAuthorId,omitempty"`
	TitleSlug NullableString `json:"titleSlug,omitempty"`
	Overview NullableString `json:"overview,omitempty"`
	Disambiguation NullableString `json:"disambiguation,omitempty"`
	Links []*Links `json:"links,omitempty"`
	NextBook *Book `json:"nextBook,omitempty"`
	LastBook *Book `json:"lastBook,omitempty"`
	Images []*MediaCover `json:"images,omitempty"`
	RemotePoster NullableString `json:"remotePoster,omitempty"`
	Path NullableString `json:"path,omitempty"`
	QualityProfileId *int32 `json:"qualityProfileId,omitempty"`
	MetadataProfileId *int32 `json:"metadataProfileId,omitempty"`
	Monitored *bool `json:"monitored,omitempty"`
	MonitorNewItems *NewItemMonitorTypes `json:"monitorNewItems,omitempty"`
	RootFolderPath NullableString `json:"rootFolderPath,omitempty"`
	Genres []*string `json:"genres,omitempty"`
	CleanName NullableString `json:"cleanName,omitempty"`
	SortName NullableString `json:"sortName,omitempty"`
	SortNameLastFirst NullableString `json:"sortNameLastFirst,omitempty"`
	Tags []*int32 `json:"tags,omitempty"`
	Added *time.Time `json:"added,omitempty"`
	AddOptions *AddAuthorOptions `json:"addOptions,omitempty"`
	Ratings *Ratings `json:"ratings,omitempty"`
	Statistics *AuthorStatisticsResource `json:"statistics,omitempty"`
}

// NewAuthorResource instantiates a new AuthorResource object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthorResource() *AuthorResource {
	this := AuthorResource{}
	return &this
}

// NewAuthorResourceWithDefaults instantiates a new AuthorResource object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthorResourceWithDefaults() *AuthorResource {
	this := AuthorResource{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AuthorResource) GetId() int32 {
	if o == nil || isNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorResource) GetIdOk() (*int32, bool) {
	if o == nil || isNil(o.Id) {
    return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AuthorResource) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *AuthorResource) SetId(v int32) {
	o.Id = &v
}

// GetAuthorMetadataId returns the AuthorMetadataId field value if set, zero value otherwise.
func (o *AuthorResource) GetAuthorMetadataId() int32 {
	if o == nil || isNil(o.AuthorMetadataId) {
		var ret int32
		return ret
	}
	return *o.AuthorMetadataId
}

// GetAuthorMetadataIdOk returns a tuple with the AuthorMetadataId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorResource) GetAuthorMetadataIdOk() (*int32, bool) {
	if o == nil || isNil(o.AuthorMetadataId) {
    return nil, false
	}
	return o.AuthorMetadataId, true
}

// HasAuthorMetadataId returns a boolean if a field has been set.
func (o *AuthorResource) HasAuthorMetadataId() bool {
	if o != nil && !isNil(o.AuthorMetadataId) {
		return true
	}

	return false
}

// SetAuthorMetadataId gets a reference to the given int32 and assigns it to the AuthorMetadataId field.
func (o *AuthorResource) SetAuthorMetadataId(v int32) {
	o.AuthorMetadataId = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *AuthorResource) GetStatus() AuthorStatusType {
	if o == nil || isNil(o.Status) {
		var ret AuthorStatusType
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorResource) GetStatusOk() (*AuthorStatusType, bool) {
	if o == nil || isNil(o.Status) {
    return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *AuthorResource) HasStatus() bool {
	if o != nil && !isNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given AuthorStatusType and assigns it to the Status field.
func (o *AuthorResource) SetStatus(v AuthorStatusType) {
	o.Status = &v
}

// GetEnded returns the Ended field value if set, zero value otherwise.
func (o *AuthorResource) GetEnded() bool {
	if o == nil || isNil(o.Ended) {
		var ret bool
		return ret
	}
	return *o.Ended
}

// GetEndedOk returns a tuple with the Ended field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorResource) GetEndedOk() (*bool, bool) {
	if o == nil || isNil(o.Ended) {
    return nil, false
	}
	return o.Ended, true
}

// HasEnded returns a boolean if a field has been set.
func (o *AuthorResource) HasEnded() bool {
	if o != nil && !isNil(o.Ended) {
		return true
	}

	return false
}

// SetEnded gets a reference to the given bool and assigns it to the Ended field.
func (o *AuthorResource) SetEnded(v bool) {
	o.Ended = &v
}

// GetAuthorName returns the AuthorName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AuthorResource) GetAuthorName() string {
	if o == nil || isNil(o.AuthorName.Get()) {
		var ret string
		return ret
	}
	return *o.AuthorName.Get()
}

// GetAuthorNameOk returns a tuple with the AuthorName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AuthorResource) GetAuthorNameOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.AuthorName.Get(), o.AuthorName.IsSet()
}

// HasAuthorName returns a boolean if a field has been set.
func (o *AuthorResource) HasAuthorName() bool {
	if o != nil && o.AuthorName.IsSet() {
		return true
	}

	return false
}

// SetAuthorName gets a reference to the given NullableString and assigns it to the AuthorName field.
func (o *AuthorResource) SetAuthorName(v string) {
	o.AuthorName.Set(&v)
}
// SetAuthorNameNil sets the value for AuthorName to be an explicit nil
func (o *AuthorResource) SetAuthorNameNil() {
	o.AuthorName.Set(nil)
}

// UnsetAuthorName ensures that no value is present for AuthorName, not even an explicit nil
func (o *AuthorResource) UnsetAuthorName() {
	o.AuthorName.Unset()
}

// GetAuthorNameLastFirst returns the AuthorNameLastFirst field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AuthorResource) GetAuthorNameLastFirst() string {
	if o == nil || isNil(o.AuthorNameLastFirst.Get()) {
		var ret string
		return ret
	}
	return *o.AuthorNameLastFirst.Get()
}

// GetAuthorNameLastFirstOk returns a tuple with the AuthorNameLastFirst field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AuthorResource) GetAuthorNameLastFirstOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.AuthorNameLastFirst.Get(), o.AuthorNameLastFirst.IsSet()
}

// HasAuthorNameLastFirst returns a boolean if a field has been set.
func (o *AuthorResource) HasAuthorNameLastFirst() bool {
	if o != nil && o.AuthorNameLastFirst.IsSet() {
		return true
	}

	return false
}

// SetAuthorNameLastFirst gets a reference to the given NullableString and assigns it to the AuthorNameLastFirst field.
func (o *AuthorResource) SetAuthorNameLastFirst(v string) {
	o.AuthorNameLastFirst.Set(&v)
}
// SetAuthorNameLastFirstNil sets the value for AuthorNameLastFirst to be an explicit nil
func (o *AuthorResource) SetAuthorNameLastFirstNil() {
	o.AuthorNameLastFirst.Set(nil)
}

// UnsetAuthorNameLastFirst ensures that no value is present for AuthorNameLastFirst, not even an explicit nil
func (o *AuthorResource) UnsetAuthorNameLastFirst() {
	o.AuthorNameLastFirst.Unset()
}

// GetForeignAuthorId returns the ForeignAuthorId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AuthorResource) GetForeignAuthorId() string {
	if o == nil || isNil(o.ForeignAuthorId.Get()) {
		var ret string
		return ret
	}
	return *o.ForeignAuthorId.Get()
}

// GetForeignAuthorIdOk returns a tuple with the ForeignAuthorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AuthorResource) GetForeignAuthorIdOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.ForeignAuthorId.Get(), o.ForeignAuthorId.IsSet()
}

// HasForeignAuthorId returns a boolean if a field has been set.
func (o *AuthorResource) HasForeignAuthorId() bool {
	if o != nil && o.ForeignAuthorId.IsSet() {
		return true
	}

	return false
}

// SetForeignAuthorId gets a reference to the given NullableString and assigns it to the ForeignAuthorId field.
func (o *AuthorResource) SetForeignAuthorId(v string) {
	o.ForeignAuthorId.Set(&v)
}
// SetForeignAuthorIdNil sets the value for ForeignAuthorId to be an explicit nil
func (o *AuthorResource) SetForeignAuthorIdNil() {
	o.ForeignAuthorId.Set(nil)
}

// UnsetForeignAuthorId ensures that no value is present for ForeignAuthorId, not even an explicit nil
func (o *AuthorResource) UnsetForeignAuthorId() {
	o.ForeignAuthorId.Unset()
}

// GetTitleSlug returns the TitleSlug field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AuthorResource) GetTitleSlug() string {
	if o == nil || isNil(o.TitleSlug.Get()) {
		var ret string
		return ret
	}
	return *o.TitleSlug.Get()
}

// GetTitleSlugOk returns a tuple with the TitleSlug field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AuthorResource) GetTitleSlugOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.TitleSlug.Get(), o.TitleSlug.IsSet()
}

// HasTitleSlug returns a boolean if a field has been set.
func (o *AuthorResource) HasTitleSlug() bool {
	if o != nil && o.TitleSlug.IsSet() {
		return true
	}

	return false
}

// SetTitleSlug gets a reference to the given NullableString and assigns it to the TitleSlug field.
func (o *AuthorResource) SetTitleSlug(v string) {
	o.TitleSlug.Set(&v)
}
// SetTitleSlugNil sets the value for TitleSlug to be an explicit nil
func (o *AuthorResource) SetTitleSlugNil() {
	o.TitleSlug.Set(nil)
}

// UnsetTitleSlug ensures that no value is present for TitleSlug, not even an explicit nil
func (o *AuthorResource) UnsetTitleSlug() {
	o.TitleSlug.Unset()
}

// GetOverview returns the Overview field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AuthorResource) GetOverview() string {
	if o == nil || isNil(o.Overview.Get()) {
		var ret string
		return ret
	}
	return *o.Overview.Get()
}

// GetOverviewOk returns a tuple with the Overview field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AuthorResource) GetOverviewOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.Overview.Get(), o.Overview.IsSet()
}

// HasOverview returns a boolean if a field has been set.
func (o *AuthorResource) HasOverview() bool {
	if o != nil && o.Overview.IsSet() {
		return true
	}

	return false
}

// SetOverview gets a reference to the given NullableString and assigns it to the Overview field.
func (o *AuthorResource) SetOverview(v string) {
	o.Overview.Set(&v)
}
// SetOverviewNil sets the value for Overview to be an explicit nil
func (o *AuthorResource) SetOverviewNil() {
	o.Overview.Set(nil)
}

// UnsetOverview ensures that no value is present for Overview, not even an explicit nil
func (o *AuthorResource) UnsetOverview() {
	o.Overview.Unset()
}

// GetDisambiguation returns the Disambiguation field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AuthorResource) GetDisambiguation() string {
	if o == nil || isNil(o.Disambiguation.Get()) {
		var ret string
		return ret
	}
	return *o.Disambiguation.Get()
}

// GetDisambiguationOk returns a tuple with the Disambiguation field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AuthorResource) GetDisambiguationOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.Disambiguation.Get(), o.Disambiguation.IsSet()
}

// HasDisambiguation returns a boolean if a field has been set.
func (o *AuthorResource) HasDisambiguation() bool {
	if o != nil && o.Disambiguation.IsSet() {
		return true
	}

	return false
}

// SetDisambiguation gets a reference to the given NullableString and assigns it to the Disambiguation field.
func (o *AuthorResource) SetDisambiguation(v string) {
	o.Disambiguation.Set(&v)
}
// SetDisambiguationNil sets the value for Disambiguation to be an explicit nil
func (o *AuthorResource) SetDisambiguationNil() {
	o.Disambiguation.Set(nil)
}

// UnsetDisambiguation ensures that no value is present for Disambiguation, not even an explicit nil
func (o *AuthorResource) UnsetDisambiguation() {
	o.Disambiguation.Unset()
}

// GetLinks returns the Links field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AuthorResource) GetLinks() []*Links {
	if o == nil {
		var ret []*Links
		return ret
	}
	return o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AuthorResource) GetLinksOk() ([]*Links, bool) {
	if o == nil || isNil(o.Links) {
    return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *AuthorResource) HasLinks() bool {
	if o != nil && isNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given []Links and assigns it to the Links field.
func (o *AuthorResource) SetLinks(v []*Links) {
	o.Links = v
}

// GetNextBook returns the NextBook field value if set, zero value otherwise.
func (o *AuthorResource) GetNextBook() Book {
	if o == nil || isNil(o.NextBook) {
		var ret Book
		return ret
	}
	return *o.NextBook
}

// GetNextBookOk returns a tuple with the NextBook field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorResource) GetNextBookOk() (*Book, bool) {
	if o == nil || isNil(o.NextBook) {
    return nil, false
	}
	return o.NextBook, true
}

// HasNextBook returns a boolean if a field has been set.
func (o *AuthorResource) HasNextBook() bool {
	if o != nil && !isNil(o.NextBook) {
		return true
	}

	return false
}

// SetNextBook gets a reference to the given Book and assigns it to the NextBook field.
func (o *AuthorResource) SetNextBook(v Book) {
	o.NextBook = &v
}

// GetLastBook returns the LastBook field value if set, zero value otherwise.
func (o *AuthorResource) GetLastBook() Book {
	if o == nil || isNil(o.LastBook) {
		var ret Book
		return ret
	}
	return *o.LastBook
}

// GetLastBookOk returns a tuple with the LastBook field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorResource) GetLastBookOk() (*Book, bool) {
	if o == nil || isNil(o.LastBook) {
    return nil, false
	}
	return o.LastBook, true
}

// HasLastBook returns a boolean if a field has been set.
func (o *AuthorResource) HasLastBook() bool {
	if o != nil && !isNil(o.LastBook) {
		return true
	}

	return false
}

// SetLastBook gets a reference to the given Book and assigns it to the LastBook field.
func (o *AuthorResource) SetLastBook(v Book) {
	o.LastBook = &v
}

// GetImages returns the Images field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AuthorResource) GetImages() []*MediaCover {
	if o == nil {
		var ret []*MediaCover
		return ret
	}
	return o.Images
}

// GetImagesOk returns a tuple with the Images field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AuthorResource) GetImagesOk() ([]*MediaCover, bool) {
	if o == nil || isNil(o.Images) {
    return nil, false
	}
	return o.Images, true
}

// HasImages returns a boolean if a field has been set.
func (o *AuthorResource) HasImages() bool {
	if o != nil && isNil(o.Images) {
		return true
	}

	return false
}

// SetImages gets a reference to the given []MediaCover and assigns it to the Images field.
func (o *AuthorResource) SetImages(v []*MediaCover) {
	o.Images = v
}

// GetRemotePoster returns the RemotePoster field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AuthorResource) GetRemotePoster() string {
	if o == nil || isNil(o.RemotePoster.Get()) {
		var ret string
		return ret
	}
	return *o.RemotePoster.Get()
}

// GetRemotePosterOk returns a tuple with the RemotePoster field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AuthorResource) GetRemotePosterOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.RemotePoster.Get(), o.RemotePoster.IsSet()
}

// HasRemotePoster returns a boolean if a field has been set.
func (o *AuthorResource) HasRemotePoster() bool {
	if o != nil && o.RemotePoster.IsSet() {
		return true
	}

	return false
}

// SetRemotePoster gets a reference to the given NullableString and assigns it to the RemotePoster field.
func (o *AuthorResource) SetRemotePoster(v string) {
	o.RemotePoster.Set(&v)
}
// SetRemotePosterNil sets the value for RemotePoster to be an explicit nil
func (o *AuthorResource) SetRemotePosterNil() {
	o.RemotePoster.Set(nil)
}

// UnsetRemotePoster ensures that no value is present for RemotePoster, not even an explicit nil
func (o *AuthorResource) UnsetRemotePoster() {
	o.RemotePoster.Unset()
}

// GetPath returns the Path field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AuthorResource) GetPath() string {
	if o == nil || isNil(o.Path.Get()) {
		var ret string
		return ret
	}
	return *o.Path.Get()
}

// GetPathOk returns a tuple with the Path field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AuthorResource) GetPathOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.Path.Get(), o.Path.IsSet()
}

// HasPath returns a boolean if a field has been set.
func (o *AuthorResource) HasPath() bool {
	if o != nil && o.Path.IsSet() {
		return true
	}

	return false
}

// SetPath gets a reference to the given NullableString and assigns it to the Path field.
func (o *AuthorResource) SetPath(v string) {
	o.Path.Set(&v)
}
// SetPathNil sets the value for Path to be an explicit nil
func (o *AuthorResource) SetPathNil() {
	o.Path.Set(nil)
}

// UnsetPath ensures that no value is present for Path, not even an explicit nil
func (o *AuthorResource) UnsetPath() {
	o.Path.Unset()
}

// GetQualityProfileId returns the QualityProfileId field value if set, zero value otherwise.
func (o *AuthorResource) GetQualityProfileId() int32 {
	if o == nil || isNil(o.QualityProfileId) {
		var ret int32
		return ret
	}
	return *o.QualityProfileId
}

// GetQualityProfileIdOk returns a tuple with the QualityProfileId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorResource) GetQualityProfileIdOk() (*int32, bool) {
	if o == nil || isNil(o.QualityProfileId) {
    return nil, false
	}
	return o.QualityProfileId, true
}

// HasQualityProfileId returns a boolean if a field has been set.
func (o *AuthorResource) HasQualityProfileId() bool {
	if o != nil && !isNil(o.QualityProfileId) {
		return true
	}

	return false
}

// SetQualityProfileId gets a reference to the given int32 and assigns it to the QualityProfileId field.
func (o *AuthorResource) SetQualityProfileId(v int32) {
	o.QualityProfileId = &v
}

// GetMetadataProfileId returns the MetadataProfileId field value if set, zero value otherwise.
func (o *AuthorResource) GetMetadataProfileId() int32 {
	if o == nil || isNil(o.MetadataProfileId) {
		var ret int32
		return ret
	}
	return *o.MetadataProfileId
}

// GetMetadataProfileIdOk returns a tuple with the MetadataProfileId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorResource) GetMetadataProfileIdOk() (*int32, bool) {
	if o == nil || isNil(o.MetadataProfileId) {
    return nil, false
	}
	return o.MetadataProfileId, true
}

// HasMetadataProfileId returns a boolean if a field has been set.
func (o *AuthorResource) HasMetadataProfileId() bool {
	if o != nil && !isNil(o.MetadataProfileId) {
		return true
	}

	return false
}

// SetMetadataProfileId gets a reference to the given int32 and assigns it to the MetadataProfileId field.
func (o *AuthorResource) SetMetadataProfileId(v int32) {
	o.MetadataProfileId = &v
}

// GetMonitored returns the Monitored field value if set, zero value otherwise.
func (o *AuthorResource) GetMonitored() bool {
	if o == nil || isNil(o.Monitored) {
		var ret bool
		return ret
	}
	return *o.Monitored
}

// GetMonitoredOk returns a tuple with the Monitored field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorResource) GetMonitoredOk() (*bool, bool) {
	if o == nil || isNil(o.Monitored) {
    return nil, false
	}
	return o.Monitored, true
}

// HasMonitored returns a boolean if a field has been set.
func (o *AuthorResource) HasMonitored() bool {
	if o != nil && !isNil(o.Monitored) {
		return true
	}

	return false
}

// SetMonitored gets a reference to the given bool and assigns it to the Monitored field.
func (o *AuthorResource) SetMonitored(v bool) {
	o.Monitored = &v
}

// GetMonitorNewItems returns the MonitorNewItems field value if set, zero value otherwise.
func (o *AuthorResource) GetMonitorNewItems() NewItemMonitorTypes {
	if o == nil || isNil(o.MonitorNewItems) {
		var ret NewItemMonitorTypes
		return ret
	}
	return *o.MonitorNewItems
}

// GetMonitorNewItemsOk returns a tuple with the MonitorNewItems field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorResource) GetMonitorNewItemsOk() (*NewItemMonitorTypes, bool) {
	if o == nil || isNil(o.MonitorNewItems) {
    return nil, false
	}
	return o.MonitorNewItems, true
}

// HasMonitorNewItems returns a boolean if a field has been set.
func (o *AuthorResource) HasMonitorNewItems() bool {
	if o != nil && !isNil(o.MonitorNewItems) {
		return true
	}

	return false
}

// SetMonitorNewItems gets a reference to the given NewItemMonitorTypes and assigns it to the MonitorNewItems field.
func (o *AuthorResource) SetMonitorNewItems(v NewItemMonitorTypes) {
	o.MonitorNewItems = &v
}

// GetRootFolderPath returns the RootFolderPath field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AuthorResource) GetRootFolderPath() string {
	if o == nil || isNil(o.RootFolderPath.Get()) {
		var ret string
		return ret
	}
	return *o.RootFolderPath.Get()
}

// GetRootFolderPathOk returns a tuple with the RootFolderPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AuthorResource) GetRootFolderPathOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.RootFolderPath.Get(), o.RootFolderPath.IsSet()
}

// HasRootFolderPath returns a boolean if a field has been set.
func (o *AuthorResource) HasRootFolderPath() bool {
	if o != nil && o.RootFolderPath.IsSet() {
		return true
	}

	return false
}

// SetRootFolderPath gets a reference to the given NullableString and assigns it to the RootFolderPath field.
func (o *AuthorResource) SetRootFolderPath(v string) {
	o.RootFolderPath.Set(&v)
}
// SetRootFolderPathNil sets the value for RootFolderPath to be an explicit nil
func (o *AuthorResource) SetRootFolderPathNil() {
	o.RootFolderPath.Set(nil)
}

// UnsetRootFolderPath ensures that no value is present for RootFolderPath, not even an explicit nil
func (o *AuthorResource) UnsetRootFolderPath() {
	o.RootFolderPath.Unset()
}

// GetGenres returns the Genres field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AuthorResource) GetGenres() []*string {
	if o == nil {
		var ret []*string
		return ret
	}
	return o.Genres
}

// GetGenresOk returns a tuple with the Genres field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AuthorResource) GetGenresOk() ([]*string, bool) {
	if o == nil || isNil(o.Genres) {
    return nil, false
	}
	return o.Genres, true
}

// HasGenres returns a boolean if a field has been set.
func (o *AuthorResource) HasGenres() bool {
	if o != nil && isNil(o.Genres) {
		return true
	}

	return false
}

// SetGenres gets a reference to the given []string and assigns it to the Genres field.
func (o *AuthorResource) SetGenres(v []*string) {
	o.Genres = v
}

// GetCleanName returns the CleanName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AuthorResource) GetCleanName() string {
	if o == nil || isNil(o.CleanName.Get()) {
		var ret string
		return ret
	}
	return *o.CleanName.Get()
}

// GetCleanNameOk returns a tuple with the CleanName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AuthorResource) GetCleanNameOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.CleanName.Get(), o.CleanName.IsSet()
}

// HasCleanName returns a boolean if a field has been set.
func (o *AuthorResource) HasCleanName() bool {
	if o != nil && o.CleanName.IsSet() {
		return true
	}

	return false
}

// SetCleanName gets a reference to the given NullableString and assigns it to the CleanName field.
func (o *AuthorResource) SetCleanName(v string) {
	o.CleanName.Set(&v)
}
// SetCleanNameNil sets the value for CleanName to be an explicit nil
func (o *AuthorResource) SetCleanNameNil() {
	o.CleanName.Set(nil)
}

// UnsetCleanName ensures that no value is present for CleanName, not even an explicit nil
func (o *AuthorResource) UnsetCleanName() {
	o.CleanName.Unset()
}

// GetSortName returns the SortName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AuthorResource) GetSortName() string {
	if o == nil || isNil(o.SortName.Get()) {
		var ret string
		return ret
	}
	return *o.SortName.Get()
}

// GetSortNameOk returns a tuple with the SortName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AuthorResource) GetSortNameOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.SortName.Get(), o.SortName.IsSet()
}

// HasSortName returns a boolean if a field has been set.
func (o *AuthorResource) HasSortName() bool {
	if o != nil && o.SortName.IsSet() {
		return true
	}

	return false
}

// SetSortName gets a reference to the given NullableString and assigns it to the SortName field.
func (o *AuthorResource) SetSortName(v string) {
	o.SortName.Set(&v)
}
// SetSortNameNil sets the value for SortName to be an explicit nil
func (o *AuthorResource) SetSortNameNil() {
	o.SortName.Set(nil)
}

// UnsetSortName ensures that no value is present for SortName, not even an explicit nil
func (o *AuthorResource) UnsetSortName() {
	o.SortName.Unset()
}

// GetSortNameLastFirst returns the SortNameLastFirst field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AuthorResource) GetSortNameLastFirst() string {
	if o == nil || isNil(o.SortNameLastFirst.Get()) {
		var ret string
		return ret
	}
	return *o.SortNameLastFirst.Get()
}

// GetSortNameLastFirstOk returns a tuple with the SortNameLastFirst field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AuthorResource) GetSortNameLastFirstOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.SortNameLastFirst.Get(), o.SortNameLastFirst.IsSet()
}

// HasSortNameLastFirst returns a boolean if a field has been set.
func (o *AuthorResource) HasSortNameLastFirst() bool {
	if o != nil && o.SortNameLastFirst.IsSet() {
		return true
	}

	return false
}

// SetSortNameLastFirst gets a reference to the given NullableString and assigns it to the SortNameLastFirst field.
func (o *AuthorResource) SetSortNameLastFirst(v string) {
	o.SortNameLastFirst.Set(&v)
}
// SetSortNameLastFirstNil sets the value for SortNameLastFirst to be an explicit nil
func (o *AuthorResource) SetSortNameLastFirstNil() {
	o.SortNameLastFirst.Set(nil)
}

// UnsetSortNameLastFirst ensures that no value is present for SortNameLastFirst, not even an explicit nil
func (o *AuthorResource) UnsetSortNameLastFirst() {
	o.SortNameLastFirst.Unset()
}

// GetTags returns the Tags field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AuthorResource) GetTags() []*int32 {
	if o == nil {
		var ret []*int32
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AuthorResource) GetTagsOk() ([]*int32, bool) {
	if o == nil || isNil(o.Tags) {
    return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *AuthorResource) HasTags() bool {
	if o != nil && isNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []int32 and assigns it to the Tags field.
func (o *AuthorResource) SetTags(v []*int32) {
	o.Tags = v
}

// GetAdded returns the Added field value if set, zero value otherwise.
func (o *AuthorResource) GetAdded() time.Time {
	if o == nil || isNil(o.Added) {
		var ret time.Time
		return ret
	}
	return *o.Added
}

// GetAddedOk returns a tuple with the Added field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorResource) GetAddedOk() (*time.Time, bool) {
	if o == nil || isNil(o.Added) {
    return nil, false
	}
	return o.Added, true
}

// HasAdded returns a boolean if a field has been set.
func (o *AuthorResource) HasAdded() bool {
	if o != nil && !isNil(o.Added) {
		return true
	}

	return false
}

// SetAdded gets a reference to the given time.Time and assigns it to the Added field.
func (o *AuthorResource) SetAdded(v time.Time) {
	o.Added = &v
}

// GetAddOptions returns the AddOptions field value if set, zero value otherwise.
func (o *AuthorResource) GetAddOptions() AddAuthorOptions {
	if o == nil || isNil(o.AddOptions) {
		var ret AddAuthorOptions
		return ret
	}
	return *o.AddOptions
}

// GetAddOptionsOk returns a tuple with the AddOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorResource) GetAddOptionsOk() (*AddAuthorOptions, bool) {
	if o == nil || isNil(o.AddOptions) {
    return nil, false
	}
	return o.AddOptions, true
}

// HasAddOptions returns a boolean if a field has been set.
func (o *AuthorResource) HasAddOptions() bool {
	if o != nil && !isNil(o.AddOptions) {
		return true
	}

	return false
}

// SetAddOptions gets a reference to the given AddAuthorOptions and assigns it to the AddOptions field.
func (o *AuthorResource) SetAddOptions(v AddAuthorOptions) {
	o.AddOptions = &v
}

// GetRatings returns the Ratings field value if set, zero value otherwise.
func (o *AuthorResource) GetRatings() Ratings {
	if o == nil || isNil(o.Ratings) {
		var ret Ratings
		return ret
	}
	return *o.Ratings
}

// GetRatingsOk returns a tuple with the Ratings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorResource) GetRatingsOk() (*Ratings, bool) {
	if o == nil || isNil(o.Ratings) {
    return nil, false
	}
	return o.Ratings, true
}

// HasRatings returns a boolean if a field has been set.
func (o *AuthorResource) HasRatings() bool {
	if o != nil && !isNil(o.Ratings) {
		return true
	}

	return false
}

// SetRatings gets a reference to the given Ratings and assigns it to the Ratings field.
func (o *AuthorResource) SetRatings(v Ratings) {
	o.Ratings = &v
}

// GetStatistics returns the Statistics field value if set, zero value otherwise.
func (o *AuthorResource) GetStatistics() AuthorStatisticsResource {
	if o == nil || isNil(o.Statistics) {
		var ret AuthorStatisticsResource
		return ret
	}
	return *o.Statistics
}

// GetStatisticsOk returns a tuple with the Statistics field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorResource) GetStatisticsOk() (*AuthorStatisticsResource, bool) {
	if o == nil || isNil(o.Statistics) {
    return nil, false
	}
	return o.Statistics, true
}

// HasStatistics returns a boolean if a field has been set.
func (o *AuthorResource) HasStatistics() bool {
	if o != nil && !isNil(o.Statistics) {
		return true
	}

	return false
}

// SetStatistics gets a reference to the given AuthorStatisticsResource and assigns it to the Statistics field.
func (o *AuthorResource) SetStatistics(v AuthorStatisticsResource) {
	o.Statistics = &v
}

func (o AuthorResource) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !isNil(o.AuthorMetadataId) {
		toSerialize["authorMetadataId"] = o.AuthorMetadataId
	}
	if !isNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !isNil(o.Ended) {
		toSerialize["ended"] = o.Ended
	}
	if o.AuthorName.IsSet() {
		toSerialize["authorName"] = o.AuthorName.Get()
	}
	if o.AuthorNameLastFirst.IsSet() {
		toSerialize["authorNameLastFirst"] = o.AuthorNameLastFirst.Get()
	}
	if o.ForeignAuthorId.IsSet() {
		toSerialize["foreignAuthorId"] = o.ForeignAuthorId.Get()
	}
	if o.TitleSlug.IsSet() {
		toSerialize["titleSlug"] = o.TitleSlug.Get()
	}
	if o.Overview.IsSet() {
		toSerialize["overview"] = o.Overview.Get()
	}
	if o.Disambiguation.IsSet() {
		toSerialize["disambiguation"] = o.Disambiguation.Get()
	}
	if o.Links != nil {
		toSerialize["links"] = o.Links
	}
	if !isNil(o.NextBook) {
		toSerialize["nextBook"] = o.NextBook
	}
	if !isNil(o.LastBook) {
		toSerialize["lastBook"] = o.LastBook
	}
	if o.Images != nil {
		toSerialize["images"] = o.Images
	}
	if o.RemotePoster.IsSet() {
		toSerialize["remotePoster"] = o.RemotePoster.Get()
	}
	if o.Path.IsSet() {
		toSerialize["path"] = o.Path.Get()
	}
	if !isNil(o.QualityProfileId) {
		toSerialize["qualityProfileId"] = o.QualityProfileId
	}
	if !isNil(o.MetadataProfileId) {
		toSerialize["metadataProfileId"] = o.MetadataProfileId
	}
	if !isNil(o.Monitored) {
		toSerialize["monitored"] = o.Monitored
	}
	if !isNil(o.MonitorNewItems) {
		toSerialize["monitorNewItems"] = o.MonitorNewItems
	}
	if o.RootFolderPath.IsSet() {
		toSerialize["rootFolderPath"] = o.RootFolderPath.Get()
	}
	if o.Genres != nil {
		toSerialize["genres"] = o.Genres
	}
	if o.CleanName.IsSet() {
		toSerialize["cleanName"] = o.CleanName.Get()
	}
	if o.SortName.IsSet() {
		toSerialize["sortName"] = o.SortName.Get()
	}
	if o.SortNameLastFirst.IsSet() {
		toSerialize["sortNameLastFirst"] = o.SortNameLastFirst.Get()
	}
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	if !isNil(o.Added) {
		toSerialize["added"] = o.Added
	}
	if !isNil(o.AddOptions) {
		toSerialize["addOptions"] = o.AddOptions
	}
	if !isNil(o.Ratings) {
		toSerialize["ratings"] = o.Ratings
	}
	if !isNil(o.Statistics) {
		toSerialize["statistics"] = o.Statistics
	}
	return json.Marshal(toSerialize)
}

type NullableAuthorResource struct {
	value *AuthorResource
	isSet bool
}

func (v NullableAuthorResource) Get() *AuthorResource {
	return v.value
}

func (v *NullableAuthorResource) Set(val *AuthorResource) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthorResource) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthorResource) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthorResource(val *AuthorResource) *NullableAuthorResource {
	return &NullableAuthorResource{value: val, isSet: true}
}

func (v NullableAuthorResource) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthorResource) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


