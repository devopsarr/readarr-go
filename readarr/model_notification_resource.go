/*
Readarr

Readarr API docs

API version: v0.3.18.2411
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package readarr

import (
	"encoding/json"
)

// NotificationResource struct for NotificationResource
type NotificationResource struct {
	Id *int32 `json:"id,omitempty"`
	Name NullableString `json:"name,omitempty"`
	Fields []*Field `json:"fields,omitempty"`
	ImplementationName NullableString `json:"implementationName,omitempty"`
	Implementation NullableString `json:"implementation,omitempty"`
	ConfigContract NullableString `json:"configContract,omitempty"`
	InfoLink NullableString `json:"infoLink,omitempty"`
	Message *ProviderMessage `json:"message,omitempty"`
	Tags []*int32 `json:"tags,omitempty"`
	Presets []*NotificationResource `json:"presets,omitempty"`
	Link NullableString `json:"link,omitempty"`
	OnGrab *bool `json:"onGrab,omitempty"`
	OnReleaseImport *bool `json:"onReleaseImport,omitempty"`
	OnUpgrade *bool `json:"onUpgrade,omitempty"`
	OnRename *bool `json:"onRename,omitempty"`
	OnAuthorAdded *bool `json:"onAuthorAdded,omitempty"`
	OnAuthorDelete *bool `json:"onAuthorDelete,omitempty"`
	OnBookDelete *bool `json:"onBookDelete,omitempty"`
	OnBookFileDelete *bool `json:"onBookFileDelete,omitempty"`
	OnBookFileDeleteForUpgrade *bool `json:"onBookFileDeleteForUpgrade,omitempty"`
	OnHealthIssue *bool `json:"onHealthIssue,omitempty"`
	OnDownloadFailure *bool `json:"onDownloadFailure,omitempty"`
	OnImportFailure *bool `json:"onImportFailure,omitempty"`
	OnBookRetag *bool `json:"onBookRetag,omitempty"`
	OnApplicationUpdate *bool `json:"onApplicationUpdate,omitempty"`
	SupportsOnGrab *bool `json:"supportsOnGrab,omitempty"`
	SupportsOnReleaseImport *bool `json:"supportsOnReleaseImport,omitempty"`
	SupportsOnUpgrade *bool `json:"supportsOnUpgrade,omitempty"`
	SupportsOnRename *bool `json:"supportsOnRename,omitempty"`
	SupportsOnAuthorAdded *bool `json:"supportsOnAuthorAdded,omitempty"`
	SupportsOnAuthorDelete *bool `json:"supportsOnAuthorDelete,omitempty"`
	SupportsOnBookDelete *bool `json:"supportsOnBookDelete,omitempty"`
	SupportsOnBookFileDelete *bool `json:"supportsOnBookFileDelete,omitempty"`
	SupportsOnBookFileDeleteForUpgrade *bool `json:"supportsOnBookFileDeleteForUpgrade,omitempty"`
	SupportsOnHealthIssue *bool `json:"supportsOnHealthIssue,omitempty"`
	IncludeHealthWarnings *bool `json:"includeHealthWarnings,omitempty"`
	SupportsOnDownloadFailure *bool `json:"supportsOnDownloadFailure,omitempty"`
	SupportsOnImportFailure *bool `json:"supportsOnImportFailure,omitempty"`
	SupportsOnBookRetag *bool `json:"supportsOnBookRetag,omitempty"`
	SupportsOnApplicationUpdate *bool `json:"supportsOnApplicationUpdate,omitempty"`
	TestCommand NullableString `json:"testCommand,omitempty"`
}

// NewNotificationResource instantiates a new NotificationResource object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNotificationResource() *NotificationResource {
	this := NotificationResource{}
	return &this
}

// NewNotificationResourceWithDefaults instantiates a new NotificationResource object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNotificationResourceWithDefaults() *NotificationResource {
	this := NotificationResource{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *NotificationResource) GetId() int32 {
	if o == nil || isNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotificationResource) GetIdOk() (*int32, bool) {
	if o == nil || isNil(o.Id) {
    return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *NotificationResource) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *NotificationResource) SetId(v int32) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NotificationResource) GetName() string {
	if o == nil || isNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NotificationResource) GetNameOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *NotificationResource) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *NotificationResource) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *NotificationResource) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *NotificationResource) UnsetName() {
	o.Name.Unset()
}

// GetFields returns the Fields field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NotificationResource) GetFields() []*Field {
	if o == nil {
		var ret []*Field
		return ret
	}
	return o.Fields
}

// GetFieldsOk returns a tuple with the Fields field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NotificationResource) GetFieldsOk() ([]*Field, bool) {
	if o == nil || isNil(o.Fields) {
    return nil, false
	}
	return o.Fields, true
}

// HasFields returns a boolean if a field has been set.
func (o *NotificationResource) HasFields() bool {
	if o != nil && isNil(o.Fields) {
		return true
	}

	return false
}

// SetFields gets a reference to the given []Field and assigns it to the Fields field.
func (o *NotificationResource) SetFields(v []*Field) {
	o.Fields = v
}

// GetImplementationName returns the ImplementationName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NotificationResource) GetImplementationName() string {
	if o == nil || isNil(o.ImplementationName.Get()) {
		var ret string
		return ret
	}
	return *o.ImplementationName.Get()
}

// GetImplementationNameOk returns a tuple with the ImplementationName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NotificationResource) GetImplementationNameOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.ImplementationName.Get(), o.ImplementationName.IsSet()
}

// HasImplementationName returns a boolean if a field has been set.
func (o *NotificationResource) HasImplementationName() bool {
	if o != nil && o.ImplementationName.IsSet() {
		return true
	}

	return false
}

// SetImplementationName gets a reference to the given NullableString and assigns it to the ImplementationName field.
func (o *NotificationResource) SetImplementationName(v string) {
	o.ImplementationName.Set(&v)
}
// SetImplementationNameNil sets the value for ImplementationName to be an explicit nil
func (o *NotificationResource) SetImplementationNameNil() {
	o.ImplementationName.Set(nil)
}

// UnsetImplementationName ensures that no value is present for ImplementationName, not even an explicit nil
func (o *NotificationResource) UnsetImplementationName() {
	o.ImplementationName.Unset()
}

// GetImplementation returns the Implementation field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NotificationResource) GetImplementation() string {
	if o == nil || isNil(o.Implementation.Get()) {
		var ret string
		return ret
	}
	return *o.Implementation.Get()
}

// GetImplementationOk returns a tuple with the Implementation field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NotificationResource) GetImplementationOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.Implementation.Get(), o.Implementation.IsSet()
}

// HasImplementation returns a boolean if a field has been set.
func (o *NotificationResource) HasImplementation() bool {
	if o != nil && o.Implementation.IsSet() {
		return true
	}

	return false
}

// SetImplementation gets a reference to the given NullableString and assigns it to the Implementation field.
func (o *NotificationResource) SetImplementation(v string) {
	o.Implementation.Set(&v)
}
// SetImplementationNil sets the value for Implementation to be an explicit nil
func (o *NotificationResource) SetImplementationNil() {
	o.Implementation.Set(nil)
}

// UnsetImplementation ensures that no value is present for Implementation, not even an explicit nil
func (o *NotificationResource) UnsetImplementation() {
	o.Implementation.Unset()
}

// GetConfigContract returns the ConfigContract field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NotificationResource) GetConfigContract() string {
	if o == nil || isNil(o.ConfigContract.Get()) {
		var ret string
		return ret
	}
	return *o.ConfigContract.Get()
}

// GetConfigContractOk returns a tuple with the ConfigContract field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NotificationResource) GetConfigContractOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.ConfigContract.Get(), o.ConfigContract.IsSet()
}

// HasConfigContract returns a boolean if a field has been set.
func (o *NotificationResource) HasConfigContract() bool {
	if o != nil && o.ConfigContract.IsSet() {
		return true
	}

	return false
}

// SetConfigContract gets a reference to the given NullableString and assigns it to the ConfigContract field.
func (o *NotificationResource) SetConfigContract(v string) {
	o.ConfigContract.Set(&v)
}
// SetConfigContractNil sets the value for ConfigContract to be an explicit nil
func (o *NotificationResource) SetConfigContractNil() {
	o.ConfigContract.Set(nil)
}

// UnsetConfigContract ensures that no value is present for ConfigContract, not even an explicit nil
func (o *NotificationResource) UnsetConfigContract() {
	o.ConfigContract.Unset()
}

// GetInfoLink returns the InfoLink field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NotificationResource) GetInfoLink() string {
	if o == nil || isNil(o.InfoLink.Get()) {
		var ret string
		return ret
	}
	return *o.InfoLink.Get()
}

// GetInfoLinkOk returns a tuple with the InfoLink field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NotificationResource) GetInfoLinkOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.InfoLink.Get(), o.InfoLink.IsSet()
}

// HasInfoLink returns a boolean if a field has been set.
func (o *NotificationResource) HasInfoLink() bool {
	if o != nil && o.InfoLink.IsSet() {
		return true
	}

	return false
}

// SetInfoLink gets a reference to the given NullableString and assigns it to the InfoLink field.
func (o *NotificationResource) SetInfoLink(v string) {
	o.InfoLink.Set(&v)
}
// SetInfoLinkNil sets the value for InfoLink to be an explicit nil
func (o *NotificationResource) SetInfoLinkNil() {
	o.InfoLink.Set(nil)
}

// UnsetInfoLink ensures that no value is present for InfoLink, not even an explicit nil
func (o *NotificationResource) UnsetInfoLink() {
	o.InfoLink.Unset()
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *NotificationResource) GetMessage() ProviderMessage {
	if o == nil || isNil(o.Message) {
		var ret ProviderMessage
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotificationResource) GetMessageOk() (*ProviderMessage, bool) {
	if o == nil || isNil(o.Message) {
    return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *NotificationResource) HasMessage() bool {
	if o != nil && !isNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given ProviderMessage and assigns it to the Message field.
func (o *NotificationResource) SetMessage(v ProviderMessage) {
	o.Message = &v
}

// GetTags returns the Tags field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NotificationResource) GetTags() []*int32 {
	if o == nil {
		var ret []*int32
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NotificationResource) GetTagsOk() ([]*int32, bool) {
	if o == nil || isNil(o.Tags) {
    return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *NotificationResource) HasTags() bool {
	if o != nil && isNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []int32 and assigns it to the Tags field.
func (o *NotificationResource) SetTags(v []*int32) {
	o.Tags = v
}

// GetPresets returns the Presets field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NotificationResource) GetPresets() []*NotificationResource {
	if o == nil {
		var ret []*NotificationResource
		return ret
	}
	return o.Presets
}

// GetPresetsOk returns a tuple with the Presets field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NotificationResource) GetPresetsOk() ([]*NotificationResource, bool) {
	if o == nil || isNil(o.Presets) {
    return nil, false
	}
	return o.Presets, true
}

// HasPresets returns a boolean if a field has been set.
func (o *NotificationResource) HasPresets() bool {
	if o != nil && isNil(o.Presets) {
		return true
	}

	return false
}

// SetPresets gets a reference to the given []NotificationResource and assigns it to the Presets field.
func (o *NotificationResource) SetPresets(v []*NotificationResource) {
	o.Presets = v
}

// GetLink returns the Link field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NotificationResource) GetLink() string {
	if o == nil || isNil(o.Link.Get()) {
		var ret string
		return ret
	}
	return *o.Link.Get()
}

// GetLinkOk returns a tuple with the Link field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NotificationResource) GetLinkOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.Link.Get(), o.Link.IsSet()
}

// HasLink returns a boolean if a field has been set.
func (o *NotificationResource) HasLink() bool {
	if o != nil && o.Link.IsSet() {
		return true
	}

	return false
}

// SetLink gets a reference to the given NullableString and assigns it to the Link field.
func (o *NotificationResource) SetLink(v string) {
	o.Link.Set(&v)
}
// SetLinkNil sets the value for Link to be an explicit nil
func (o *NotificationResource) SetLinkNil() {
	o.Link.Set(nil)
}

// UnsetLink ensures that no value is present for Link, not even an explicit nil
func (o *NotificationResource) UnsetLink() {
	o.Link.Unset()
}

// GetOnGrab returns the OnGrab field value if set, zero value otherwise.
func (o *NotificationResource) GetOnGrab() bool {
	if o == nil || isNil(o.OnGrab) {
		var ret bool
		return ret
	}
	return *o.OnGrab
}

// GetOnGrabOk returns a tuple with the OnGrab field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotificationResource) GetOnGrabOk() (*bool, bool) {
	if o == nil || isNil(o.OnGrab) {
    return nil, false
	}
	return o.OnGrab, true
}

// HasOnGrab returns a boolean if a field has been set.
func (o *NotificationResource) HasOnGrab() bool {
	if o != nil && !isNil(o.OnGrab) {
		return true
	}

	return false
}

// SetOnGrab gets a reference to the given bool and assigns it to the OnGrab field.
func (o *NotificationResource) SetOnGrab(v bool) {
	o.OnGrab = &v
}

// GetOnReleaseImport returns the OnReleaseImport field value if set, zero value otherwise.
func (o *NotificationResource) GetOnReleaseImport() bool {
	if o == nil || isNil(o.OnReleaseImport) {
		var ret bool
		return ret
	}
	return *o.OnReleaseImport
}

// GetOnReleaseImportOk returns a tuple with the OnReleaseImport field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotificationResource) GetOnReleaseImportOk() (*bool, bool) {
	if o == nil || isNil(o.OnReleaseImport) {
    return nil, false
	}
	return o.OnReleaseImport, true
}

// HasOnReleaseImport returns a boolean if a field has been set.
func (o *NotificationResource) HasOnReleaseImport() bool {
	if o != nil && !isNil(o.OnReleaseImport) {
		return true
	}

	return false
}

// SetOnReleaseImport gets a reference to the given bool and assigns it to the OnReleaseImport field.
func (o *NotificationResource) SetOnReleaseImport(v bool) {
	o.OnReleaseImport = &v
}

// GetOnUpgrade returns the OnUpgrade field value if set, zero value otherwise.
func (o *NotificationResource) GetOnUpgrade() bool {
	if o == nil || isNil(o.OnUpgrade) {
		var ret bool
		return ret
	}
	return *o.OnUpgrade
}

// GetOnUpgradeOk returns a tuple with the OnUpgrade field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotificationResource) GetOnUpgradeOk() (*bool, bool) {
	if o == nil || isNil(o.OnUpgrade) {
    return nil, false
	}
	return o.OnUpgrade, true
}

// HasOnUpgrade returns a boolean if a field has been set.
func (o *NotificationResource) HasOnUpgrade() bool {
	if o != nil && !isNil(o.OnUpgrade) {
		return true
	}

	return false
}

// SetOnUpgrade gets a reference to the given bool and assigns it to the OnUpgrade field.
func (o *NotificationResource) SetOnUpgrade(v bool) {
	o.OnUpgrade = &v
}

// GetOnRename returns the OnRename field value if set, zero value otherwise.
func (o *NotificationResource) GetOnRename() bool {
	if o == nil || isNil(o.OnRename) {
		var ret bool
		return ret
	}
	return *o.OnRename
}

// GetOnRenameOk returns a tuple with the OnRename field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotificationResource) GetOnRenameOk() (*bool, bool) {
	if o == nil || isNil(o.OnRename) {
    return nil, false
	}
	return o.OnRename, true
}

// HasOnRename returns a boolean if a field has been set.
func (o *NotificationResource) HasOnRename() bool {
	if o != nil && !isNil(o.OnRename) {
		return true
	}

	return false
}

// SetOnRename gets a reference to the given bool and assigns it to the OnRename field.
func (o *NotificationResource) SetOnRename(v bool) {
	o.OnRename = &v
}

// GetOnAuthorAdded returns the OnAuthorAdded field value if set, zero value otherwise.
func (o *NotificationResource) GetOnAuthorAdded() bool {
	if o == nil || isNil(o.OnAuthorAdded) {
		var ret bool
		return ret
	}
	return *o.OnAuthorAdded
}

// GetOnAuthorAddedOk returns a tuple with the OnAuthorAdded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotificationResource) GetOnAuthorAddedOk() (*bool, bool) {
	if o == nil || isNil(o.OnAuthorAdded) {
    return nil, false
	}
	return o.OnAuthorAdded, true
}

// HasOnAuthorAdded returns a boolean if a field has been set.
func (o *NotificationResource) HasOnAuthorAdded() bool {
	if o != nil && !isNil(o.OnAuthorAdded) {
		return true
	}

	return false
}

// SetOnAuthorAdded gets a reference to the given bool and assigns it to the OnAuthorAdded field.
func (o *NotificationResource) SetOnAuthorAdded(v bool) {
	o.OnAuthorAdded = &v
}

// GetOnAuthorDelete returns the OnAuthorDelete field value if set, zero value otherwise.
func (o *NotificationResource) GetOnAuthorDelete() bool {
	if o == nil || isNil(o.OnAuthorDelete) {
		var ret bool
		return ret
	}
	return *o.OnAuthorDelete
}

// GetOnAuthorDeleteOk returns a tuple with the OnAuthorDelete field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotificationResource) GetOnAuthorDeleteOk() (*bool, bool) {
	if o == nil || isNil(o.OnAuthorDelete) {
    return nil, false
	}
	return o.OnAuthorDelete, true
}

// HasOnAuthorDelete returns a boolean if a field has been set.
func (o *NotificationResource) HasOnAuthorDelete() bool {
	if o != nil && !isNil(o.OnAuthorDelete) {
		return true
	}

	return false
}

// SetOnAuthorDelete gets a reference to the given bool and assigns it to the OnAuthorDelete field.
func (o *NotificationResource) SetOnAuthorDelete(v bool) {
	o.OnAuthorDelete = &v
}

// GetOnBookDelete returns the OnBookDelete field value if set, zero value otherwise.
func (o *NotificationResource) GetOnBookDelete() bool {
	if o == nil || isNil(o.OnBookDelete) {
		var ret bool
		return ret
	}
	return *o.OnBookDelete
}

// GetOnBookDeleteOk returns a tuple with the OnBookDelete field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotificationResource) GetOnBookDeleteOk() (*bool, bool) {
	if o == nil || isNil(o.OnBookDelete) {
    return nil, false
	}
	return o.OnBookDelete, true
}

// HasOnBookDelete returns a boolean if a field has been set.
func (o *NotificationResource) HasOnBookDelete() bool {
	if o != nil && !isNil(o.OnBookDelete) {
		return true
	}

	return false
}

// SetOnBookDelete gets a reference to the given bool and assigns it to the OnBookDelete field.
func (o *NotificationResource) SetOnBookDelete(v bool) {
	o.OnBookDelete = &v
}

// GetOnBookFileDelete returns the OnBookFileDelete field value if set, zero value otherwise.
func (o *NotificationResource) GetOnBookFileDelete() bool {
	if o == nil || isNil(o.OnBookFileDelete) {
		var ret bool
		return ret
	}
	return *o.OnBookFileDelete
}

// GetOnBookFileDeleteOk returns a tuple with the OnBookFileDelete field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotificationResource) GetOnBookFileDeleteOk() (*bool, bool) {
	if o == nil || isNil(o.OnBookFileDelete) {
    return nil, false
	}
	return o.OnBookFileDelete, true
}

// HasOnBookFileDelete returns a boolean if a field has been set.
func (o *NotificationResource) HasOnBookFileDelete() bool {
	if o != nil && !isNil(o.OnBookFileDelete) {
		return true
	}

	return false
}

// SetOnBookFileDelete gets a reference to the given bool and assigns it to the OnBookFileDelete field.
func (o *NotificationResource) SetOnBookFileDelete(v bool) {
	o.OnBookFileDelete = &v
}

// GetOnBookFileDeleteForUpgrade returns the OnBookFileDeleteForUpgrade field value if set, zero value otherwise.
func (o *NotificationResource) GetOnBookFileDeleteForUpgrade() bool {
	if o == nil || isNil(o.OnBookFileDeleteForUpgrade) {
		var ret bool
		return ret
	}
	return *o.OnBookFileDeleteForUpgrade
}

// GetOnBookFileDeleteForUpgradeOk returns a tuple with the OnBookFileDeleteForUpgrade field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotificationResource) GetOnBookFileDeleteForUpgradeOk() (*bool, bool) {
	if o == nil || isNil(o.OnBookFileDeleteForUpgrade) {
    return nil, false
	}
	return o.OnBookFileDeleteForUpgrade, true
}

// HasOnBookFileDeleteForUpgrade returns a boolean if a field has been set.
func (o *NotificationResource) HasOnBookFileDeleteForUpgrade() bool {
	if o != nil && !isNil(o.OnBookFileDeleteForUpgrade) {
		return true
	}

	return false
}

// SetOnBookFileDeleteForUpgrade gets a reference to the given bool and assigns it to the OnBookFileDeleteForUpgrade field.
func (o *NotificationResource) SetOnBookFileDeleteForUpgrade(v bool) {
	o.OnBookFileDeleteForUpgrade = &v
}

// GetOnHealthIssue returns the OnHealthIssue field value if set, zero value otherwise.
func (o *NotificationResource) GetOnHealthIssue() bool {
	if o == nil || isNil(o.OnHealthIssue) {
		var ret bool
		return ret
	}
	return *o.OnHealthIssue
}

// GetOnHealthIssueOk returns a tuple with the OnHealthIssue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotificationResource) GetOnHealthIssueOk() (*bool, bool) {
	if o == nil || isNil(o.OnHealthIssue) {
    return nil, false
	}
	return o.OnHealthIssue, true
}

// HasOnHealthIssue returns a boolean if a field has been set.
func (o *NotificationResource) HasOnHealthIssue() bool {
	if o != nil && !isNil(o.OnHealthIssue) {
		return true
	}

	return false
}

// SetOnHealthIssue gets a reference to the given bool and assigns it to the OnHealthIssue field.
func (o *NotificationResource) SetOnHealthIssue(v bool) {
	o.OnHealthIssue = &v
}

// GetOnDownloadFailure returns the OnDownloadFailure field value if set, zero value otherwise.
func (o *NotificationResource) GetOnDownloadFailure() bool {
	if o == nil || isNil(o.OnDownloadFailure) {
		var ret bool
		return ret
	}
	return *o.OnDownloadFailure
}

// GetOnDownloadFailureOk returns a tuple with the OnDownloadFailure field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotificationResource) GetOnDownloadFailureOk() (*bool, bool) {
	if o == nil || isNil(o.OnDownloadFailure) {
    return nil, false
	}
	return o.OnDownloadFailure, true
}

// HasOnDownloadFailure returns a boolean if a field has been set.
func (o *NotificationResource) HasOnDownloadFailure() bool {
	if o != nil && !isNil(o.OnDownloadFailure) {
		return true
	}

	return false
}

// SetOnDownloadFailure gets a reference to the given bool and assigns it to the OnDownloadFailure field.
func (o *NotificationResource) SetOnDownloadFailure(v bool) {
	o.OnDownloadFailure = &v
}

// GetOnImportFailure returns the OnImportFailure field value if set, zero value otherwise.
func (o *NotificationResource) GetOnImportFailure() bool {
	if o == nil || isNil(o.OnImportFailure) {
		var ret bool
		return ret
	}
	return *o.OnImportFailure
}

// GetOnImportFailureOk returns a tuple with the OnImportFailure field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotificationResource) GetOnImportFailureOk() (*bool, bool) {
	if o == nil || isNil(o.OnImportFailure) {
    return nil, false
	}
	return o.OnImportFailure, true
}

// HasOnImportFailure returns a boolean if a field has been set.
func (o *NotificationResource) HasOnImportFailure() bool {
	if o != nil && !isNil(o.OnImportFailure) {
		return true
	}

	return false
}

// SetOnImportFailure gets a reference to the given bool and assigns it to the OnImportFailure field.
func (o *NotificationResource) SetOnImportFailure(v bool) {
	o.OnImportFailure = &v
}

// GetOnBookRetag returns the OnBookRetag field value if set, zero value otherwise.
func (o *NotificationResource) GetOnBookRetag() bool {
	if o == nil || isNil(o.OnBookRetag) {
		var ret bool
		return ret
	}
	return *o.OnBookRetag
}

// GetOnBookRetagOk returns a tuple with the OnBookRetag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotificationResource) GetOnBookRetagOk() (*bool, bool) {
	if o == nil || isNil(o.OnBookRetag) {
    return nil, false
	}
	return o.OnBookRetag, true
}

// HasOnBookRetag returns a boolean if a field has been set.
func (o *NotificationResource) HasOnBookRetag() bool {
	if o != nil && !isNil(o.OnBookRetag) {
		return true
	}

	return false
}

// SetOnBookRetag gets a reference to the given bool and assigns it to the OnBookRetag field.
func (o *NotificationResource) SetOnBookRetag(v bool) {
	o.OnBookRetag = &v
}

// GetOnApplicationUpdate returns the OnApplicationUpdate field value if set, zero value otherwise.
func (o *NotificationResource) GetOnApplicationUpdate() bool {
	if o == nil || isNil(o.OnApplicationUpdate) {
		var ret bool
		return ret
	}
	return *o.OnApplicationUpdate
}

// GetOnApplicationUpdateOk returns a tuple with the OnApplicationUpdate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotificationResource) GetOnApplicationUpdateOk() (*bool, bool) {
	if o == nil || isNil(o.OnApplicationUpdate) {
    return nil, false
	}
	return o.OnApplicationUpdate, true
}

// HasOnApplicationUpdate returns a boolean if a field has been set.
func (o *NotificationResource) HasOnApplicationUpdate() bool {
	if o != nil && !isNil(o.OnApplicationUpdate) {
		return true
	}

	return false
}

// SetOnApplicationUpdate gets a reference to the given bool and assigns it to the OnApplicationUpdate field.
func (o *NotificationResource) SetOnApplicationUpdate(v bool) {
	o.OnApplicationUpdate = &v
}

// GetSupportsOnGrab returns the SupportsOnGrab field value if set, zero value otherwise.
func (o *NotificationResource) GetSupportsOnGrab() bool {
	if o == nil || isNil(o.SupportsOnGrab) {
		var ret bool
		return ret
	}
	return *o.SupportsOnGrab
}

// GetSupportsOnGrabOk returns a tuple with the SupportsOnGrab field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotificationResource) GetSupportsOnGrabOk() (*bool, bool) {
	if o == nil || isNil(o.SupportsOnGrab) {
    return nil, false
	}
	return o.SupportsOnGrab, true
}

// HasSupportsOnGrab returns a boolean if a field has been set.
func (o *NotificationResource) HasSupportsOnGrab() bool {
	if o != nil && !isNil(o.SupportsOnGrab) {
		return true
	}

	return false
}

// SetSupportsOnGrab gets a reference to the given bool and assigns it to the SupportsOnGrab field.
func (o *NotificationResource) SetSupportsOnGrab(v bool) {
	o.SupportsOnGrab = &v
}

// GetSupportsOnReleaseImport returns the SupportsOnReleaseImport field value if set, zero value otherwise.
func (o *NotificationResource) GetSupportsOnReleaseImport() bool {
	if o == nil || isNil(o.SupportsOnReleaseImport) {
		var ret bool
		return ret
	}
	return *o.SupportsOnReleaseImport
}

// GetSupportsOnReleaseImportOk returns a tuple with the SupportsOnReleaseImport field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotificationResource) GetSupportsOnReleaseImportOk() (*bool, bool) {
	if o == nil || isNil(o.SupportsOnReleaseImport) {
    return nil, false
	}
	return o.SupportsOnReleaseImport, true
}

// HasSupportsOnReleaseImport returns a boolean if a field has been set.
func (o *NotificationResource) HasSupportsOnReleaseImport() bool {
	if o != nil && !isNil(o.SupportsOnReleaseImport) {
		return true
	}

	return false
}

// SetSupportsOnReleaseImport gets a reference to the given bool and assigns it to the SupportsOnReleaseImport field.
func (o *NotificationResource) SetSupportsOnReleaseImport(v bool) {
	o.SupportsOnReleaseImport = &v
}

// GetSupportsOnUpgrade returns the SupportsOnUpgrade field value if set, zero value otherwise.
func (o *NotificationResource) GetSupportsOnUpgrade() bool {
	if o == nil || isNil(o.SupportsOnUpgrade) {
		var ret bool
		return ret
	}
	return *o.SupportsOnUpgrade
}

// GetSupportsOnUpgradeOk returns a tuple with the SupportsOnUpgrade field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotificationResource) GetSupportsOnUpgradeOk() (*bool, bool) {
	if o == nil || isNil(o.SupportsOnUpgrade) {
    return nil, false
	}
	return o.SupportsOnUpgrade, true
}

// HasSupportsOnUpgrade returns a boolean if a field has been set.
func (o *NotificationResource) HasSupportsOnUpgrade() bool {
	if o != nil && !isNil(o.SupportsOnUpgrade) {
		return true
	}

	return false
}

// SetSupportsOnUpgrade gets a reference to the given bool and assigns it to the SupportsOnUpgrade field.
func (o *NotificationResource) SetSupportsOnUpgrade(v bool) {
	o.SupportsOnUpgrade = &v
}

// GetSupportsOnRename returns the SupportsOnRename field value if set, zero value otherwise.
func (o *NotificationResource) GetSupportsOnRename() bool {
	if o == nil || isNil(o.SupportsOnRename) {
		var ret bool
		return ret
	}
	return *o.SupportsOnRename
}

// GetSupportsOnRenameOk returns a tuple with the SupportsOnRename field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotificationResource) GetSupportsOnRenameOk() (*bool, bool) {
	if o == nil || isNil(o.SupportsOnRename) {
    return nil, false
	}
	return o.SupportsOnRename, true
}

// HasSupportsOnRename returns a boolean if a field has been set.
func (o *NotificationResource) HasSupportsOnRename() bool {
	if o != nil && !isNil(o.SupportsOnRename) {
		return true
	}

	return false
}

// SetSupportsOnRename gets a reference to the given bool and assigns it to the SupportsOnRename field.
func (o *NotificationResource) SetSupportsOnRename(v bool) {
	o.SupportsOnRename = &v
}

// GetSupportsOnAuthorAdded returns the SupportsOnAuthorAdded field value if set, zero value otherwise.
func (o *NotificationResource) GetSupportsOnAuthorAdded() bool {
	if o == nil || isNil(o.SupportsOnAuthorAdded) {
		var ret bool
		return ret
	}
	return *o.SupportsOnAuthorAdded
}

// GetSupportsOnAuthorAddedOk returns a tuple with the SupportsOnAuthorAdded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotificationResource) GetSupportsOnAuthorAddedOk() (*bool, bool) {
	if o == nil || isNil(o.SupportsOnAuthorAdded) {
    return nil, false
	}
	return o.SupportsOnAuthorAdded, true
}

// HasSupportsOnAuthorAdded returns a boolean if a field has been set.
func (o *NotificationResource) HasSupportsOnAuthorAdded() bool {
	if o != nil && !isNil(o.SupportsOnAuthorAdded) {
		return true
	}

	return false
}

// SetSupportsOnAuthorAdded gets a reference to the given bool and assigns it to the SupportsOnAuthorAdded field.
func (o *NotificationResource) SetSupportsOnAuthorAdded(v bool) {
	o.SupportsOnAuthorAdded = &v
}

// GetSupportsOnAuthorDelete returns the SupportsOnAuthorDelete field value if set, zero value otherwise.
func (o *NotificationResource) GetSupportsOnAuthorDelete() bool {
	if o == nil || isNil(o.SupportsOnAuthorDelete) {
		var ret bool
		return ret
	}
	return *o.SupportsOnAuthorDelete
}

// GetSupportsOnAuthorDeleteOk returns a tuple with the SupportsOnAuthorDelete field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotificationResource) GetSupportsOnAuthorDeleteOk() (*bool, bool) {
	if o == nil || isNil(o.SupportsOnAuthorDelete) {
    return nil, false
	}
	return o.SupportsOnAuthorDelete, true
}

// HasSupportsOnAuthorDelete returns a boolean if a field has been set.
func (o *NotificationResource) HasSupportsOnAuthorDelete() bool {
	if o != nil && !isNil(o.SupportsOnAuthorDelete) {
		return true
	}

	return false
}

// SetSupportsOnAuthorDelete gets a reference to the given bool and assigns it to the SupportsOnAuthorDelete field.
func (o *NotificationResource) SetSupportsOnAuthorDelete(v bool) {
	o.SupportsOnAuthorDelete = &v
}

// GetSupportsOnBookDelete returns the SupportsOnBookDelete field value if set, zero value otherwise.
func (o *NotificationResource) GetSupportsOnBookDelete() bool {
	if o == nil || isNil(o.SupportsOnBookDelete) {
		var ret bool
		return ret
	}
	return *o.SupportsOnBookDelete
}

// GetSupportsOnBookDeleteOk returns a tuple with the SupportsOnBookDelete field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotificationResource) GetSupportsOnBookDeleteOk() (*bool, bool) {
	if o == nil || isNil(o.SupportsOnBookDelete) {
    return nil, false
	}
	return o.SupportsOnBookDelete, true
}

// HasSupportsOnBookDelete returns a boolean if a field has been set.
func (o *NotificationResource) HasSupportsOnBookDelete() bool {
	if o != nil && !isNil(o.SupportsOnBookDelete) {
		return true
	}

	return false
}

// SetSupportsOnBookDelete gets a reference to the given bool and assigns it to the SupportsOnBookDelete field.
func (o *NotificationResource) SetSupportsOnBookDelete(v bool) {
	o.SupportsOnBookDelete = &v
}

// GetSupportsOnBookFileDelete returns the SupportsOnBookFileDelete field value if set, zero value otherwise.
func (o *NotificationResource) GetSupportsOnBookFileDelete() bool {
	if o == nil || isNil(o.SupportsOnBookFileDelete) {
		var ret bool
		return ret
	}
	return *o.SupportsOnBookFileDelete
}

// GetSupportsOnBookFileDeleteOk returns a tuple with the SupportsOnBookFileDelete field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotificationResource) GetSupportsOnBookFileDeleteOk() (*bool, bool) {
	if o == nil || isNil(o.SupportsOnBookFileDelete) {
    return nil, false
	}
	return o.SupportsOnBookFileDelete, true
}

// HasSupportsOnBookFileDelete returns a boolean if a field has been set.
func (o *NotificationResource) HasSupportsOnBookFileDelete() bool {
	if o != nil && !isNil(o.SupportsOnBookFileDelete) {
		return true
	}

	return false
}

// SetSupportsOnBookFileDelete gets a reference to the given bool and assigns it to the SupportsOnBookFileDelete field.
func (o *NotificationResource) SetSupportsOnBookFileDelete(v bool) {
	o.SupportsOnBookFileDelete = &v
}

// GetSupportsOnBookFileDeleteForUpgrade returns the SupportsOnBookFileDeleteForUpgrade field value if set, zero value otherwise.
func (o *NotificationResource) GetSupportsOnBookFileDeleteForUpgrade() bool {
	if o == nil || isNil(o.SupportsOnBookFileDeleteForUpgrade) {
		var ret bool
		return ret
	}
	return *o.SupportsOnBookFileDeleteForUpgrade
}

// GetSupportsOnBookFileDeleteForUpgradeOk returns a tuple with the SupportsOnBookFileDeleteForUpgrade field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotificationResource) GetSupportsOnBookFileDeleteForUpgradeOk() (*bool, bool) {
	if o == nil || isNil(o.SupportsOnBookFileDeleteForUpgrade) {
    return nil, false
	}
	return o.SupportsOnBookFileDeleteForUpgrade, true
}

// HasSupportsOnBookFileDeleteForUpgrade returns a boolean if a field has been set.
func (o *NotificationResource) HasSupportsOnBookFileDeleteForUpgrade() bool {
	if o != nil && !isNil(o.SupportsOnBookFileDeleteForUpgrade) {
		return true
	}

	return false
}

// SetSupportsOnBookFileDeleteForUpgrade gets a reference to the given bool and assigns it to the SupportsOnBookFileDeleteForUpgrade field.
func (o *NotificationResource) SetSupportsOnBookFileDeleteForUpgrade(v bool) {
	o.SupportsOnBookFileDeleteForUpgrade = &v
}

// GetSupportsOnHealthIssue returns the SupportsOnHealthIssue field value if set, zero value otherwise.
func (o *NotificationResource) GetSupportsOnHealthIssue() bool {
	if o == nil || isNil(o.SupportsOnHealthIssue) {
		var ret bool
		return ret
	}
	return *o.SupportsOnHealthIssue
}

// GetSupportsOnHealthIssueOk returns a tuple with the SupportsOnHealthIssue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotificationResource) GetSupportsOnHealthIssueOk() (*bool, bool) {
	if o == nil || isNil(o.SupportsOnHealthIssue) {
    return nil, false
	}
	return o.SupportsOnHealthIssue, true
}

// HasSupportsOnHealthIssue returns a boolean if a field has been set.
func (o *NotificationResource) HasSupportsOnHealthIssue() bool {
	if o != nil && !isNil(o.SupportsOnHealthIssue) {
		return true
	}

	return false
}

// SetSupportsOnHealthIssue gets a reference to the given bool and assigns it to the SupportsOnHealthIssue field.
func (o *NotificationResource) SetSupportsOnHealthIssue(v bool) {
	o.SupportsOnHealthIssue = &v
}

// GetIncludeHealthWarnings returns the IncludeHealthWarnings field value if set, zero value otherwise.
func (o *NotificationResource) GetIncludeHealthWarnings() bool {
	if o == nil || isNil(o.IncludeHealthWarnings) {
		var ret bool
		return ret
	}
	return *o.IncludeHealthWarnings
}

// GetIncludeHealthWarningsOk returns a tuple with the IncludeHealthWarnings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotificationResource) GetIncludeHealthWarningsOk() (*bool, bool) {
	if o == nil || isNil(o.IncludeHealthWarnings) {
    return nil, false
	}
	return o.IncludeHealthWarnings, true
}

// HasIncludeHealthWarnings returns a boolean if a field has been set.
func (o *NotificationResource) HasIncludeHealthWarnings() bool {
	if o != nil && !isNil(o.IncludeHealthWarnings) {
		return true
	}

	return false
}

// SetIncludeHealthWarnings gets a reference to the given bool and assigns it to the IncludeHealthWarnings field.
func (o *NotificationResource) SetIncludeHealthWarnings(v bool) {
	o.IncludeHealthWarnings = &v
}

// GetSupportsOnDownloadFailure returns the SupportsOnDownloadFailure field value if set, zero value otherwise.
func (o *NotificationResource) GetSupportsOnDownloadFailure() bool {
	if o == nil || isNil(o.SupportsOnDownloadFailure) {
		var ret bool
		return ret
	}
	return *o.SupportsOnDownloadFailure
}

// GetSupportsOnDownloadFailureOk returns a tuple with the SupportsOnDownloadFailure field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotificationResource) GetSupportsOnDownloadFailureOk() (*bool, bool) {
	if o == nil || isNil(o.SupportsOnDownloadFailure) {
    return nil, false
	}
	return o.SupportsOnDownloadFailure, true
}

// HasSupportsOnDownloadFailure returns a boolean if a field has been set.
func (o *NotificationResource) HasSupportsOnDownloadFailure() bool {
	if o != nil && !isNil(o.SupportsOnDownloadFailure) {
		return true
	}

	return false
}

// SetSupportsOnDownloadFailure gets a reference to the given bool and assigns it to the SupportsOnDownloadFailure field.
func (o *NotificationResource) SetSupportsOnDownloadFailure(v bool) {
	o.SupportsOnDownloadFailure = &v
}

// GetSupportsOnImportFailure returns the SupportsOnImportFailure field value if set, zero value otherwise.
func (o *NotificationResource) GetSupportsOnImportFailure() bool {
	if o == nil || isNil(o.SupportsOnImportFailure) {
		var ret bool
		return ret
	}
	return *o.SupportsOnImportFailure
}

// GetSupportsOnImportFailureOk returns a tuple with the SupportsOnImportFailure field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotificationResource) GetSupportsOnImportFailureOk() (*bool, bool) {
	if o == nil || isNil(o.SupportsOnImportFailure) {
    return nil, false
	}
	return o.SupportsOnImportFailure, true
}

// HasSupportsOnImportFailure returns a boolean if a field has been set.
func (o *NotificationResource) HasSupportsOnImportFailure() bool {
	if o != nil && !isNil(o.SupportsOnImportFailure) {
		return true
	}

	return false
}

// SetSupportsOnImportFailure gets a reference to the given bool and assigns it to the SupportsOnImportFailure field.
func (o *NotificationResource) SetSupportsOnImportFailure(v bool) {
	o.SupportsOnImportFailure = &v
}

// GetSupportsOnBookRetag returns the SupportsOnBookRetag field value if set, zero value otherwise.
func (o *NotificationResource) GetSupportsOnBookRetag() bool {
	if o == nil || isNil(o.SupportsOnBookRetag) {
		var ret bool
		return ret
	}
	return *o.SupportsOnBookRetag
}

// GetSupportsOnBookRetagOk returns a tuple with the SupportsOnBookRetag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotificationResource) GetSupportsOnBookRetagOk() (*bool, bool) {
	if o == nil || isNil(o.SupportsOnBookRetag) {
    return nil, false
	}
	return o.SupportsOnBookRetag, true
}

// HasSupportsOnBookRetag returns a boolean if a field has been set.
func (o *NotificationResource) HasSupportsOnBookRetag() bool {
	if o != nil && !isNil(o.SupportsOnBookRetag) {
		return true
	}

	return false
}

// SetSupportsOnBookRetag gets a reference to the given bool and assigns it to the SupportsOnBookRetag field.
func (o *NotificationResource) SetSupportsOnBookRetag(v bool) {
	o.SupportsOnBookRetag = &v
}

// GetSupportsOnApplicationUpdate returns the SupportsOnApplicationUpdate field value if set, zero value otherwise.
func (o *NotificationResource) GetSupportsOnApplicationUpdate() bool {
	if o == nil || isNil(o.SupportsOnApplicationUpdate) {
		var ret bool
		return ret
	}
	return *o.SupportsOnApplicationUpdate
}

// GetSupportsOnApplicationUpdateOk returns a tuple with the SupportsOnApplicationUpdate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotificationResource) GetSupportsOnApplicationUpdateOk() (*bool, bool) {
	if o == nil || isNil(o.SupportsOnApplicationUpdate) {
    return nil, false
	}
	return o.SupportsOnApplicationUpdate, true
}

// HasSupportsOnApplicationUpdate returns a boolean if a field has been set.
func (o *NotificationResource) HasSupportsOnApplicationUpdate() bool {
	if o != nil && !isNil(o.SupportsOnApplicationUpdate) {
		return true
	}

	return false
}

// SetSupportsOnApplicationUpdate gets a reference to the given bool and assigns it to the SupportsOnApplicationUpdate field.
func (o *NotificationResource) SetSupportsOnApplicationUpdate(v bool) {
	o.SupportsOnApplicationUpdate = &v
}

// GetTestCommand returns the TestCommand field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NotificationResource) GetTestCommand() string {
	if o == nil || isNil(o.TestCommand.Get()) {
		var ret string
		return ret
	}
	return *o.TestCommand.Get()
}

// GetTestCommandOk returns a tuple with the TestCommand field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NotificationResource) GetTestCommandOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.TestCommand.Get(), o.TestCommand.IsSet()
}

// HasTestCommand returns a boolean if a field has been set.
func (o *NotificationResource) HasTestCommand() bool {
	if o != nil && o.TestCommand.IsSet() {
		return true
	}

	return false
}

// SetTestCommand gets a reference to the given NullableString and assigns it to the TestCommand field.
func (o *NotificationResource) SetTestCommand(v string) {
	o.TestCommand.Set(&v)
}
// SetTestCommandNil sets the value for TestCommand to be an explicit nil
func (o *NotificationResource) SetTestCommandNil() {
	o.TestCommand.Set(nil)
}

// UnsetTestCommand ensures that no value is present for TestCommand, not even an explicit nil
func (o *NotificationResource) UnsetTestCommand() {
	o.TestCommand.Unset()
}

func (o NotificationResource) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.Fields != nil {
		toSerialize["fields"] = o.Fields
	}
	if o.ImplementationName.IsSet() {
		toSerialize["implementationName"] = o.ImplementationName.Get()
	}
	if o.Implementation.IsSet() {
		toSerialize["implementation"] = o.Implementation.Get()
	}
	if o.ConfigContract.IsSet() {
		toSerialize["configContract"] = o.ConfigContract.Get()
	}
	if o.InfoLink.IsSet() {
		toSerialize["infoLink"] = o.InfoLink.Get()
	}
	if !isNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	if o.Presets != nil {
		toSerialize["presets"] = o.Presets
	}
	if o.Link.IsSet() {
		toSerialize["link"] = o.Link.Get()
	}
	if !isNil(o.OnGrab) {
		toSerialize["onGrab"] = o.OnGrab
	}
	if !isNil(o.OnReleaseImport) {
		toSerialize["onReleaseImport"] = o.OnReleaseImport
	}
	if !isNil(o.OnUpgrade) {
		toSerialize["onUpgrade"] = o.OnUpgrade
	}
	if !isNil(o.OnRename) {
		toSerialize["onRename"] = o.OnRename
	}
	if !isNil(o.OnAuthorAdded) {
		toSerialize["onAuthorAdded"] = o.OnAuthorAdded
	}
	if !isNil(o.OnAuthorDelete) {
		toSerialize["onAuthorDelete"] = o.OnAuthorDelete
	}
	if !isNil(o.OnBookDelete) {
		toSerialize["onBookDelete"] = o.OnBookDelete
	}
	if !isNil(o.OnBookFileDelete) {
		toSerialize["onBookFileDelete"] = o.OnBookFileDelete
	}
	if !isNil(o.OnBookFileDeleteForUpgrade) {
		toSerialize["onBookFileDeleteForUpgrade"] = o.OnBookFileDeleteForUpgrade
	}
	if !isNil(o.OnHealthIssue) {
		toSerialize["onHealthIssue"] = o.OnHealthIssue
	}
	if !isNil(o.OnDownloadFailure) {
		toSerialize["onDownloadFailure"] = o.OnDownloadFailure
	}
	if !isNil(o.OnImportFailure) {
		toSerialize["onImportFailure"] = o.OnImportFailure
	}
	if !isNil(o.OnBookRetag) {
		toSerialize["onBookRetag"] = o.OnBookRetag
	}
	if !isNil(o.OnApplicationUpdate) {
		toSerialize["onApplicationUpdate"] = o.OnApplicationUpdate
	}
	if !isNil(o.SupportsOnGrab) {
		toSerialize["supportsOnGrab"] = o.SupportsOnGrab
	}
	if !isNil(o.SupportsOnReleaseImport) {
		toSerialize["supportsOnReleaseImport"] = o.SupportsOnReleaseImport
	}
	if !isNil(o.SupportsOnUpgrade) {
		toSerialize["supportsOnUpgrade"] = o.SupportsOnUpgrade
	}
	if !isNil(o.SupportsOnRename) {
		toSerialize["supportsOnRename"] = o.SupportsOnRename
	}
	if !isNil(o.SupportsOnAuthorAdded) {
		toSerialize["supportsOnAuthorAdded"] = o.SupportsOnAuthorAdded
	}
	if !isNil(o.SupportsOnAuthorDelete) {
		toSerialize["supportsOnAuthorDelete"] = o.SupportsOnAuthorDelete
	}
	if !isNil(o.SupportsOnBookDelete) {
		toSerialize["supportsOnBookDelete"] = o.SupportsOnBookDelete
	}
	if !isNil(o.SupportsOnBookFileDelete) {
		toSerialize["supportsOnBookFileDelete"] = o.SupportsOnBookFileDelete
	}
	if !isNil(o.SupportsOnBookFileDeleteForUpgrade) {
		toSerialize["supportsOnBookFileDeleteForUpgrade"] = o.SupportsOnBookFileDeleteForUpgrade
	}
	if !isNil(o.SupportsOnHealthIssue) {
		toSerialize["supportsOnHealthIssue"] = o.SupportsOnHealthIssue
	}
	if !isNil(o.IncludeHealthWarnings) {
		toSerialize["includeHealthWarnings"] = o.IncludeHealthWarnings
	}
	if !isNil(o.SupportsOnDownloadFailure) {
		toSerialize["supportsOnDownloadFailure"] = o.SupportsOnDownloadFailure
	}
	if !isNil(o.SupportsOnImportFailure) {
		toSerialize["supportsOnImportFailure"] = o.SupportsOnImportFailure
	}
	if !isNil(o.SupportsOnBookRetag) {
		toSerialize["supportsOnBookRetag"] = o.SupportsOnBookRetag
	}
	if !isNil(o.SupportsOnApplicationUpdate) {
		toSerialize["supportsOnApplicationUpdate"] = o.SupportsOnApplicationUpdate
	}
	if o.TestCommand.IsSet() {
		toSerialize["testCommand"] = o.TestCommand.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableNotificationResource struct {
	value *NotificationResource
	isSet bool
}

func (v NullableNotificationResource) Get() *NotificationResource {
	return v.value
}

func (v *NullableNotificationResource) Set(val *NotificationResource) {
	v.value = val
	v.isSet = true
}

func (v NullableNotificationResource) IsSet() bool {
	return v.isSet
}

func (v *NullableNotificationResource) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNotificationResource(val *NotificationResource) *NullableNotificationResource {
	return &NullableNotificationResource{value: val, isSet: true}
}

func (v NullableNotificationResource) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNotificationResource) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


