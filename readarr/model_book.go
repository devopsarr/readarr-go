/*
Readarr

Readarr API docs

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package readarr

import (
	"encoding/json"
	"time"
)

// Book struct for Book
type Book struct {
	Id *int32 `json:"id,omitempty"`
	AuthorMetadataId *int32 `json:"authorMetadataId,omitempty"`
	ForeignBookId NullableString `json:"foreignBookId,omitempty"`
	TitleSlug NullableString `json:"titleSlug,omitempty"`
	Title NullableString `json:"title,omitempty"`
	ReleaseDate NullableTime `json:"releaseDate,omitempty"`
	Links []*Links `json:"links,omitempty"`
	Genres []*string `json:"genres,omitempty"`
	Ratings *Ratings `json:"ratings,omitempty"`
	CleanTitle NullableString `json:"cleanTitle,omitempty"`
	Monitored *bool `json:"monitored,omitempty"`
	AnyEditionOk *bool `json:"anyEditionOk,omitempty"`
	LastInfoSync NullableTime `json:"lastInfoSync,omitempty"`
	Added *time.Time `json:"added,omitempty"`
	AddOptions *AddBookOptions `json:"addOptions,omitempty"`
	AuthorMetadata *AuthorMetadataLazyLoaded `json:"authorMetadata,omitempty"`
	Author *AuthorLazyLoaded `json:"author,omitempty"`
	Editions *EditionListLazyLoaded `json:"editions,omitempty"`
	BookFiles *BookFileListLazyLoaded `json:"bookFiles,omitempty"`
	SeriesLinks *SeriesBookLinkListLazyLoaded `json:"seriesLinks,omitempty"`
}

// NewBook instantiates a new Book object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBook() *Book {
	this := Book{}
	return &this
}

// NewBookWithDefaults instantiates a new Book object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBookWithDefaults() *Book {
	this := Book{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Book) GetId() int32 {
	if o == nil || isNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Book) GetIdOk() (*int32, bool) {
	if o == nil || isNil(o.Id) {
    return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Book) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *Book) SetId(v int32) {
	o.Id = &v
}

// GetAuthorMetadataId returns the AuthorMetadataId field value if set, zero value otherwise.
func (o *Book) GetAuthorMetadataId() int32 {
	if o == nil || isNil(o.AuthorMetadataId) {
		var ret int32
		return ret
	}
	return *o.AuthorMetadataId
}

// GetAuthorMetadataIdOk returns a tuple with the AuthorMetadataId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Book) GetAuthorMetadataIdOk() (*int32, bool) {
	if o == nil || isNil(o.AuthorMetadataId) {
    return nil, false
	}
	return o.AuthorMetadataId, true
}

// HasAuthorMetadataId returns a boolean if a field has been set.
func (o *Book) HasAuthorMetadataId() bool {
	if o != nil && !isNil(o.AuthorMetadataId) {
		return true
	}

	return false
}

// SetAuthorMetadataId gets a reference to the given int32 and assigns it to the AuthorMetadataId field.
func (o *Book) SetAuthorMetadataId(v int32) {
	o.AuthorMetadataId = &v
}

// GetForeignBookId returns the ForeignBookId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Book) GetForeignBookId() string {
	if o == nil || isNil(o.ForeignBookId.Get()) {
		var ret string
		return ret
	}
	return *o.ForeignBookId.Get()
}

// GetForeignBookIdOk returns a tuple with the ForeignBookId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Book) GetForeignBookIdOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.ForeignBookId.Get(), o.ForeignBookId.IsSet()
}

// HasForeignBookId returns a boolean if a field has been set.
func (o *Book) HasForeignBookId() bool {
	if o != nil && o.ForeignBookId.IsSet() {
		return true
	}

	return false
}

// SetForeignBookId gets a reference to the given NullableString and assigns it to the ForeignBookId field.
func (o *Book) SetForeignBookId(v string) {
	o.ForeignBookId.Set(&v)
}
// SetForeignBookIdNil sets the value for ForeignBookId to be an explicit nil
func (o *Book) SetForeignBookIdNil() {
	o.ForeignBookId.Set(nil)
}

// UnsetForeignBookId ensures that no value is present for ForeignBookId, not even an explicit nil
func (o *Book) UnsetForeignBookId() {
	o.ForeignBookId.Unset()
}

// GetTitleSlug returns the TitleSlug field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Book) GetTitleSlug() string {
	if o == nil || isNil(o.TitleSlug.Get()) {
		var ret string
		return ret
	}
	return *o.TitleSlug.Get()
}

// GetTitleSlugOk returns a tuple with the TitleSlug field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Book) GetTitleSlugOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.TitleSlug.Get(), o.TitleSlug.IsSet()
}

// HasTitleSlug returns a boolean if a field has been set.
func (o *Book) HasTitleSlug() bool {
	if o != nil && o.TitleSlug.IsSet() {
		return true
	}

	return false
}

// SetTitleSlug gets a reference to the given NullableString and assigns it to the TitleSlug field.
func (o *Book) SetTitleSlug(v string) {
	o.TitleSlug.Set(&v)
}
// SetTitleSlugNil sets the value for TitleSlug to be an explicit nil
func (o *Book) SetTitleSlugNil() {
	o.TitleSlug.Set(nil)
}

// UnsetTitleSlug ensures that no value is present for TitleSlug, not even an explicit nil
func (o *Book) UnsetTitleSlug() {
	o.TitleSlug.Unset()
}

// GetTitle returns the Title field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Book) GetTitle() string {
	if o == nil || isNil(o.Title.Get()) {
		var ret string
		return ret
	}
	return *o.Title.Get()
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Book) GetTitleOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.Title.Get(), o.Title.IsSet()
}

// HasTitle returns a boolean if a field has been set.
func (o *Book) HasTitle() bool {
	if o != nil && o.Title.IsSet() {
		return true
	}

	return false
}

// SetTitle gets a reference to the given NullableString and assigns it to the Title field.
func (o *Book) SetTitle(v string) {
	o.Title.Set(&v)
}
// SetTitleNil sets the value for Title to be an explicit nil
func (o *Book) SetTitleNil() {
	o.Title.Set(nil)
}

// UnsetTitle ensures that no value is present for Title, not even an explicit nil
func (o *Book) UnsetTitle() {
	o.Title.Unset()
}

// GetReleaseDate returns the ReleaseDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Book) GetReleaseDate() time.Time {
	if o == nil || isNil(o.ReleaseDate.Get()) {
		var ret time.Time
		return ret
	}
	return *o.ReleaseDate.Get()
}

// GetReleaseDateOk returns a tuple with the ReleaseDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Book) GetReleaseDateOk() (*time.Time, bool) {
	if o == nil {
    return nil, false
	}
	return o.ReleaseDate.Get(), o.ReleaseDate.IsSet()
}

// HasReleaseDate returns a boolean if a field has been set.
func (o *Book) HasReleaseDate() bool {
	if o != nil && o.ReleaseDate.IsSet() {
		return true
	}

	return false
}

// SetReleaseDate gets a reference to the given NullableTime and assigns it to the ReleaseDate field.
func (o *Book) SetReleaseDate(v time.Time) {
	o.ReleaseDate.Set(&v)
}
// SetReleaseDateNil sets the value for ReleaseDate to be an explicit nil
func (o *Book) SetReleaseDateNil() {
	o.ReleaseDate.Set(nil)
}

// UnsetReleaseDate ensures that no value is present for ReleaseDate, not even an explicit nil
func (o *Book) UnsetReleaseDate() {
	o.ReleaseDate.Unset()
}

// GetLinks returns the Links field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Book) GetLinks() []*Links {
	if o == nil {
		var ret []*Links
		return ret
	}
	return o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Book) GetLinksOk() ([]*Links, bool) {
	if o == nil || isNil(o.Links) {
    return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *Book) HasLinks() bool {
	if o != nil && isNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given []Links and assigns it to the Links field.
func (o *Book) SetLinks(v []*Links) {
	o.Links = v
}

// GetGenres returns the Genres field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Book) GetGenres() []*string {
	if o == nil {
		var ret []*string
		return ret
	}
	return o.Genres
}

// GetGenresOk returns a tuple with the Genres field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Book) GetGenresOk() ([]*string, bool) {
	if o == nil || isNil(o.Genres) {
    return nil, false
	}
	return o.Genres, true
}

// HasGenres returns a boolean if a field has been set.
func (o *Book) HasGenres() bool {
	if o != nil && isNil(o.Genres) {
		return true
	}

	return false
}

// SetGenres gets a reference to the given []string and assigns it to the Genres field.
func (o *Book) SetGenres(v []*string) {
	o.Genres = v
}

// GetRatings returns the Ratings field value if set, zero value otherwise.
func (o *Book) GetRatings() Ratings {
	if o == nil || isNil(o.Ratings) {
		var ret Ratings
		return ret
	}
	return *o.Ratings
}

// GetRatingsOk returns a tuple with the Ratings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Book) GetRatingsOk() (*Ratings, bool) {
	if o == nil || isNil(o.Ratings) {
    return nil, false
	}
	return o.Ratings, true
}

// HasRatings returns a boolean if a field has been set.
func (o *Book) HasRatings() bool {
	if o != nil && !isNil(o.Ratings) {
		return true
	}

	return false
}

// SetRatings gets a reference to the given Ratings and assigns it to the Ratings field.
func (o *Book) SetRatings(v Ratings) {
	o.Ratings = &v
}

// GetCleanTitle returns the CleanTitle field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Book) GetCleanTitle() string {
	if o == nil || isNil(o.CleanTitle.Get()) {
		var ret string
		return ret
	}
	return *o.CleanTitle.Get()
}

// GetCleanTitleOk returns a tuple with the CleanTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Book) GetCleanTitleOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.CleanTitle.Get(), o.CleanTitle.IsSet()
}

// HasCleanTitle returns a boolean if a field has been set.
func (o *Book) HasCleanTitle() bool {
	if o != nil && o.CleanTitle.IsSet() {
		return true
	}

	return false
}

// SetCleanTitle gets a reference to the given NullableString and assigns it to the CleanTitle field.
func (o *Book) SetCleanTitle(v string) {
	o.CleanTitle.Set(&v)
}
// SetCleanTitleNil sets the value for CleanTitle to be an explicit nil
func (o *Book) SetCleanTitleNil() {
	o.CleanTitle.Set(nil)
}

// UnsetCleanTitle ensures that no value is present for CleanTitle, not even an explicit nil
func (o *Book) UnsetCleanTitle() {
	o.CleanTitle.Unset()
}

// GetMonitored returns the Monitored field value if set, zero value otherwise.
func (o *Book) GetMonitored() bool {
	if o == nil || isNil(o.Monitored) {
		var ret bool
		return ret
	}
	return *o.Monitored
}

// GetMonitoredOk returns a tuple with the Monitored field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Book) GetMonitoredOk() (*bool, bool) {
	if o == nil || isNil(o.Monitored) {
    return nil, false
	}
	return o.Monitored, true
}

// HasMonitored returns a boolean if a field has been set.
func (o *Book) HasMonitored() bool {
	if o != nil && !isNil(o.Monitored) {
		return true
	}

	return false
}

// SetMonitored gets a reference to the given bool and assigns it to the Monitored field.
func (o *Book) SetMonitored(v bool) {
	o.Monitored = &v
}

// GetAnyEditionOk returns the AnyEditionOk field value if set, zero value otherwise.
func (o *Book) GetAnyEditionOk() bool {
	if o == nil || isNil(o.AnyEditionOk) {
		var ret bool
		return ret
	}
	return *o.AnyEditionOk
}

// GetAnyEditionOkOk returns a tuple with the AnyEditionOk field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Book) GetAnyEditionOkOk() (*bool, bool) {
	if o == nil || isNil(o.AnyEditionOk) {
    return nil, false
	}
	return o.AnyEditionOk, true
}

// HasAnyEditionOk returns a boolean if a field has been set.
func (o *Book) HasAnyEditionOk() bool {
	if o != nil && !isNil(o.AnyEditionOk) {
		return true
	}

	return false
}

// SetAnyEditionOk gets a reference to the given bool and assigns it to the AnyEditionOk field.
func (o *Book) SetAnyEditionOk(v bool) {
	o.AnyEditionOk = &v
}

// GetLastInfoSync returns the LastInfoSync field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Book) GetLastInfoSync() time.Time {
	if o == nil || isNil(o.LastInfoSync.Get()) {
		var ret time.Time
		return ret
	}
	return *o.LastInfoSync.Get()
}

// GetLastInfoSyncOk returns a tuple with the LastInfoSync field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Book) GetLastInfoSyncOk() (*time.Time, bool) {
	if o == nil {
    return nil, false
	}
	return o.LastInfoSync.Get(), o.LastInfoSync.IsSet()
}

// HasLastInfoSync returns a boolean if a field has been set.
func (o *Book) HasLastInfoSync() bool {
	if o != nil && o.LastInfoSync.IsSet() {
		return true
	}

	return false
}

// SetLastInfoSync gets a reference to the given NullableTime and assigns it to the LastInfoSync field.
func (o *Book) SetLastInfoSync(v time.Time) {
	o.LastInfoSync.Set(&v)
}
// SetLastInfoSyncNil sets the value for LastInfoSync to be an explicit nil
func (o *Book) SetLastInfoSyncNil() {
	o.LastInfoSync.Set(nil)
}

// UnsetLastInfoSync ensures that no value is present for LastInfoSync, not even an explicit nil
func (o *Book) UnsetLastInfoSync() {
	o.LastInfoSync.Unset()
}

// GetAdded returns the Added field value if set, zero value otherwise.
func (o *Book) GetAdded() time.Time {
	if o == nil || isNil(o.Added) {
		var ret time.Time
		return ret
	}
	return *o.Added
}

// GetAddedOk returns a tuple with the Added field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Book) GetAddedOk() (*time.Time, bool) {
	if o == nil || isNil(o.Added) {
    return nil, false
	}
	return o.Added, true
}

// HasAdded returns a boolean if a field has been set.
func (o *Book) HasAdded() bool {
	if o != nil && !isNil(o.Added) {
		return true
	}

	return false
}

// SetAdded gets a reference to the given time.Time and assigns it to the Added field.
func (o *Book) SetAdded(v time.Time) {
	o.Added = &v
}

// GetAddOptions returns the AddOptions field value if set, zero value otherwise.
func (o *Book) GetAddOptions() AddBookOptions {
	if o == nil || isNil(o.AddOptions) {
		var ret AddBookOptions
		return ret
	}
	return *o.AddOptions
}

// GetAddOptionsOk returns a tuple with the AddOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Book) GetAddOptionsOk() (*AddBookOptions, bool) {
	if o == nil || isNil(o.AddOptions) {
    return nil, false
	}
	return o.AddOptions, true
}

// HasAddOptions returns a boolean if a field has been set.
func (o *Book) HasAddOptions() bool {
	if o != nil && !isNil(o.AddOptions) {
		return true
	}

	return false
}

// SetAddOptions gets a reference to the given AddBookOptions and assigns it to the AddOptions field.
func (o *Book) SetAddOptions(v AddBookOptions) {
	o.AddOptions = &v
}

// GetAuthorMetadata returns the AuthorMetadata field value if set, zero value otherwise.
func (o *Book) GetAuthorMetadata() AuthorMetadataLazyLoaded {
	if o == nil || isNil(o.AuthorMetadata) {
		var ret AuthorMetadataLazyLoaded
		return ret
	}
	return *o.AuthorMetadata
}

// GetAuthorMetadataOk returns a tuple with the AuthorMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Book) GetAuthorMetadataOk() (*AuthorMetadataLazyLoaded, bool) {
	if o == nil || isNil(o.AuthorMetadata) {
    return nil, false
	}
	return o.AuthorMetadata, true
}

// HasAuthorMetadata returns a boolean if a field has been set.
func (o *Book) HasAuthorMetadata() bool {
	if o != nil && !isNil(o.AuthorMetadata) {
		return true
	}

	return false
}

// SetAuthorMetadata gets a reference to the given AuthorMetadataLazyLoaded and assigns it to the AuthorMetadata field.
func (o *Book) SetAuthorMetadata(v AuthorMetadataLazyLoaded) {
	o.AuthorMetadata = &v
}

// GetAuthor returns the Author field value if set, zero value otherwise.
func (o *Book) GetAuthor() AuthorLazyLoaded {
	if o == nil || isNil(o.Author) {
		var ret AuthorLazyLoaded
		return ret
	}
	return *o.Author
}

// GetAuthorOk returns a tuple with the Author field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Book) GetAuthorOk() (*AuthorLazyLoaded, bool) {
	if o == nil || isNil(o.Author) {
    return nil, false
	}
	return o.Author, true
}

// HasAuthor returns a boolean if a field has been set.
func (o *Book) HasAuthor() bool {
	if o != nil && !isNil(o.Author) {
		return true
	}

	return false
}

// SetAuthor gets a reference to the given AuthorLazyLoaded and assigns it to the Author field.
func (o *Book) SetAuthor(v AuthorLazyLoaded) {
	o.Author = &v
}

// GetEditions returns the Editions field value if set, zero value otherwise.
func (o *Book) GetEditions() EditionListLazyLoaded {
	if o == nil || isNil(o.Editions) {
		var ret EditionListLazyLoaded
		return ret
	}
	return *o.Editions
}

// GetEditionsOk returns a tuple with the Editions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Book) GetEditionsOk() (*EditionListLazyLoaded, bool) {
	if o == nil || isNil(o.Editions) {
    return nil, false
	}
	return o.Editions, true
}

// HasEditions returns a boolean if a field has been set.
func (o *Book) HasEditions() bool {
	if o != nil && !isNil(o.Editions) {
		return true
	}

	return false
}

// SetEditions gets a reference to the given EditionListLazyLoaded and assigns it to the Editions field.
func (o *Book) SetEditions(v EditionListLazyLoaded) {
	o.Editions = &v
}

// GetBookFiles returns the BookFiles field value if set, zero value otherwise.
func (o *Book) GetBookFiles() BookFileListLazyLoaded {
	if o == nil || isNil(o.BookFiles) {
		var ret BookFileListLazyLoaded
		return ret
	}
	return *o.BookFiles
}

// GetBookFilesOk returns a tuple with the BookFiles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Book) GetBookFilesOk() (*BookFileListLazyLoaded, bool) {
	if o == nil || isNil(o.BookFiles) {
    return nil, false
	}
	return o.BookFiles, true
}

// HasBookFiles returns a boolean if a field has been set.
func (o *Book) HasBookFiles() bool {
	if o != nil && !isNil(o.BookFiles) {
		return true
	}

	return false
}

// SetBookFiles gets a reference to the given BookFileListLazyLoaded and assigns it to the BookFiles field.
func (o *Book) SetBookFiles(v BookFileListLazyLoaded) {
	o.BookFiles = &v
}

// GetSeriesLinks returns the SeriesLinks field value if set, zero value otherwise.
func (o *Book) GetSeriesLinks() SeriesBookLinkListLazyLoaded {
	if o == nil || isNil(o.SeriesLinks) {
		var ret SeriesBookLinkListLazyLoaded
		return ret
	}
	return *o.SeriesLinks
}

// GetSeriesLinksOk returns a tuple with the SeriesLinks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Book) GetSeriesLinksOk() (*SeriesBookLinkListLazyLoaded, bool) {
	if o == nil || isNil(o.SeriesLinks) {
    return nil, false
	}
	return o.SeriesLinks, true
}

// HasSeriesLinks returns a boolean if a field has been set.
func (o *Book) HasSeriesLinks() bool {
	if o != nil && !isNil(o.SeriesLinks) {
		return true
	}

	return false
}

// SetSeriesLinks gets a reference to the given SeriesBookLinkListLazyLoaded and assigns it to the SeriesLinks field.
func (o *Book) SetSeriesLinks(v SeriesBookLinkListLazyLoaded) {
	o.SeriesLinks = &v
}

func (o Book) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !isNil(o.AuthorMetadataId) {
		toSerialize["authorMetadataId"] = o.AuthorMetadataId
	}
	if o.ForeignBookId.IsSet() {
		toSerialize["foreignBookId"] = o.ForeignBookId.Get()
	}
	if o.TitleSlug.IsSet() {
		toSerialize["titleSlug"] = o.TitleSlug.Get()
	}
	if o.Title.IsSet() {
		toSerialize["title"] = o.Title.Get()
	}
	if o.ReleaseDate.IsSet() {
		toSerialize["releaseDate"] = o.ReleaseDate.Get()
	}
	if o.Links != nil {
		toSerialize["links"] = o.Links
	}
	if o.Genres != nil {
		toSerialize["genres"] = o.Genres
	}
	if !isNil(o.Ratings) {
		toSerialize["ratings"] = o.Ratings
	}
	if o.CleanTitle.IsSet() {
		toSerialize["cleanTitle"] = o.CleanTitle.Get()
	}
	if !isNil(o.Monitored) {
		toSerialize["monitored"] = o.Monitored
	}
	if !isNil(o.AnyEditionOk) {
		toSerialize["anyEditionOk"] = o.AnyEditionOk
	}
	if o.LastInfoSync.IsSet() {
		toSerialize["lastInfoSync"] = o.LastInfoSync.Get()
	}
	if !isNil(o.Added) {
		toSerialize["added"] = o.Added
	}
	if !isNil(o.AddOptions) {
		toSerialize["addOptions"] = o.AddOptions
	}
	if !isNil(o.AuthorMetadata) {
		toSerialize["authorMetadata"] = o.AuthorMetadata
	}
	if !isNil(o.Author) {
		toSerialize["author"] = o.Author
	}
	if !isNil(o.Editions) {
		toSerialize["editions"] = o.Editions
	}
	if !isNil(o.BookFiles) {
		toSerialize["bookFiles"] = o.BookFiles
	}
	if !isNil(o.SeriesLinks) {
		toSerialize["seriesLinks"] = o.SeriesLinks
	}
	return json.Marshal(toSerialize)
}

type NullableBook struct {
	value *Book
	isSet bool
}

func (v NullableBook) Get() *Book {
	return v.value
}

func (v *NullableBook) Set(val *Book) {
	v.value = val
	v.isSet = true
}

func (v NullableBook) IsSet() bool {
	return v.isSet
}

func (v *NullableBook) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBook(val *Book) *NullableBook {
	return &NullableBook{value: val, isSet: true}
}

func (v NullableBook) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBook) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


