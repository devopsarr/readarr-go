/*
Readarr

Readarr API docs

API version: v0.3.18.2411
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package readarr

import (
	"encoding/json"
	"time"
)

// checks if the AuthorMetadata type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AuthorMetadata{}

// AuthorMetadata struct for AuthorMetadata
type AuthorMetadata struct {
	Id *int32 `json:"id,omitempty"`
	ForeignAuthorId NullableString `json:"foreignAuthorId,omitempty"`
	TitleSlug NullableString `json:"titleSlug,omitempty"`
	Name NullableString `json:"name,omitempty"`
	SortName NullableString `json:"sortName,omitempty"`
	NameLastFirst NullableString `json:"nameLastFirst,omitempty"`
	SortNameLastFirst NullableString `json:"sortNameLastFirst,omitempty"`
	Aliases []string `json:"aliases,omitempty"`
	Overview NullableString `json:"overview,omitempty"`
	Disambiguation NullableString `json:"disambiguation,omitempty"`
	Gender NullableString `json:"gender,omitempty"`
	Hometown NullableString `json:"hometown,omitempty"`
	Born NullableTime `json:"born,omitempty"`
	Died NullableTime `json:"died,omitempty"`
	Status *AuthorStatusType `json:"status,omitempty"`
	Images []MediaCover `json:"images,omitempty"`
	Links []Links `json:"links,omitempty"`
	Genres []string `json:"genres,omitempty"`
	Ratings *Ratings `json:"ratings,omitempty"`
}

// NewAuthorMetadata instantiates a new AuthorMetadata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthorMetadata() *AuthorMetadata {
	this := AuthorMetadata{}
	return &this
}

// NewAuthorMetadataWithDefaults instantiates a new AuthorMetadata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthorMetadataWithDefaults() *AuthorMetadata {
	this := AuthorMetadata{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AuthorMetadata) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorMetadata) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AuthorMetadata) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *AuthorMetadata) SetId(v int32) {
	o.Id = &v
}

// GetForeignAuthorId returns the ForeignAuthorId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AuthorMetadata) GetForeignAuthorId() string {
	if o == nil || IsNil(o.ForeignAuthorId.Get()) {
		var ret string
		return ret
	}
	return *o.ForeignAuthorId.Get()
}

// GetForeignAuthorIdOk returns a tuple with the ForeignAuthorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AuthorMetadata) GetForeignAuthorIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ForeignAuthorId.Get(), o.ForeignAuthorId.IsSet()
}

// HasForeignAuthorId returns a boolean if a field has been set.
func (o *AuthorMetadata) HasForeignAuthorId() bool {
	if o != nil && o.ForeignAuthorId.IsSet() {
		return true
	}

	return false
}

// SetForeignAuthorId gets a reference to the given NullableString and assigns it to the ForeignAuthorId field.
func (o *AuthorMetadata) SetForeignAuthorId(v string) {
	o.ForeignAuthorId.Set(&v)
}
// SetForeignAuthorIdNil sets the value for ForeignAuthorId to be an explicit nil
func (o *AuthorMetadata) SetForeignAuthorIdNil() {
	o.ForeignAuthorId.Set(nil)
}

// UnsetForeignAuthorId ensures that no value is present for ForeignAuthorId, not even an explicit nil
func (o *AuthorMetadata) UnsetForeignAuthorId() {
	o.ForeignAuthorId.Unset()
}

// GetTitleSlug returns the TitleSlug field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AuthorMetadata) GetTitleSlug() string {
	if o == nil || IsNil(o.TitleSlug.Get()) {
		var ret string
		return ret
	}
	return *o.TitleSlug.Get()
}

// GetTitleSlugOk returns a tuple with the TitleSlug field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AuthorMetadata) GetTitleSlugOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TitleSlug.Get(), o.TitleSlug.IsSet()
}

// HasTitleSlug returns a boolean if a field has been set.
func (o *AuthorMetadata) HasTitleSlug() bool {
	if o != nil && o.TitleSlug.IsSet() {
		return true
	}

	return false
}

// SetTitleSlug gets a reference to the given NullableString and assigns it to the TitleSlug field.
func (o *AuthorMetadata) SetTitleSlug(v string) {
	o.TitleSlug.Set(&v)
}
// SetTitleSlugNil sets the value for TitleSlug to be an explicit nil
func (o *AuthorMetadata) SetTitleSlugNil() {
	o.TitleSlug.Set(nil)
}

// UnsetTitleSlug ensures that no value is present for TitleSlug, not even an explicit nil
func (o *AuthorMetadata) UnsetTitleSlug() {
	o.TitleSlug.Unset()
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AuthorMetadata) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AuthorMetadata) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *AuthorMetadata) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *AuthorMetadata) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *AuthorMetadata) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *AuthorMetadata) UnsetName() {
	o.Name.Unset()
}

// GetSortName returns the SortName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AuthorMetadata) GetSortName() string {
	if o == nil || IsNil(o.SortName.Get()) {
		var ret string
		return ret
	}
	return *o.SortName.Get()
}

// GetSortNameOk returns a tuple with the SortName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AuthorMetadata) GetSortNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SortName.Get(), o.SortName.IsSet()
}

// HasSortName returns a boolean if a field has been set.
func (o *AuthorMetadata) HasSortName() bool {
	if o != nil && o.SortName.IsSet() {
		return true
	}

	return false
}

// SetSortName gets a reference to the given NullableString and assigns it to the SortName field.
func (o *AuthorMetadata) SetSortName(v string) {
	o.SortName.Set(&v)
}
// SetSortNameNil sets the value for SortName to be an explicit nil
func (o *AuthorMetadata) SetSortNameNil() {
	o.SortName.Set(nil)
}

// UnsetSortName ensures that no value is present for SortName, not even an explicit nil
func (o *AuthorMetadata) UnsetSortName() {
	o.SortName.Unset()
}

// GetNameLastFirst returns the NameLastFirst field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AuthorMetadata) GetNameLastFirst() string {
	if o == nil || IsNil(o.NameLastFirst.Get()) {
		var ret string
		return ret
	}
	return *o.NameLastFirst.Get()
}

// GetNameLastFirstOk returns a tuple with the NameLastFirst field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AuthorMetadata) GetNameLastFirstOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.NameLastFirst.Get(), o.NameLastFirst.IsSet()
}

// HasNameLastFirst returns a boolean if a field has been set.
func (o *AuthorMetadata) HasNameLastFirst() bool {
	if o != nil && o.NameLastFirst.IsSet() {
		return true
	}

	return false
}

// SetNameLastFirst gets a reference to the given NullableString and assigns it to the NameLastFirst field.
func (o *AuthorMetadata) SetNameLastFirst(v string) {
	o.NameLastFirst.Set(&v)
}
// SetNameLastFirstNil sets the value for NameLastFirst to be an explicit nil
func (o *AuthorMetadata) SetNameLastFirstNil() {
	o.NameLastFirst.Set(nil)
}

// UnsetNameLastFirst ensures that no value is present for NameLastFirst, not even an explicit nil
func (o *AuthorMetadata) UnsetNameLastFirst() {
	o.NameLastFirst.Unset()
}

// GetSortNameLastFirst returns the SortNameLastFirst field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AuthorMetadata) GetSortNameLastFirst() string {
	if o == nil || IsNil(o.SortNameLastFirst.Get()) {
		var ret string
		return ret
	}
	return *o.SortNameLastFirst.Get()
}

// GetSortNameLastFirstOk returns a tuple with the SortNameLastFirst field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AuthorMetadata) GetSortNameLastFirstOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SortNameLastFirst.Get(), o.SortNameLastFirst.IsSet()
}

// HasSortNameLastFirst returns a boolean if a field has been set.
func (o *AuthorMetadata) HasSortNameLastFirst() bool {
	if o != nil && o.SortNameLastFirst.IsSet() {
		return true
	}

	return false
}

// SetSortNameLastFirst gets a reference to the given NullableString and assigns it to the SortNameLastFirst field.
func (o *AuthorMetadata) SetSortNameLastFirst(v string) {
	o.SortNameLastFirst.Set(&v)
}
// SetSortNameLastFirstNil sets the value for SortNameLastFirst to be an explicit nil
func (o *AuthorMetadata) SetSortNameLastFirstNil() {
	o.SortNameLastFirst.Set(nil)
}

// UnsetSortNameLastFirst ensures that no value is present for SortNameLastFirst, not even an explicit nil
func (o *AuthorMetadata) UnsetSortNameLastFirst() {
	o.SortNameLastFirst.Unset()
}

// GetAliases returns the Aliases field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AuthorMetadata) GetAliases() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.Aliases
}

// GetAliasesOk returns a tuple with the Aliases field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AuthorMetadata) GetAliasesOk() ([]string, bool) {
	if o == nil || IsNil(o.Aliases) {
		return nil, false
	}
	return o.Aliases, true
}

// HasAliases returns a boolean if a field has been set.
func (o *AuthorMetadata) HasAliases() bool {
	if o != nil && IsNil(o.Aliases) {
		return true
	}

	return false
}

// SetAliases gets a reference to the given []string and assigns it to the Aliases field.
func (o *AuthorMetadata) SetAliases(v []string) {
	o.Aliases = v
}

// GetOverview returns the Overview field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AuthorMetadata) GetOverview() string {
	if o == nil || IsNil(o.Overview.Get()) {
		var ret string
		return ret
	}
	return *o.Overview.Get()
}

// GetOverviewOk returns a tuple with the Overview field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AuthorMetadata) GetOverviewOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Overview.Get(), o.Overview.IsSet()
}

// HasOverview returns a boolean if a field has been set.
func (o *AuthorMetadata) HasOverview() bool {
	if o != nil && o.Overview.IsSet() {
		return true
	}

	return false
}

// SetOverview gets a reference to the given NullableString and assigns it to the Overview field.
func (o *AuthorMetadata) SetOverview(v string) {
	o.Overview.Set(&v)
}
// SetOverviewNil sets the value for Overview to be an explicit nil
func (o *AuthorMetadata) SetOverviewNil() {
	o.Overview.Set(nil)
}

// UnsetOverview ensures that no value is present for Overview, not even an explicit nil
func (o *AuthorMetadata) UnsetOverview() {
	o.Overview.Unset()
}

// GetDisambiguation returns the Disambiguation field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AuthorMetadata) GetDisambiguation() string {
	if o == nil || IsNil(o.Disambiguation.Get()) {
		var ret string
		return ret
	}
	return *o.Disambiguation.Get()
}

// GetDisambiguationOk returns a tuple with the Disambiguation field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AuthorMetadata) GetDisambiguationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Disambiguation.Get(), o.Disambiguation.IsSet()
}

// HasDisambiguation returns a boolean if a field has been set.
func (o *AuthorMetadata) HasDisambiguation() bool {
	if o != nil && o.Disambiguation.IsSet() {
		return true
	}

	return false
}

// SetDisambiguation gets a reference to the given NullableString and assigns it to the Disambiguation field.
func (o *AuthorMetadata) SetDisambiguation(v string) {
	o.Disambiguation.Set(&v)
}
// SetDisambiguationNil sets the value for Disambiguation to be an explicit nil
func (o *AuthorMetadata) SetDisambiguationNil() {
	o.Disambiguation.Set(nil)
}

// UnsetDisambiguation ensures that no value is present for Disambiguation, not even an explicit nil
func (o *AuthorMetadata) UnsetDisambiguation() {
	o.Disambiguation.Unset()
}

// GetGender returns the Gender field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AuthorMetadata) GetGender() string {
	if o == nil || IsNil(o.Gender.Get()) {
		var ret string
		return ret
	}
	return *o.Gender.Get()
}

// GetGenderOk returns a tuple with the Gender field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AuthorMetadata) GetGenderOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Gender.Get(), o.Gender.IsSet()
}

// HasGender returns a boolean if a field has been set.
func (o *AuthorMetadata) HasGender() bool {
	if o != nil && o.Gender.IsSet() {
		return true
	}

	return false
}

// SetGender gets a reference to the given NullableString and assigns it to the Gender field.
func (o *AuthorMetadata) SetGender(v string) {
	o.Gender.Set(&v)
}
// SetGenderNil sets the value for Gender to be an explicit nil
func (o *AuthorMetadata) SetGenderNil() {
	o.Gender.Set(nil)
}

// UnsetGender ensures that no value is present for Gender, not even an explicit nil
func (o *AuthorMetadata) UnsetGender() {
	o.Gender.Unset()
}

// GetHometown returns the Hometown field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AuthorMetadata) GetHometown() string {
	if o == nil || IsNil(o.Hometown.Get()) {
		var ret string
		return ret
	}
	return *o.Hometown.Get()
}

// GetHometownOk returns a tuple with the Hometown field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AuthorMetadata) GetHometownOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Hometown.Get(), o.Hometown.IsSet()
}

// HasHometown returns a boolean if a field has been set.
func (o *AuthorMetadata) HasHometown() bool {
	if o != nil && o.Hometown.IsSet() {
		return true
	}

	return false
}

// SetHometown gets a reference to the given NullableString and assigns it to the Hometown field.
func (o *AuthorMetadata) SetHometown(v string) {
	o.Hometown.Set(&v)
}
// SetHometownNil sets the value for Hometown to be an explicit nil
func (o *AuthorMetadata) SetHometownNil() {
	o.Hometown.Set(nil)
}

// UnsetHometown ensures that no value is present for Hometown, not even an explicit nil
func (o *AuthorMetadata) UnsetHometown() {
	o.Hometown.Unset()
}

// GetBorn returns the Born field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AuthorMetadata) GetBorn() time.Time {
	if o == nil || IsNil(o.Born.Get()) {
		var ret time.Time
		return ret
	}
	return *o.Born.Get()
}

// GetBornOk returns a tuple with the Born field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AuthorMetadata) GetBornOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.Born.Get(), o.Born.IsSet()
}

// HasBorn returns a boolean if a field has been set.
func (o *AuthorMetadata) HasBorn() bool {
	if o != nil && o.Born.IsSet() {
		return true
	}

	return false
}

// SetBorn gets a reference to the given NullableTime and assigns it to the Born field.
func (o *AuthorMetadata) SetBorn(v time.Time) {
	o.Born.Set(&v)
}
// SetBornNil sets the value for Born to be an explicit nil
func (o *AuthorMetadata) SetBornNil() {
	o.Born.Set(nil)
}

// UnsetBorn ensures that no value is present for Born, not even an explicit nil
func (o *AuthorMetadata) UnsetBorn() {
	o.Born.Unset()
}

// GetDied returns the Died field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AuthorMetadata) GetDied() time.Time {
	if o == nil || IsNil(o.Died.Get()) {
		var ret time.Time
		return ret
	}
	return *o.Died.Get()
}

// GetDiedOk returns a tuple with the Died field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AuthorMetadata) GetDiedOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.Died.Get(), o.Died.IsSet()
}

// HasDied returns a boolean if a field has been set.
func (o *AuthorMetadata) HasDied() bool {
	if o != nil && o.Died.IsSet() {
		return true
	}

	return false
}

// SetDied gets a reference to the given NullableTime and assigns it to the Died field.
func (o *AuthorMetadata) SetDied(v time.Time) {
	o.Died.Set(&v)
}
// SetDiedNil sets the value for Died to be an explicit nil
func (o *AuthorMetadata) SetDiedNil() {
	o.Died.Set(nil)
}

// UnsetDied ensures that no value is present for Died, not even an explicit nil
func (o *AuthorMetadata) UnsetDied() {
	o.Died.Unset()
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *AuthorMetadata) GetStatus() AuthorStatusType {
	if o == nil || IsNil(o.Status) {
		var ret AuthorStatusType
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorMetadata) GetStatusOk() (*AuthorStatusType, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *AuthorMetadata) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given AuthorStatusType and assigns it to the Status field.
func (o *AuthorMetadata) SetStatus(v AuthorStatusType) {
	o.Status = &v
}

// GetImages returns the Images field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AuthorMetadata) GetImages() []MediaCover {
	if o == nil {
		var ret []MediaCover
		return ret
	}
	return o.Images
}

// GetImagesOk returns a tuple with the Images field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AuthorMetadata) GetImagesOk() ([]MediaCover, bool) {
	if o == nil || IsNil(o.Images) {
		return nil, false
	}
	return o.Images, true
}

// HasImages returns a boolean if a field has been set.
func (o *AuthorMetadata) HasImages() bool {
	if o != nil && IsNil(o.Images) {
		return true
	}

	return false
}

// SetImages gets a reference to the given []MediaCover and assigns it to the Images field.
func (o *AuthorMetadata) SetImages(v []MediaCover) {
	o.Images = v
}

// GetLinks returns the Links field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AuthorMetadata) GetLinks() []Links {
	if o == nil {
		var ret []Links
		return ret
	}
	return o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AuthorMetadata) GetLinksOk() ([]Links, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *AuthorMetadata) HasLinks() bool {
	if o != nil && IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given []Links and assigns it to the Links field.
func (o *AuthorMetadata) SetLinks(v []Links) {
	o.Links = v
}

// GetGenres returns the Genres field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AuthorMetadata) GetGenres() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.Genres
}

// GetGenresOk returns a tuple with the Genres field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AuthorMetadata) GetGenresOk() ([]string, bool) {
	if o == nil || IsNil(o.Genres) {
		return nil, false
	}
	return o.Genres, true
}

// HasGenres returns a boolean if a field has been set.
func (o *AuthorMetadata) HasGenres() bool {
	if o != nil && IsNil(o.Genres) {
		return true
	}

	return false
}

// SetGenres gets a reference to the given []string and assigns it to the Genres field.
func (o *AuthorMetadata) SetGenres(v []string) {
	o.Genres = v
}

// GetRatings returns the Ratings field value if set, zero value otherwise.
func (o *AuthorMetadata) GetRatings() Ratings {
	if o == nil || IsNil(o.Ratings) {
		var ret Ratings
		return ret
	}
	return *o.Ratings
}

// GetRatingsOk returns a tuple with the Ratings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorMetadata) GetRatingsOk() (*Ratings, bool) {
	if o == nil || IsNil(o.Ratings) {
		return nil, false
	}
	return o.Ratings, true
}

// HasRatings returns a boolean if a field has been set.
func (o *AuthorMetadata) HasRatings() bool {
	if o != nil && !IsNil(o.Ratings) {
		return true
	}

	return false
}

// SetRatings gets a reference to the given Ratings and assigns it to the Ratings field.
func (o *AuthorMetadata) SetRatings(v Ratings) {
	o.Ratings = &v
}

func (o AuthorMetadata) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AuthorMetadata) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if o.ForeignAuthorId.IsSet() {
		toSerialize["foreignAuthorId"] = o.ForeignAuthorId.Get()
	}
	if o.TitleSlug.IsSet() {
		toSerialize["titleSlug"] = o.TitleSlug.Get()
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.SortName.IsSet() {
		toSerialize["sortName"] = o.SortName.Get()
	}
	if o.NameLastFirst.IsSet() {
		toSerialize["nameLastFirst"] = o.NameLastFirst.Get()
	}
	if o.SortNameLastFirst.IsSet() {
		toSerialize["sortNameLastFirst"] = o.SortNameLastFirst.Get()
	}
	if o.Aliases != nil {
		toSerialize["aliases"] = o.Aliases
	}
	if o.Overview.IsSet() {
		toSerialize["overview"] = o.Overview.Get()
	}
	if o.Disambiguation.IsSet() {
		toSerialize["disambiguation"] = o.Disambiguation.Get()
	}
	if o.Gender.IsSet() {
		toSerialize["gender"] = o.Gender.Get()
	}
	if o.Hometown.IsSet() {
		toSerialize["hometown"] = o.Hometown.Get()
	}
	if o.Born.IsSet() {
		toSerialize["born"] = o.Born.Get()
	}
	if o.Died.IsSet() {
		toSerialize["died"] = o.Died.Get()
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if o.Images != nil {
		toSerialize["images"] = o.Images
	}
	if o.Links != nil {
		toSerialize["links"] = o.Links
	}
	if o.Genres != nil {
		toSerialize["genres"] = o.Genres
	}
	if !IsNil(o.Ratings) {
		toSerialize["ratings"] = o.Ratings
	}
	return toSerialize, nil
}

type NullableAuthorMetadata struct {
	value *AuthorMetadata
	isSet bool
}

func (v NullableAuthorMetadata) Get() *AuthorMetadata {
	return v.value
}

func (v *NullableAuthorMetadata) Set(val *AuthorMetadata) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthorMetadata) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthorMetadata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthorMetadata(val *AuthorMetadata) *NullableAuthorMetadata {
	return &NullableAuthorMetadata{value: val, isSet: true}
}

func (v NullableAuthorMetadata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthorMetadata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


