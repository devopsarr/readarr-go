/*
Readarr

Readarr API docs

API version: v0.3.18.2411
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package readarr

import (
	"encoding/json"
	"time"
)

// checks if the BookResource type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BookResource{}

// BookResource struct for BookResource
type BookResource struct {
	Id *int32 `json:"id,omitempty"`
	Title NullableString `json:"title,omitempty"`
	AuthorTitle NullableString `json:"authorTitle,omitempty"`
	SeriesTitle NullableString `json:"seriesTitle,omitempty"`
	Disambiguation NullableString `json:"disambiguation,omitempty"`
	Overview NullableString `json:"overview,omitempty"`
	AuthorId *int32 `json:"authorId,omitempty"`
	ForeignBookId NullableString `json:"foreignBookId,omitempty"`
	ForeignEditionId NullableString `json:"foreignEditionId,omitempty"`
	TitleSlug NullableString `json:"titleSlug,omitempty"`
	Monitored *bool `json:"monitored,omitempty"`
	AnyEditionOk *bool `json:"anyEditionOk,omitempty"`
	Ratings *Ratings `json:"ratings,omitempty"`
	ReleaseDate NullableTime `json:"releaseDate,omitempty"`
	PageCount *int32 `json:"pageCount,omitempty"`
	Genres []string `json:"genres,omitempty"`
	Author *AuthorResource `json:"author,omitempty"`
	Images []MediaCover `json:"images,omitempty"`
	Links []Links `json:"links,omitempty"`
	Statistics *BookStatisticsResource `json:"statistics,omitempty"`
	Added NullableTime `json:"added,omitempty"`
	AddOptions *AddBookOptions `json:"addOptions,omitempty"`
	RemoteCover NullableString `json:"remoteCover,omitempty"`
	Editions []EditionResource `json:"editions,omitempty"`
	Grabbed *bool `json:"grabbed,omitempty"`
}

// NewBookResource instantiates a new BookResource object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBookResource() *BookResource {
	this := BookResource{}
	return &this
}

// NewBookResourceWithDefaults instantiates a new BookResource object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBookResourceWithDefaults() *BookResource {
	this := BookResource{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *BookResource) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BookResource) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *BookResource) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *BookResource) SetId(v int32) {
	o.Id = &v
}

// GetTitle returns the Title field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BookResource) GetTitle() string {
	if o == nil || IsNil(o.Title.Get()) {
		var ret string
		return ret
	}
	return *o.Title.Get()
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BookResource) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Title.Get(), o.Title.IsSet()
}

// HasTitle returns a boolean if a field has been set.
func (o *BookResource) HasTitle() bool {
	if o != nil && o.Title.IsSet() {
		return true
	}

	return false
}

// SetTitle gets a reference to the given NullableString and assigns it to the Title field.
func (o *BookResource) SetTitle(v string) {
	o.Title.Set(&v)
}
// SetTitleNil sets the value for Title to be an explicit nil
func (o *BookResource) SetTitleNil() {
	o.Title.Set(nil)
}

// UnsetTitle ensures that no value is present for Title, not even an explicit nil
func (o *BookResource) UnsetTitle() {
	o.Title.Unset()
}

// GetAuthorTitle returns the AuthorTitle field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BookResource) GetAuthorTitle() string {
	if o == nil || IsNil(o.AuthorTitle.Get()) {
		var ret string
		return ret
	}
	return *o.AuthorTitle.Get()
}

// GetAuthorTitleOk returns a tuple with the AuthorTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BookResource) GetAuthorTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AuthorTitle.Get(), o.AuthorTitle.IsSet()
}

// HasAuthorTitle returns a boolean if a field has been set.
func (o *BookResource) HasAuthorTitle() bool {
	if o != nil && o.AuthorTitle.IsSet() {
		return true
	}

	return false
}

// SetAuthorTitle gets a reference to the given NullableString and assigns it to the AuthorTitle field.
func (o *BookResource) SetAuthorTitle(v string) {
	o.AuthorTitle.Set(&v)
}
// SetAuthorTitleNil sets the value for AuthorTitle to be an explicit nil
func (o *BookResource) SetAuthorTitleNil() {
	o.AuthorTitle.Set(nil)
}

// UnsetAuthorTitle ensures that no value is present for AuthorTitle, not even an explicit nil
func (o *BookResource) UnsetAuthorTitle() {
	o.AuthorTitle.Unset()
}

// GetSeriesTitle returns the SeriesTitle field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BookResource) GetSeriesTitle() string {
	if o == nil || IsNil(o.SeriesTitle.Get()) {
		var ret string
		return ret
	}
	return *o.SeriesTitle.Get()
}

// GetSeriesTitleOk returns a tuple with the SeriesTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BookResource) GetSeriesTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SeriesTitle.Get(), o.SeriesTitle.IsSet()
}

// HasSeriesTitle returns a boolean if a field has been set.
func (o *BookResource) HasSeriesTitle() bool {
	if o != nil && o.SeriesTitle.IsSet() {
		return true
	}

	return false
}

// SetSeriesTitle gets a reference to the given NullableString and assigns it to the SeriesTitle field.
func (o *BookResource) SetSeriesTitle(v string) {
	o.SeriesTitle.Set(&v)
}
// SetSeriesTitleNil sets the value for SeriesTitle to be an explicit nil
func (o *BookResource) SetSeriesTitleNil() {
	o.SeriesTitle.Set(nil)
}

// UnsetSeriesTitle ensures that no value is present for SeriesTitle, not even an explicit nil
func (o *BookResource) UnsetSeriesTitle() {
	o.SeriesTitle.Unset()
}

// GetDisambiguation returns the Disambiguation field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BookResource) GetDisambiguation() string {
	if o == nil || IsNil(o.Disambiguation.Get()) {
		var ret string
		return ret
	}
	return *o.Disambiguation.Get()
}

// GetDisambiguationOk returns a tuple with the Disambiguation field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BookResource) GetDisambiguationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Disambiguation.Get(), o.Disambiguation.IsSet()
}

// HasDisambiguation returns a boolean if a field has been set.
func (o *BookResource) HasDisambiguation() bool {
	if o != nil && o.Disambiguation.IsSet() {
		return true
	}

	return false
}

// SetDisambiguation gets a reference to the given NullableString and assigns it to the Disambiguation field.
func (o *BookResource) SetDisambiguation(v string) {
	o.Disambiguation.Set(&v)
}
// SetDisambiguationNil sets the value for Disambiguation to be an explicit nil
func (o *BookResource) SetDisambiguationNil() {
	o.Disambiguation.Set(nil)
}

// UnsetDisambiguation ensures that no value is present for Disambiguation, not even an explicit nil
func (o *BookResource) UnsetDisambiguation() {
	o.Disambiguation.Unset()
}

// GetOverview returns the Overview field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BookResource) GetOverview() string {
	if o == nil || IsNil(o.Overview.Get()) {
		var ret string
		return ret
	}
	return *o.Overview.Get()
}

// GetOverviewOk returns a tuple with the Overview field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BookResource) GetOverviewOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Overview.Get(), o.Overview.IsSet()
}

// HasOverview returns a boolean if a field has been set.
func (o *BookResource) HasOverview() bool {
	if o != nil && o.Overview.IsSet() {
		return true
	}

	return false
}

// SetOverview gets a reference to the given NullableString and assigns it to the Overview field.
func (o *BookResource) SetOverview(v string) {
	o.Overview.Set(&v)
}
// SetOverviewNil sets the value for Overview to be an explicit nil
func (o *BookResource) SetOverviewNil() {
	o.Overview.Set(nil)
}

// UnsetOverview ensures that no value is present for Overview, not even an explicit nil
func (o *BookResource) UnsetOverview() {
	o.Overview.Unset()
}

// GetAuthorId returns the AuthorId field value if set, zero value otherwise.
func (o *BookResource) GetAuthorId() int32 {
	if o == nil || IsNil(o.AuthorId) {
		var ret int32
		return ret
	}
	return *o.AuthorId
}

// GetAuthorIdOk returns a tuple with the AuthorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BookResource) GetAuthorIdOk() (*int32, bool) {
	if o == nil || IsNil(o.AuthorId) {
		return nil, false
	}
	return o.AuthorId, true
}

// HasAuthorId returns a boolean if a field has been set.
func (o *BookResource) HasAuthorId() bool {
	if o != nil && !IsNil(o.AuthorId) {
		return true
	}

	return false
}

// SetAuthorId gets a reference to the given int32 and assigns it to the AuthorId field.
func (o *BookResource) SetAuthorId(v int32) {
	o.AuthorId = &v
}

// GetForeignBookId returns the ForeignBookId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BookResource) GetForeignBookId() string {
	if o == nil || IsNil(o.ForeignBookId.Get()) {
		var ret string
		return ret
	}
	return *o.ForeignBookId.Get()
}

// GetForeignBookIdOk returns a tuple with the ForeignBookId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BookResource) GetForeignBookIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ForeignBookId.Get(), o.ForeignBookId.IsSet()
}

// HasForeignBookId returns a boolean if a field has been set.
func (o *BookResource) HasForeignBookId() bool {
	if o != nil && o.ForeignBookId.IsSet() {
		return true
	}

	return false
}

// SetForeignBookId gets a reference to the given NullableString and assigns it to the ForeignBookId field.
func (o *BookResource) SetForeignBookId(v string) {
	o.ForeignBookId.Set(&v)
}
// SetForeignBookIdNil sets the value for ForeignBookId to be an explicit nil
func (o *BookResource) SetForeignBookIdNil() {
	o.ForeignBookId.Set(nil)
}

// UnsetForeignBookId ensures that no value is present for ForeignBookId, not even an explicit nil
func (o *BookResource) UnsetForeignBookId() {
	o.ForeignBookId.Unset()
}

// GetForeignEditionId returns the ForeignEditionId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BookResource) GetForeignEditionId() string {
	if o == nil || IsNil(o.ForeignEditionId.Get()) {
		var ret string
		return ret
	}
	return *o.ForeignEditionId.Get()
}

// GetForeignEditionIdOk returns a tuple with the ForeignEditionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BookResource) GetForeignEditionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ForeignEditionId.Get(), o.ForeignEditionId.IsSet()
}

// HasForeignEditionId returns a boolean if a field has been set.
func (o *BookResource) HasForeignEditionId() bool {
	if o != nil && o.ForeignEditionId.IsSet() {
		return true
	}

	return false
}

// SetForeignEditionId gets a reference to the given NullableString and assigns it to the ForeignEditionId field.
func (o *BookResource) SetForeignEditionId(v string) {
	o.ForeignEditionId.Set(&v)
}
// SetForeignEditionIdNil sets the value for ForeignEditionId to be an explicit nil
func (o *BookResource) SetForeignEditionIdNil() {
	o.ForeignEditionId.Set(nil)
}

// UnsetForeignEditionId ensures that no value is present for ForeignEditionId, not even an explicit nil
func (o *BookResource) UnsetForeignEditionId() {
	o.ForeignEditionId.Unset()
}

// GetTitleSlug returns the TitleSlug field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BookResource) GetTitleSlug() string {
	if o == nil || IsNil(o.TitleSlug.Get()) {
		var ret string
		return ret
	}
	return *o.TitleSlug.Get()
}

// GetTitleSlugOk returns a tuple with the TitleSlug field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BookResource) GetTitleSlugOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TitleSlug.Get(), o.TitleSlug.IsSet()
}

// HasTitleSlug returns a boolean if a field has been set.
func (o *BookResource) HasTitleSlug() bool {
	if o != nil && o.TitleSlug.IsSet() {
		return true
	}

	return false
}

// SetTitleSlug gets a reference to the given NullableString and assigns it to the TitleSlug field.
func (o *BookResource) SetTitleSlug(v string) {
	o.TitleSlug.Set(&v)
}
// SetTitleSlugNil sets the value for TitleSlug to be an explicit nil
func (o *BookResource) SetTitleSlugNil() {
	o.TitleSlug.Set(nil)
}

// UnsetTitleSlug ensures that no value is present for TitleSlug, not even an explicit nil
func (o *BookResource) UnsetTitleSlug() {
	o.TitleSlug.Unset()
}

// GetMonitored returns the Monitored field value if set, zero value otherwise.
func (o *BookResource) GetMonitored() bool {
	if o == nil || IsNil(o.Monitored) {
		var ret bool
		return ret
	}
	return *o.Monitored
}

// GetMonitoredOk returns a tuple with the Monitored field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BookResource) GetMonitoredOk() (*bool, bool) {
	if o == nil || IsNil(o.Monitored) {
		return nil, false
	}
	return o.Monitored, true
}

// HasMonitored returns a boolean if a field has been set.
func (o *BookResource) HasMonitored() bool {
	if o != nil && !IsNil(o.Monitored) {
		return true
	}

	return false
}

// SetMonitored gets a reference to the given bool and assigns it to the Monitored field.
func (o *BookResource) SetMonitored(v bool) {
	o.Monitored = &v
}

// GetAnyEditionOk returns the AnyEditionOk field value if set, zero value otherwise.
func (o *BookResource) GetAnyEditionOk() bool {
	if o == nil || IsNil(o.AnyEditionOk) {
		var ret bool
		return ret
	}
	return *o.AnyEditionOk
}

// GetAnyEditionOkOk returns a tuple with the AnyEditionOk field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BookResource) GetAnyEditionOkOk() (*bool, bool) {
	if o == nil || IsNil(o.AnyEditionOk) {
		return nil, false
	}
	return o.AnyEditionOk, true
}

// HasAnyEditionOk returns a boolean if a field has been set.
func (o *BookResource) HasAnyEditionOk() bool {
	if o != nil && !IsNil(o.AnyEditionOk) {
		return true
	}

	return false
}

// SetAnyEditionOk gets a reference to the given bool and assigns it to the AnyEditionOk field.
func (o *BookResource) SetAnyEditionOk(v bool) {
	o.AnyEditionOk = &v
}

// GetRatings returns the Ratings field value if set, zero value otherwise.
func (o *BookResource) GetRatings() Ratings {
	if o == nil || IsNil(o.Ratings) {
		var ret Ratings
		return ret
	}
	return *o.Ratings
}

// GetRatingsOk returns a tuple with the Ratings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BookResource) GetRatingsOk() (*Ratings, bool) {
	if o == nil || IsNil(o.Ratings) {
		return nil, false
	}
	return o.Ratings, true
}

// HasRatings returns a boolean if a field has been set.
func (o *BookResource) HasRatings() bool {
	if o != nil && !IsNil(o.Ratings) {
		return true
	}

	return false
}

// SetRatings gets a reference to the given Ratings and assigns it to the Ratings field.
func (o *BookResource) SetRatings(v Ratings) {
	o.Ratings = &v
}

// GetReleaseDate returns the ReleaseDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BookResource) GetReleaseDate() time.Time {
	if o == nil || IsNil(o.ReleaseDate.Get()) {
		var ret time.Time
		return ret
	}
	return *o.ReleaseDate.Get()
}

// GetReleaseDateOk returns a tuple with the ReleaseDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BookResource) GetReleaseDateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.ReleaseDate.Get(), o.ReleaseDate.IsSet()
}

// HasReleaseDate returns a boolean if a field has been set.
func (o *BookResource) HasReleaseDate() bool {
	if o != nil && o.ReleaseDate.IsSet() {
		return true
	}

	return false
}

// SetReleaseDate gets a reference to the given NullableTime and assigns it to the ReleaseDate field.
func (o *BookResource) SetReleaseDate(v time.Time) {
	o.ReleaseDate.Set(&v)
}
// SetReleaseDateNil sets the value for ReleaseDate to be an explicit nil
func (o *BookResource) SetReleaseDateNil() {
	o.ReleaseDate.Set(nil)
}

// UnsetReleaseDate ensures that no value is present for ReleaseDate, not even an explicit nil
func (o *BookResource) UnsetReleaseDate() {
	o.ReleaseDate.Unset()
}

// GetPageCount returns the PageCount field value if set, zero value otherwise.
func (o *BookResource) GetPageCount() int32 {
	if o == nil || IsNil(o.PageCount) {
		var ret int32
		return ret
	}
	return *o.PageCount
}

// GetPageCountOk returns a tuple with the PageCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BookResource) GetPageCountOk() (*int32, bool) {
	if o == nil || IsNil(o.PageCount) {
		return nil, false
	}
	return o.PageCount, true
}

// HasPageCount returns a boolean if a field has been set.
func (o *BookResource) HasPageCount() bool {
	if o != nil && !IsNil(o.PageCount) {
		return true
	}

	return false
}

// SetPageCount gets a reference to the given int32 and assigns it to the PageCount field.
func (o *BookResource) SetPageCount(v int32) {
	o.PageCount = &v
}

// GetGenres returns the Genres field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BookResource) GetGenres() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.Genres
}

// GetGenresOk returns a tuple with the Genres field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BookResource) GetGenresOk() ([]string, bool) {
	if o == nil || IsNil(o.Genres) {
		return nil, false
	}
	return o.Genres, true
}

// HasGenres returns a boolean if a field has been set.
func (o *BookResource) HasGenres() bool {
	if o != nil && IsNil(o.Genres) {
		return true
	}

	return false
}

// SetGenres gets a reference to the given []string and assigns it to the Genres field.
func (o *BookResource) SetGenres(v []string) {
	o.Genres = v
}

// GetAuthor returns the Author field value if set, zero value otherwise.
func (o *BookResource) GetAuthor() AuthorResource {
	if o == nil || IsNil(o.Author) {
		var ret AuthorResource
		return ret
	}
	return *o.Author
}

// GetAuthorOk returns a tuple with the Author field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BookResource) GetAuthorOk() (*AuthorResource, bool) {
	if o == nil || IsNil(o.Author) {
		return nil, false
	}
	return o.Author, true
}

// HasAuthor returns a boolean if a field has been set.
func (o *BookResource) HasAuthor() bool {
	if o != nil && !IsNil(o.Author) {
		return true
	}

	return false
}

// SetAuthor gets a reference to the given AuthorResource and assigns it to the Author field.
func (o *BookResource) SetAuthor(v AuthorResource) {
	o.Author = &v
}

// GetImages returns the Images field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BookResource) GetImages() []MediaCover {
	if o == nil {
		var ret []MediaCover
		return ret
	}
	return o.Images
}

// GetImagesOk returns a tuple with the Images field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BookResource) GetImagesOk() ([]MediaCover, bool) {
	if o == nil || IsNil(o.Images) {
		return nil, false
	}
	return o.Images, true
}

// HasImages returns a boolean if a field has been set.
func (o *BookResource) HasImages() bool {
	if o != nil && IsNil(o.Images) {
		return true
	}

	return false
}

// SetImages gets a reference to the given []MediaCover and assigns it to the Images field.
func (o *BookResource) SetImages(v []MediaCover) {
	o.Images = v
}

// GetLinks returns the Links field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BookResource) GetLinks() []Links {
	if o == nil {
		var ret []Links
		return ret
	}
	return o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BookResource) GetLinksOk() ([]Links, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *BookResource) HasLinks() bool {
	if o != nil && IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given []Links and assigns it to the Links field.
func (o *BookResource) SetLinks(v []Links) {
	o.Links = v
}

// GetStatistics returns the Statistics field value if set, zero value otherwise.
func (o *BookResource) GetStatistics() BookStatisticsResource {
	if o == nil || IsNil(o.Statistics) {
		var ret BookStatisticsResource
		return ret
	}
	return *o.Statistics
}

// GetStatisticsOk returns a tuple with the Statistics field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BookResource) GetStatisticsOk() (*BookStatisticsResource, bool) {
	if o == nil || IsNil(o.Statistics) {
		return nil, false
	}
	return o.Statistics, true
}

// HasStatistics returns a boolean if a field has been set.
func (o *BookResource) HasStatistics() bool {
	if o != nil && !IsNil(o.Statistics) {
		return true
	}

	return false
}

// SetStatistics gets a reference to the given BookStatisticsResource and assigns it to the Statistics field.
func (o *BookResource) SetStatistics(v BookStatisticsResource) {
	o.Statistics = &v
}

// GetAdded returns the Added field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BookResource) GetAdded() time.Time {
	if o == nil || IsNil(o.Added.Get()) {
		var ret time.Time
		return ret
	}
	return *o.Added.Get()
}

// GetAddedOk returns a tuple with the Added field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BookResource) GetAddedOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.Added.Get(), o.Added.IsSet()
}

// HasAdded returns a boolean if a field has been set.
func (o *BookResource) HasAdded() bool {
	if o != nil && o.Added.IsSet() {
		return true
	}

	return false
}

// SetAdded gets a reference to the given NullableTime and assigns it to the Added field.
func (o *BookResource) SetAdded(v time.Time) {
	o.Added.Set(&v)
}
// SetAddedNil sets the value for Added to be an explicit nil
func (o *BookResource) SetAddedNil() {
	o.Added.Set(nil)
}

// UnsetAdded ensures that no value is present for Added, not even an explicit nil
func (o *BookResource) UnsetAdded() {
	o.Added.Unset()
}

// GetAddOptions returns the AddOptions field value if set, zero value otherwise.
func (o *BookResource) GetAddOptions() AddBookOptions {
	if o == nil || IsNil(o.AddOptions) {
		var ret AddBookOptions
		return ret
	}
	return *o.AddOptions
}

// GetAddOptionsOk returns a tuple with the AddOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BookResource) GetAddOptionsOk() (*AddBookOptions, bool) {
	if o == nil || IsNil(o.AddOptions) {
		return nil, false
	}
	return o.AddOptions, true
}

// HasAddOptions returns a boolean if a field has been set.
func (o *BookResource) HasAddOptions() bool {
	if o != nil && !IsNil(o.AddOptions) {
		return true
	}

	return false
}

// SetAddOptions gets a reference to the given AddBookOptions and assigns it to the AddOptions field.
func (o *BookResource) SetAddOptions(v AddBookOptions) {
	o.AddOptions = &v
}

// GetRemoteCover returns the RemoteCover field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BookResource) GetRemoteCover() string {
	if o == nil || IsNil(o.RemoteCover.Get()) {
		var ret string
		return ret
	}
	return *o.RemoteCover.Get()
}

// GetRemoteCoverOk returns a tuple with the RemoteCover field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BookResource) GetRemoteCoverOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RemoteCover.Get(), o.RemoteCover.IsSet()
}

// HasRemoteCover returns a boolean if a field has been set.
func (o *BookResource) HasRemoteCover() bool {
	if o != nil && o.RemoteCover.IsSet() {
		return true
	}

	return false
}

// SetRemoteCover gets a reference to the given NullableString and assigns it to the RemoteCover field.
func (o *BookResource) SetRemoteCover(v string) {
	o.RemoteCover.Set(&v)
}
// SetRemoteCoverNil sets the value for RemoteCover to be an explicit nil
func (o *BookResource) SetRemoteCoverNil() {
	o.RemoteCover.Set(nil)
}

// UnsetRemoteCover ensures that no value is present for RemoteCover, not even an explicit nil
func (o *BookResource) UnsetRemoteCover() {
	o.RemoteCover.Unset()
}

// GetEditions returns the Editions field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BookResource) GetEditions() []EditionResource {
	if o == nil {
		var ret []EditionResource
		return ret
	}
	return o.Editions
}

// GetEditionsOk returns a tuple with the Editions field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BookResource) GetEditionsOk() ([]EditionResource, bool) {
	if o == nil || IsNil(o.Editions) {
		return nil, false
	}
	return o.Editions, true
}

// HasEditions returns a boolean if a field has been set.
func (o *BookResource) HasEditions() bool {
	if o != nil && IsNil(o.Editions) {
		return true
	}

	return false
}

// SetEditions gets a reference to the given []EditionResource and assigns it to the Editions field.
func (o *BookResource) SetEditions(v []EditionResource) {
	o.Editions = v
}

// GetGrabbed returns the Grabbed field value if set, zero value otherwise.
func (o *BookResource) GetGrabbed() bool {
	if o == nil || IsNil(o.Grabbed) {
		var ret bool
		return ret
	}
	return *o.Grabbed
}

// GetGrabbedOk returns a tuple with the Grabbed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BookResource) GetGrabbedOk() (*bool, bool) {
	if o == nil || IsNil(o.Grabbed) {
		return nil, false
	}
	return o.Grabbed, true
}

// HasGrabbed returns a boolean if a field has been set.
func (o *BookResource) HasGrabbed() bool {
	if o != nil && !IsNil(o.Grabbed) {
		return true
	}

	return false
}

// SetGrabbed gets a reference to the given bool and assigns it to the Grabbed field.
func (o *BookResource) SetGrabbed(v bool) {
	o.Grabbed = &v
}

func (o BookResource) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BookResource) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if o.Title.IsSet() {
		toSerialize["title"] = o.Title.Get()
	}
	if o.AuthorTitle.IsSet() {
		toSerialize["authorTitle"] = o.AuthorTitle.Get()
	}
	if o.SeriesTitle.IsSet() {
		toSerialize["seriesTitle"] = o.SeriesTitle.Get()
	}
	if o.Disambiguation.IsSet() {
		toSerialize["disambiguation"] = o.Disambiguation.Get()
	}
	if o.Overview.IsSet() {
		toSerialize["overview"] = o.Overview.Get()
	}
	if !IsNil(o.AuthorId) {
		toSerialize["authorId"] = o.AuthorId
	}
	if o.ForeignBookId.IsSet() {
		toSerialize["foreignBookId"] = o.ForeignBookId.Get()
	}
	if o.ForeignEditionId.IsSet() {
		toSerialize["foreignEditionId"] = o.ForeignEditionId.Get()
	}
	if o.TitleSlug.IsSet() {
		toSerialize["titleSlug"] = o.TitleSlug.Get()
	}
	if !IsNil(o.Monitored) {
		toSerialize["monitored"] = o.Monitored
	}
	if !IsNil(o.AnyEditionOk) {
		toSerialize["anyEditionOk"] = o.AnyEditionOk
	}
	if !IsNil(o.Ratings) {
		toSerialize["ratings"] = o.Ratings
	}
	if o.ReleaseDate.IsSet() {
		toSerialize["releaseDate"] = o.ReleaseDate.Get()
	}
	if !IsNil(o.PageCount) {
		toSerialize["pageCount"] = o.PageCount
	}
	if o.Genres != nil {
		toSerialize["genres"] = o.Genres
	}
	if !IsNil(o.Author) {
		toSerialize["author"] = o.Author
	}
	if o.Images != nil {
		toSerialize["images"] = o.Images
	}
	if o.Links != nil {
		toSerialize["links"] = o.Links
	}
	if !IsNil(o.Statistics) {
		toSerialize["statistics"] = o.Statistics
	}
	if o.Added.IsSet() {
		toSerialize["added"] = o.Added.Get()
	}
	if !IsNil(o.AddOptions) {
		toSerialize["addOptions"] = o.AddOptions
	}
	if o.RemoteCover.IsSet() {
		toSerialize["remoteCover"] = o.RemoteCover.Get()
	}
	if o.Editions != nil {
		toSerialize["editions"] = o.Editions
	}
	if !IsNil(o.Grabbed) {
		toSerialize["grabbed"] = o.Grabbed
	}
	return toSerialize, nil
}

type NullableBookResource struct {
	value *BookResource
	isSet bool
}

func (v NullableBookResource) Get() *BookResource {
	return v.value
}

func (v *NullableBookResource) Set(val *BookResource) {
	v.value = val
	v.isSet = true
}

func (v NullableBookResource) IsSet() bool {
	return v.isSet
}

func (v *NullableBookResource) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBookResource(val *BookResource) *NullableBookResource {
	return &NullableBookResource{value: val, isSet: true}
}

func (v NullableBookResource) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBookResource) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


