/*
Readarr

Readarr API docs

API version: v0.3.18.2411
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package readarr

import (
	"encoding/json"
)

// AddBookOptions struct for AddBookOptions
type AddBookOptions struct {
	AddType *BookAddType `json:"addType,omitempty"`
	SearchForNewBook *bool `json:"searchForNewBook,omitempty"`
}

// NewAddBookOptions instantiates a new AddBookOptions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddBookOptions() *AddBookOptions {
	this := AddBookOptions{}
	return &this
}

// NewAddBookOptionsWithDefaults instantiates a new AddBookOptions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddBookOptionsWithDefaults() *AddBookOptions {
	this := AddBookOptions{}
	return &this
}

// GetAddType returns the AddType field value if set, zero value otherwise.
func (o *AddBookOptions) GetAddType() BookAddType {
	if o == nil || isNil(o.AddType) {
		var ret BookAddType
		return ret
	}
	return *o.AddType
}

// GetAddTypeOk returns a tuple with the AddType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddBookOptions) GetAddTypeOk() (*BookAddType, bool) {
	if o == nil || isNil(o.AddType) {
    return nil, false
	}
	return o.AddType, true
}

// HasAddType returns a boolean if a field has been set.
func (o *AddBookOptions) HasAddType() bool {
	if o != nil && !isNil(o.AddType) {
		return true
	}

	return false
}

// SetAddType gets a reference to the given BookAddType and assigns it to the AddType field.
func (o *AddBookOptions) SetAddType(v BookAddType) {
	o.AddType = &v
}

// GetSearchForNewBook returns the SearchForNewBook field value if set, zero value otherwise.
func (o *AddBookOptions) GetSearchForNewBook() bool {
	if o == nil || isNil(o.SearchForNewBook) {
		var ret bool
		return ret
	}
	return *o.SearchForNewBook
}

// GetSearchForNewBookOk returns a tuple with the SearchForNewBook field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddBookOptions) GetSearchForNewBookOk() (*bool, bool) {
	if o == nil || isNil(o.SearchForNewBook) {
    return nil, false
	}
	return o.SearchForNewBook, true
}

// HasSearchForNewBook returns a boolean if a field has been set.
func (o *AddBookOptions) HasSearchForNewBook() bool {
	if o != nil && !isNil(o.SearchForNewBook) {
		return true
	}

	return false
}

// SetSearchForNewBook gets a reference to the given bool and assigns it to the SearchForNewBook field.
func (o *AddBookOptions) SetSearchForNewBook(v bool) {
	o.SearchForNewBook = &v
}

func (o AddBookOptions) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.AddType) {
		toSerialize["addType"] = o.AddType
	}
	if !isNil(o.SearchForNewBook) {
		toSerialize["searchForNewBook"] = o.SearchForNewBook
	}
	return json.Marshal(toSerialize)
}

type NullableAddBookOptions struct {
	value *AddBookOptions
	isSet bool
}

func (v NullableAddBookOptions) Get() *AddBookOptions {
	return v.value
}

func (v *NullableAddBookOptions) Set(val *AddBookOptions) {
	v.value = val
	v.isSet = true
}

func (v NullableAddBookOptions) IsSet() bool {
	return v.isSet
}

func (v *NullableAddBookOptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddBookOptions(val *AddBookOptions) *NullableAddBookOptions {
	return &NullableAddBookOptions{value: val, isSet: true}
}

func (v NullableAddBookOptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddBookOptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


