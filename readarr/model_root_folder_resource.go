/*
Readarr

Readarr API docs

API version: v0.3.18.2411
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package readarr

import (
	"encoding/json"
)

// checks if the RootFolderResource type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RootFolderResource{}

// RootFolderResource struct for RootFolderResource
type RootFolderResource struct {
	Id *int32 `json:"id,omitempty"`
	Name NullableString `json:"name,omitempty"`
	Path NullableString `json:"path,omitempty"`
	DefaultMetadataProfileId *int32 `json:"defaultMetadataProfileId,omitempty"`
	DefaultQualityProfileId *int32 `json:"defaultQualityProfileId,omitempty"`
	DefaultMonitorOption *MonitorTypes `json:"defaultMonitorOption,omitempty"`
	DefaultNewItemMonitorOption *NewItemMonitorTypes `json:"defaultNewItemMonitorOption,omitempty"`
	DefaultTags []int32 `json:"defaultTags,omitempty"`
	IsCalibreLibrary *bool `json:"isCalibreLibrary,omitempty"`
	Host NullableString `json:"host,omitempty"`
	Port *int32 `json:"port,omitempty"`
	UrlBase NullableString `json:"urlBase,omitempty"`
	Username NullableString `json:"username,omitempty"`
	Password NullableString `json:"password,omitempty"`
	Library NullableString `json:"library,omitempty"`
	OutputFormat NullableString `json:"outputFormat,omitempty"`
	OutputProfile NullableString `json:"outputProfile,omitempty"`
	UseSsl *bool `json:"useSsl,omitempty"`
	Accessible *bool `json:"accessible,omitempty"`
	FreeSpace NullableInt64 `json:"freeSpace,omitempty"`
	TotalSpace NullableInt64 `json:"totalSpace,omitempty"`
}

// NewRootFolderResource instantiates a new RootFolderResource object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRootFolderResource() *RootFolderResource {
	this := RootFolderResource{}
	return &this
}

// NewRootFolderResourceWithDefaults instantiates a new RootFolderResource object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRootFolderResourceWithDefaults() *RootFolderResource {
	this := RootFolderResource{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *RootFolderResource) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RootFolderResource) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *RootFolderResource) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *RootFolderResource) SetId(v int32) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RootFolderResource) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RootFolderResource) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *RootFolderResource) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *RootFolderResource) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *RootFolderResource) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *RootFolderResource) UnsetName() {
	o.Name.Unset()
}

// GetPath returns the Path field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RootFolderResource) GetPath() string {
	if o == nil || IsNil(o.Path.Get()) {
		var ret string
		return ret
	}
	return *o.Path.Get()
}

// GetPathOk returns a tuple with the Path field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RootFolderResource) GetPathOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Path.Get(), o.Path.IsSet()
}

// HasPath returns a boolean if a field has been set.
func (o *RootFolderResource) HasPath() bool {
	if o != nil && o.Path.IsSet() {
		return true
	}

	return false
}

// SetPath gets a reference to the given NullableString and assigns it to the Path field.
func (o *RootFolderResource) SetPath(v string) {
	o.Path.Set(&v)
}
// SetPathNil sets the value for Path to be an explicit nil
func (o *RootFolderResource) SetPathNil() {
	o.Path.Set(nil)
}

// UnsetPath ensures that no value is present for Path, not even an explicit nil
func (o *RootFolderResource) UnsetPath() {
	o.Path.Unset()
}

// GetDefaultMetadataProfileId returns the DefaultMetadataProfileId field value if set, zero value otherwise.
func (o *RootFolderResource) GetDefaultMetadataProfileId() int32 {
	if o == nil || IsNil(o.DefaultMetadataProfileId) {
		var ret int32
		return ret
	}
	return *o.DefaultMetadataProfileId
}

// GetDefaultMetadataProfileIdOk returns a tuple with the DefaultMetadataProfileId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RootFolderResource) GetDefaultMetadataProfileIdOk() (*int32, bool) {
	if o == nil || IsNil(o.DefaultMetadataProfileId) {
		return nil, false
	}
	return o.DefaultMetadataProfileId, true
}

// HasDefaultMetadataProfileId returns a boolean if a field has been set.
func (o *RootFolderResource) HasDefaultMetadataProfileId() bool {
	if o != nil && !IsNil(o.DefaultMetadataProfileId) {
		return true
	}

	return false
}

// SetDefaultMetadataProfileId gets a reference to the given int32 and assigns it to the DefaultMetadataProfileId field.
func (o *RootFolderResource) SetDefaultMetadataProfileId(v int32) {
	o.DefaultMetadataProfileId = &v
}

// GetDefaultQualityProfileId returns the DefaultQualityProfileId field value if set, zero value otherwise.
func (o *RootFolderResource) GetDefaultQualityProfileId() int32 {
	if o == nil || IsNil(o.DefaultQualityProfileId) {
		var ret int32
		return ret
	}
	return *o.DefaultQualityProfileId
}

// GetDefaultQualityProfileIdOk returns a tuple with the DefaultQualityProfileId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RootFolderResource) GetDefaultQualityProfileIdOk() (*int32, bool) {
	if o == nil || IsNil(o.DefaultQualityProfileId) {
		return nil, false
	}
	return o.DefaultQualityProfileId, true
}

// HasDefaultQualityProfileId returns a boolean if a field has been set.
func (o *RootFolderResource) HasDefaultQualityProfileId() bool {
	if o != nil && !IsNil(o.DefaultQualityProfileId) {
		return true
	}

	return false
}

// SetDefaultQualityProfileId gets a reference to the given int32 and assigns it to the DefaultQualityProfileId field.
func (o *RootFolderResource) SetDefaultQualityProfileId(v int32) {
	o.DefaultQualityProfileId = &v
}

// GetDefaultMonitorOption returns the DefaultMonitorOption field value if set, zero value otherwise.
func (o *RootFolderResource) GetDefaultMonitorOption() MonitorTypes {
	if o == nil || IsNil(o.DefaultMonitorOption) {
		var ret MonitorTypes
		return ret
	}
	return *o.DefaultMonitorOption
}

// GetDefaultMonitorOptionOk returns a tuple with the DefaultMonitorOption field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RootFolderResource) GetDefaultMonitorOptionOk() (*MonitorTypes, bool) {
	if o == nil || IsNil(o.DefaultMonitorOption) {
		return nil, false
	}
	return o.DefaultMonitorOption, true
}

// HasDefaultMonitorOption returns a boolean if a field has been set.
func (o *RootFolderResource) HasDefaultMonitorOption() bool {
	if o != nil && !IsNil(o.DefaultMonitorOption) {
		return true
	}

	return false
}

// SetDefaultMonitorOption gets a reference to the given MonitorTypes and assigns it to the DefaultMonitorOption field.
func (o *RootFolderResource) SetDefaultMonitorOption(v MonitorTypes) {
	o.DefaultMonitorOption = &v
}

// GetDefaultNewItemMonitorOption returns the DefaultNewItemMonitorOption field value if set, zero value otherwise.
func (o *RootFolderResource) GetDefaultNewItemMonitorOption() NewItemMonitorTypes {
	if o == nil || IsNil(o.DefaultNewItemMonitorOption) {
		var ret NewItemMonitorTypes
		return ret
	}
	return *o.DefaultNewItemMonitorOption
}

// GetDefaultNewItemMonitorOptionOk returns a tuple with the DefaultNewItemMonitorOption field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RootFolderResource) GetDefaultNewItemMonitorOptionOk() (*NewItemMonitorTypes, bool) {
	if o == nil || IsNil(o.DefaultNewItemMonitorOption) {
		return nil, false
	}
	return o.DefaultNewItemMonitorOption, true
}

// HasDefaultNewItemMonitorOption returns a boolean if a field has been set.
func (o *RootFolderResource) HasDefaultNewItemMonitorOption() bool {
	if o != nil && !IsNil(o.DefaultNewItemMonitorOption) {
		return true
	}

	return false
}

// SetDefaultNewItemMonitorOption gets a reference to the given NewItemMonitorTypes and assigns it to the DefaultNewItemMonitorOption field.
func (o *RootFolderResource) SetDefaultNewItemMonitorOption(v NewItemMonitorTypes) {
	o.DefaultNewItemMonitorOption = &v
}

// GetDefaultTags returns the DefaultTags field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RootFolderResource) GetDefaultTags() []int32 {
	if o == nil {
		var ret []int32
		return ret
	}
	return o.DefaultTags
}

// GetDefaultTagsOk returns a tuple with the DefaultTags field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RootFolderResource) GetDefaultTagsOk() ([]int32, bool) {
	if o == nil || IsNil(o.DefaultTags) {
		return nil, false
	}
	return o.DefaultTags, true
}

// HasDefaultTags returns a boolean if a field has been set.
func (o *RootFolderResource) HasDefaultTags() bool {
	if o != nil && !IsNil(o.DefaultTags) {
		return true
	}

	return false
}

// SetDefaultTags gets a reference to the given []int32 and assigns it to the DefaultTags field.
func (o *RootFolderResource) SetDefaultTags(v []int32) {
	o.DefaultTags = v
}

// GetIsCalibreLibrary returns the IsCalibreLibrary field value if set, zero value otherwise.
func (o *RootFolderResource) GetIsCalibreLibrary() bool {
	if o == nil || IsNil(o.IsCalibreLibrary) {
		var ret bool
		return ret
	}
	return *o.IsCalibreLibrary
}

// GetIsCalibreLibraryOk returns a tuple with the IsCalibreLibrary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RootFolderResource) GetIsCalibreLibraryOk() (*bool, bool) {
	if o == nil || IsNil(o.IsCalibreLibrary) {
		return nil, false
	}
	return o.IsCalibreLibrary, true
}

// HasIsCalibreLibrary returns a boolean if a field has been set.
func (o *RootFolderResource) HasIsCalibreLibrary() bool {
	if o != nil && !IsNil(o.IsCalibreLibrary) {
		return true
	}

	return false
}

// SetIsCalibreLibrary gets a reference to the given bool and assigns it to the IsCalibreLibrary field.
func (o *RootFolderResource) SetIsCalibreLibrary(v bool) {
	o.IsCalibreLibrary = &v
}

// GetHost returns the Host field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RootFolderResource) GetHost() string {
	if o == nil || IsNil(o.Host.Get()) {
		var ret string
		return ret
	}
	return *o.Host.Get()
}

// GetHostOk returns a tuple with the Host field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RootFolderResource) GetHostOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Host.Get(), o.Host.IsSet()
}

// HasHost returns a boolean if a field has been set.
func (o *RootFolderResource) HasHost() bool {
	if o != nil && o.Host.IsSet() {
		return true
	}

	return false
}

// SetHost gets a reference to the given NullableString and assigns it to the Host field.
func (o *RootFolderResource) SetHost(v string) {
	o.Host.Set(&v)
}
// SetHostNil sets the value for Host to be an explicit nil
func (o *RootFolderResource) SetHostNil() {
	o.Host.Set(nil)
}

// UnsetHost ensures that no value is present for Host, not even an explicit nil
func (o *RootFolderResource) UnsetHost() {
	o.Host.Unset()
}

// GetPort returns the Port field value if set, zero value otherwise.
func (o *RootFolderResource) GetPort() int32 {
	if o == nil || IsNil(o.Port) {
		var ret int32
		return ret
	}
	return *o.Port
}

// GetPortOk returns a tuple with the Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RootFolderResource) GetPortOk() (*int32, bool) {
	if o == nil || IsNil(o.Port) {
		return nil, false
	}
	return o.Port, true
}

// HasPort returns a boolean if a field has been set.
func (o *RootFolderResource) HasPort() bool {
	if o != nil && !IsNil(o.Port) {
		return true
	}

	return false
}

// SetPort gets a reference to the given int32 and assigns it to the Port field.
func (o *RootFolderResource) SetPort(v int32) {
	o.Port = &v
}

// GetUrlBase returns the UrlBase field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RootFolderResource) GetUrlBase() string {
	if o == nil || IsNil(o.UrlBase.Get()) {
		var ret string
		return ret
	}
	return *o.UrlBase.Get()
}

// GetUrlBaseOk returns a tuple with the UrlBase field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RootFolderResource) GetUrlBaseOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.UrlBase.Get(), o.UrlBase.IsSet()
}

// HasUrlBase returns a boolean if a field has been set.
func (o *RootFolderResource) HasUrlBase() bool {
	if o != nil && o.UrlBase.IsSet() {
		return true
	}

	return false
}

// SetUrlBase gets a reference to the given NullableString and assigns it to the UrlBase field.
func (o *RootFolderResource) SetUrlBase(v string) {
	o.UrlBase.Set(&v)
}
// SetUrlBaseNil sets the value for UrlBase to be an explicit nil
func (o *RootFolderResource) SetUrlBaseNil() {
	o.UrlBase.Set(nil)
}

// UnsetUrlBase ensures that no value is present for UrlBase, not even an explicit nil
func (o *RootFolderResource) UnsetUrlBase() {
	o.UrlBase.Unset()
}

// GetUsername returns the Username field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RootFolderResource) GetUsername() string {
	if o == nil || IsNil(o.Username.Get()) {
		var ret string
		return ret
	}
	return *o.Username.Get()
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RootFolderResource) GetUsernameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Username.Get(), o.Username.IsSet()
}

// HasUsername returns a boolean if a field has been set.
func (o *RootFolderResource) HasUsername() bool {
	if o != nil && o.Username.IsSet() {
		return true
	}

	return false
}

// SetUsername gets a reference to the given NullableString and assigns it to the Username field.
func (o *RootFolderResource) SetUsername(v string) {
	o.Username.Set(&v)
}
// SetUsernameNil sets the value for Username to be an explicit nil
func (o *RootFolderResource) SetUsernameNil() {
	o.Username.Set(nil)
}

// UnsetUsername ensures that no value is present for Username, not even an explicit nil
func (o *RootFolderResource) UnsetUsername() {
	o.Username.Unset()
}

// GetPassword returns the Password field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RootFolderResource) GetPassword() string {
	if o == nil || IsNil(o.Password.Get()) {
		var ret string
		return ret
	}
	return *o.Password.Get()
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RootFolderResource) GetPasswordOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Password.Get(), o.Password.IsSet()
}

// HasPassword returns a boolean if a field has been set.
func (o *RootFolderResource) HasPassword() bool {
	if o != nil && o.Password.IsSet() {
		return true
	}

	return false
}

// SetPassword gets a reference to the given NullableString and assigns it to the Password field.
func (o *RootFolderResource) SetPassword(v string) {
	o.Password.Set(&v)
}
// SetPasswordNil sets the value for Password to be an explicit nil
func (o *RootFolderResource) SetPasswordNil() {
	o.Password.Set(nil)
}

// UnsetPassword ensures that no value is present for Password, not even an explicit nil
func (o *RootFolderResource) UnsetPassword() {
	o.Password.Unset()
}

// GetLibrary returns the Library field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RootFolderResource) GetLibrary() string {
	if o == nil || IsNil(o.Library.Get()) {
		var ret string
		return ret
	}
	return *o.Library.Get()
}

// GetLibraryOk returns a tuple with the Library field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RootFolderResource) GetLibraryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Library.Get(), o.Library.IsSet()
}

// HasLibrary returns a boolean if a field has been set.
func (o *RootFolderResource) HasLibrary() bool {
	if o != nil && o.Library.IsSet() {
		return true
	}

	return false
}

// SetLibrary gets a reference to the given NullableString and assigns it to the Library field.
func (o *RootFolderResource) SetLibrary(v string) {
	o.Library.Set(&v)
}
// SetLibraryNil sets the value for Library to be an explicit nil
func (o *RootFolderResource) SetLibraryNil() {
	o.Library.Set(nil)
}

// UnsetLibrary ensures that no value is present for Library, not even an explicit nil
func (o *RootFolderResource) UnsetLibrary() {
	o.Library.Unset()
}

// GetOutputFormat returns the OutputFormat field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RootFolderResource) GetOutputFormat() string {
	if o == nil || IsNil(o.OutputFormat.Get()) {
		var ret string
		return ret
	}
	return *o.OutputFormat.Get()
}

// GetOutputFormatOk returns a tuple with the OutputFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RootFolderResource) GetOutputFormatOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OutputFormat.Get(), o.OutputFormat.IsSet()
}

// HasOutputFormat returns a boolean if a field has been set.
func (o *RootFolderResource) HasOutputFormat() bool {
	if o != nil && o.OutputFormat.IsSet() {
		return true
	}

	return false
}

// SetOutputFormat gets a reference to the given NullableString and assigns it to the OutputFormat field.
func (o *RootFolderResource) SetOutputFormat(v string) {
	o.OutputFormat.Set(&v)
}
// SetOutputFormatNil sets the value for OutputFormat to be an explicit nil
func (o *RootFolderResource) SetOutputFormatNil() {
	o.OutputFormat.Set(nil)
}

// UnsetOutputFormat ensures that no value is present for OutputFormat, not even an explicit nil
func (o *RootFolderResource) UnsetOutputFormat() {
	o.OutputFormat.Unset()
}

// GetOutputProfile returns the OutputProfile field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RootFolderResource) GetOutputProfile() string {
	if o == nil || IsNil(o.OutputProfile.Get()) {
		var ret string
		return ret
	}
	return *o.OutputProfile.Get()
}

// GetOutputProfileOk returns a tuple with the OutputProfile field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RootFolderResource) GetOutputProfileOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OutputProfile.Get(), o.OutputProfile.IsSet()
}

// HasOutputProfile returns a boolean if a field has been set.
func (o *RootFolderResource) HasOutputProfile() bool {
	if o != nil && o.OutputProfile.IsSet() {
		return true
	}

	return false
}

// SetOutputProfile gets a reference to the given NullableString and assigns it to the OutputProfile field.
func (o *RootFolderResource) SetOutputProfile(v string) {
	o.OutputProfile.Set(&v)
}
// SetOutputProfileNil sets the value for OutputProfile to be an explicit nil
func (o *RootFolderResource) SetOutputProfileNil() {
	o.OutputProfile.Set(nil)
}

// UnsetOutputProfile ensures that no value is present for OutputProfile, not even an explicit nil
func (o *RootFolderResource) UnsetOutputProfile() {
	o.OutputProfile.Unset()
}

// GetUseSsl returns the UseSsl field value if set, zero value otherwise.
func (o *RootFolderResource) GetUseSsl() bool {
	if o == nil || IsNil(o.UseSsl) {
		var ret bool
		return ret
	}
	return *o.UseSsl
}

// GetUseSslOk returns a tuple with the UseSsl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RootFolderResource) GetUseSslOk() (*bool, bool) {
	if o == nil || IsNil(o.UseSsl) {
		return nil, false
	}
	return o.UseSsl, true
}

// HasUseSsl returns a boolean if a field has been set.
func (o *RootFolderResource) HasUseSsl() bool {
	if o != nil && !IsNil(o.UseSsl) {
		return true
	}

	return false
}

// SetUseSsl gets a reference to the given bool and assigns it to the UseSsl field.
func (o *RootFolderResource) SetUseSsl(v bool) {
	o.UseSsl = &v
}

// GetAccessible returns the Accessible field value if set, zero value otherwise.
func (o *RootFolderResource) GetAccessible() bool {
	if o == nil || IsNil(o.Accessible) {
		var ret bool
		return ret
	}
	return *o.Accessible
}

// GetAccessibleOk returns a tuple with the Accessible field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RootFolderResource) GetAccessibleOk() (*bool, bool) {
	if o == nil || IsNil(o.Accessible) {
		return nil, false
	}
	return o.Accessible, true
}

// HasAccessible returns a boolean if a field has been set.
func (o *RootFolderResource) HasAccessible() bool {
	if o != nil && !IsNil(o.Accessible) {
		return true
	}

	return false
}

// SetAccessible gets a reference to the given bool and assigns it to the Accessible field.
func (o *RootFolderResource) SetAccessible(v bool) {
	o.Accessible = &v
}

// GetFreeSpace returns the FreeSpace field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RootFolderResource) GetFreeSpace() int64 {
	if o == nil || IsNil(o.FreeSpace.Get()) {
		var ret int64
		return ret
	}
	return *o.FreeSpace.Get()
}

// GetFreeSpaceOk returns a tuple with the FreeSpace field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RootFolderResource) GetFreeSpaceOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.FreeSpace.Get(), o.FreeSpace.IsSet()
}

// HasFreeSpace returns a boolean if a field has been set.
func (o *RootFolderResource) HasFreeSpace() bool {
	if o != nil && o.FreeSpace.IsSet() {
		return true
	}

	return false
}

// SetFreeSpace gets a reference to the given NullableInt64 and assigns it to the FreeSpace field.
func (o *RootFolderResource) SetFreeSpace(v int64) {
	o.FreeSpace.Set(&v)
}
// SetFreeSpaceNil sets the value for FreeSpace to be an explicit nil
func (o *RootFolderResource) SetFreeSpaceNil() {
	o.FreeSpace.Set(nil)
}

// UnsetFreeSpace ensures that no value is present for FreeSpace, not even an explicit nil
func (o *RootFolderResource) UnsetFreeSpace() {
	o.FreeSpace.Unset()
}

// GetTotalSpace returns the TotalSpace field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RootFolderResource) GetTotalSpace() int64 {
	if o == nil || IsNil(o.TotalSpace.Get()) {
		var ret int64
		return ret
	}
	return *o.TotalSpace.Get()
}

// GetTotalSpaceOk returns a tuple with the TotalSpace field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RootFolderResource) GetTotalSpaceOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.TotalSpace.Get(), o.TotalSpace.IsSet()
}

// HasTotalSpace returns a boolean if a field has been set.
func (o *RootFolderResource) HasTotalSpace() bool {
	if o != nil && o.TotalSpace.IsSet() {
		return true
	}

	return false
}

// SetTotalSpace gets a reference to the given NullableInt64 and assigns it to the TotalSpace field.
func (o *RootFolderResource) SetTotalSpace(v int64) {
	o.TotalSpace.Set(&v)
}
// SetTotalSpaceNil sets the value for TotalSpace to be an explicit nil
func (o *RootFolderResource) SetTotalSpaceNil() {
	o.TotalSpace.Set(nil)
}

// UnsetTotalSpace ensures that no value is present for TotalSpace, not even an explicit nil
func (o *RootFolderResource) UnsetTotalSpace() {
	o.TotalSpace.Unset()
}

func (o RootFolderResource) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RootFolderResource) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.Path.IsSet() {
		toSerialize["path"] = o.Path.Get()
	}
	if !IsNil(o.DefaultMetadataProfileId) {
		toSerialize["defaultMetadataProfileId"] = o.DefaultMetadataProfileId
	}
	if !IsNil(o.DefaultQualityProfileId) {
		toSerialize["defaultQualityProfileId"] = o.DefaultQualityProfileId
	}
	if !IsNil(o.DefaultMonitorOption) {
		toSerialize["defaultMonitorOption"] = o.DefaultMonitorOption
	}
	if !IsNil(o.DefaultNewItemMonitorOption) {
		toSerialize["defaultNewItemMonitorOption"] = o.DefaultNewItemMonitorOption
	}
	if o.DefaultTags != nil {
		toSerialize["defaultTags"] = o.DefaultTags
	}
	if !IsNil(o.IsCalibreLibrary) {
		toSerialize["isCalibreLibrary"] = o.IsCalibreLibrary
	}
	if o.Host.IsSet() {
		toSerialize["host"] = o.Host.Get()
	}
	if !IsNil(o.Port) {
		toSerialize["port"] = o.Port
	}
	if o.UrlBase.IsSet() {
		toSerialize["urlBase"] = o.UrlBase.Get()
	}
	if o.Username.IsSet() {
		toSerialize["username"] = o.Username.Get()
	}
	if o.Password.IsSet() {
		toSerialize["password"] = o.Password.Get()
	}
	if o.Library.IsSet() {
		toSerialize["library"] = o.Library.Get()
	}
	if o.OutputFormat.IsSet() {
		toSerialize["outputFormat"] = o.OutputFormat.Get()
	}
	if o.OutputProfile.IsSet() {
		toSerialize["outputProfile"] = o.OutputProfile.Get()
	}
	if !IsNil(o.UseSsl) {
		toSerialize["useSsl"] = o.UseSsl
	}
	if !IsNil(o.Accessible) {
		toSerialize["accessible"] = o.Accessible
	}
	if o.FreeSpace.IsSet() {
		toSerialize["freeSpace"] = o.FreeSpace.Get()
	}
	if o.TotalSpace.IsSet() {
		toSerialize["totalSpace"] = o.TotalSpace.Get()
	}
	return toSerialize, nil
}

type NullableRootFolderResource struct {
	value *RootFolderResource
	isSet bool
}

func (v NullableRootFolderResource) Get() *RootFolderResource {
	return v.value
}

func (v *NullableRootFolderResource) Set(val *RootFolderResource) {
	v.value = val
	v.isSet = true
}

func (v NullableRootFolderResource) IsSet() bool {
	return v.isSet
}

func (v *NullableRootFolderResource) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRootFolderResource(val *RootFolderResource) *NullableRootFolderResource {
	return &NullableRootFolderResource{value: val, isSet: true}
}

func (v NullableRootFolderResource) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRootFolderResource) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


