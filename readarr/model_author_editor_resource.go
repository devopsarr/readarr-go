/*
Readarr

Readarr API docs

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package readarr

import (
	"encoding/json"
)

// AuthorEditorResource struct for AuthorEditorResource
type AuthorEditorResource struct {
	AuthorIds []*int32 `json:"authorIds,omitempty"`
	Monitored NullableBool `json:"monitored,omitempty"`
	QualityProfileId NullableInt32 `json:"qualityProfileId,omitempty"`
	MetadataProfileId NullableInt32 `json:"metadataProfileId,omitempty"`
	RootFolderPath NullableString `json:"rootFolderPath,omitempty"`
	Tags []*int32 `json:"tags,omitempty"`
	ApplyTags *ApplyTags `json:"applyTags,omitempty"`
	MoveFiles *bool `json:"moveFiles,omitempty"`
	DeleteFiles *bool `json:"deleteFiles,omitempty"`
}

// NewAuthorEditorResource instantiates a new AuthorEditorResource object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthorEditorResource() *AuthorEditorResource {
	this := AuthorEditorResource{}
	return &this
}

// NewAuthorEditorResourceWithDefaults instantiates a new AuthorEditorResource object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthorEditorResourceWithDefaults() *AuthorEditorResource {
	this := AuthorEditorResource{}
	return &this
}

// GetAuthorIds returns the AuthorIds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AuthorEditorResource) GetAuthorIds() []*int32 {
	if o == nil {
		var ret []*int32
		return ret
	}
	return o.AuthorIds
}

// GetAuthorIdsOk returns a tuple with the AuthorIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AuthorEditorResource) GetAuthorIdsOk() ([]*int32, bool) {
	if o == nil || isNil(o.AuthorIds) {
    return nil, false
	}
	return o.AuthorIds, true
}

// HasAuthorIds returns a boolean if a field has been set.
func (o *AuthorEditorResource) HasAuthorIds() bool {
	if o != nil && isNil(o.AuthorIds) {
		return true
	}

	return false
}

// SetAuthorIds gets a reference to the given []int32 and assigns it to the AuthorIds field.
func (o *AuthorEditorResource) SetAuthorIds(v []*int32) {
	o.AuthorIds = v
}

// GetMonitored returns the Monitored field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AuthorEditorResource) GetMonitored() bool {
	if o == nil || isNil(o.Monitored.Get()) {
		var ret bool
		return ret
	}
	return *o.Monitored.Get()
}

// GetMonitoredOk returns a tuple with the Monitored field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AuthorEditorResource) GetMonitoredOk() (*bool, bool) {
	if o == nil {
    return nil, false
	}
	return o.Monitored.Get(), o.Monitored.IsSet()
}

// HasMonitored returns a boolean if a field has been set.
func (o *AuthorEditorResource) HasMonitored() bool {
	if o != nil && o.Monitored.IsSet() {
		return true
	}

	return false
}

// SetMonitored gets a reference to the given NullableBool and assigns it to the Monitored field.
func (o *AuthorEditorResource) SetMonitored(v bool) {
	o.Monitored.Set(&v)
}
// SetMonitoredNil sets the value for Monitored to be an explicit nil
func (o *AuthorEditorResource) SetMonitoredNil() {
	o.Monitored.Set(nil)
}

// UnsetMonitored ensures that no value is present for Monitored, not even an explicit nil
func (o *AuthorEditorResource) UnsetMonitored() {
	o.Monitored.Unset()
}

// GetQualityProfileId returns the QualityProfileId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AuthorEditorResource) GetQualityProfileId() int32 {
	if o == nil || isNil(o.QualityProfileId.Get()) {
		var ret int32
		return ret
	}
	return *o.QualityProfileId.Get()
}

// GetQualityProfileIdOk returns a tuple with the QualityProfileId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AuthorEditorResource) GetQualityProfileIdOk() (*int32, bool) {
	if o == nil {
    return nil, false
	}
	return o.QualityProfileId.Get(), o.QualityProfileId.IsSet()
}

// HasQualityProfileId returns a boolean if a field has been set.
func (o *AuthorEditorResource) HasQualityProfileId() bool {
	if o != nil && o.QualityProfileId.IsSet() {
		return true
	}

	return false
}

// SetQualityProfileId gets a reference to the given NullableInt32 and assigns it to the QualityProfileId field.
func (o *AuthorEditorResource) SetQualityProfileId(v int32) {
	o.QualityProfileId.Set(&v)
}
// SetQualityProfileIdNil sets the value for QualityProfileId to be an explicit nil
func (o *AuthorEditorResource) SetQualityProfileIdNil() {
	o.QualityProfileId.Set(nil)
}

// UnsetQualityProfileId ensures that no value is present for QualityProfileId, not even an explicit nil
func (o *AuthorEditorResource) UnsetQualityProfileId() {
	o.QualityProfileId.Unset()
}

// GetMetadataProfileId returns the MetadataProfileId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AuthorEditorResource) GetMetadataProfileId() int32 {
	if o == nil || isNil(o.MetadataProfileId.Get()) {
		var ret int32
		return ret
	}
	return *o.MetadataProfileId.Get()
}

// GetMetadataProfileIdOk returns a tuple with the MetadataProfileId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AuthorEditorResource) GetMetadataProfileIdOk() (*int32, bool) {
	if o == nil {
    return nil, false
	}
	return o.MetadataProfileId.Get(), o.MetadataProfileId.IsSet()
}

// HasMetadataProfileId returns a boolean if a field has been set.
func (o *AuthorEditorResource) HasMetadataProfileId() bool {
	if o != nil && o.MetadataProfileId.IsSet() {
		return true
	}

	return false
}

// SetMetadataProfileId gets a reference to the given NullableInt32 and assigns it to the MetadataProfileId field.
func (o *AuthorEditorResource) SetMetadataProfileId(v int32) {
	o.MetadataProfileId.Set(&v)
}
// SetMetadataProfileIdNil sets the value for MetadataProfileId to be an explicit nil
func (o *AuthorEditorResource) SetMetadataProfileIdNil() {
	o.MetadataProfileId.Set(nil)
}

// UnsetMetadataProfileId ensures that no value is present for MetadataProfileId, not even an explicit nil
func (o *AuthorEditorResource) UnsetMetadataProfileId() {
	o.MetadataProfileId.Unset()
}

// GetRootFolderPath returns the RootFolderPath field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AuthorEditorResource) GetRootFolderPath() string {
	if o == nil || isNil(o.RootFolderPath.Get()) {
		var ret string
		return ret
	}
	return *o.RootFolderPath.Get()
}

// GetRootFolderPathOk returns a tuple with the RootFolderPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AuthorEditorResource) GetRootFolderPathOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.RootFolderPath.Get(), o.RootFolderPath.IsSet()
}

// HasRootFolderPath returns a boolean if a field has been set.
func (o *AuthorEditorResource) HasRootFolderPath() bool {
	if o != nil && o.RootFolderPath.IsSet() {
		return true
	}

	return false
}

// SetRootFolderPath gets a reference to the given NullableString and assigns it to the RootFolderPath field.
func (o *AuthorEditorResource) SetRootFolderPath(v string) {
	o.RootFolderPath.Set(&v)
}
// SetRootFolderPathNil sets the value for RootFolderPath to be an explicit nil
func (o *AuthorEditorResource) SetRootFolderPathNil() {
	o.RootFolderPath.Set(nil)
}

// UnsetRootFolderPath ensures that no value is present for RootFolderPath, not even an explicit nil
func (o *AuthorEditorResource) UnsetRootFolderPath() {
	o.RootFolderPath.Unset()
}

// GetTags returns the Tags field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AuthorEditorResource) GetTags() []*int32 {
	if o == nil {
		var ret []*int32
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AuthorEditorResource) GetTagsOk() ([]*int32, bool) {
	if o == nil || isNil(o.Tags) {
    return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *AuthorEditorResource) HasTags() bool {
	if o != nil && isNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []int32 and assigns it to the Tags field.
func (o *AuthorEditorResource) SetTags(v []*int32) {
	o.Tags = v
}

// GetApplyTags returns the ApplyTags field value if set, zero value otherwise.
func (o *AuthorEditorResource) GetApplyTags() ApplyTags {
	if o == nil || isNil(o.ApplyTags) {
		var ret ApplyTags
		return ret
	}
	return *o.ApplyTags
}

// GetApplyTagsOk returns a tuple with the ApplyTags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorEditorResource) GetApplyTagsOk() (*ApplyTags, bool) {
	if o == nil || isNil(o.ApplyTags) {
    return nil, false
	}
	return o.ApplyTags, true
}

// HasApplyTags returns a boolean if a field has been set.
func (o *AuthorEditorResource) HasApplyTags() bool {
	if o != nil && !isNil(o.ApplyTags) {
		return true
	}

	return false
}

// SetApplyTags gets a reference to the given ApplyTags and assigns it to the ApplyTags field.
func (o *AuthorEditorResource) SetApplyTags(v ApplyTags) {
	o.ApplyTags = &v
}

// GetMoveFiles returns the MoveFiles field value if set, zero value otherwise.
func (o *AuthorEditorResource) GetMoveFiles() bool {
	if o == nil || isNil(o.MoveFiles) {
		var ret bool
		return ret
	}
	return *o.MoveFiles
}

// GetMoveFilesOk returns a tuple with the MoveFiles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorEditorResource) GetMoveFilesOk() (*bool, bool) {
	if o == nil || isNil(o.MoveFiles) {
    return nil, false
	}
	return o.MoveFiles, true
}

// HasMoveFiles returns a boolean if a field has been set.
func (o *AuthorEditorResource) HasMoveFiles() bool {
	if o != nil && !isNil(o.MoveFiles) {
		return true
	}

	return false
}

// SetMoveFiles gets a reference to the given bool and assigns it to the MoveFiles field.
func (o *AuthorEditorResource) SetMoveFiles(v bool) {
	o.MoveFiles = &v
}

// GetDeleteFiles returns the DeleteFiles field value if set, zero value otherwise.
func (o *AuthorEditorResource) GetDeleteFiles() bool {
	if o == nil || isNil(o.DeleteFiles) {
		var ret bool
		return ret
	}
	return *o.DeleteFiles
}

// GetDeleteFilesOk returns a tuple with the DeleteFiles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorEditorResource) GetDeleteFilesOk() (*bool, bool) {
	if o == nil || isNil(o.DeleteFiles) {
    return nil, false
	}
	return o.DeleteFiles, true
}

// HasDeleteFiles returns a boolean if a field has been set.
func (o *AuthorEditorResource) HasDeleteFiles() bool {
	if o != nil && !isNil(o.DeleteFiles) {
		return true
	}

	return false
}

// SetDeleteFiles gets a reference to the given bool and assigns it to the DeleteFiles field.
func (o *AuthorEditorResource) SetDeleteFiles(v bool) {
	o.DeleteFiles = &v
}

func (o AuthorEditorResource) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AuthorIds != nil {
		toSerialize["authorIds"] = o.AuthorIds
	}
	if o.Monitored.IsSet() {
		toSerialize["monitored"] = o.Monitored.Get()
	}
	if o.QualityProfileId.IsSet() {
		toSerialize["qualityProfileId"] = o.QualityProfileId.Get()
	}
	if o.MetadataProfileId.IsSet() {
		toSerialize["metadataProfileId"] = o.MetadataProfileId.Get()
	}
	if o.RootFolderPath.IsSet() {
		toSerialize["rootFolderPath"] = o.RootFolderPath.Get()
	}
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	if !isNil(o.ApplyTags) {
		toSerialize["applyTags"] = o.ApplyTags
	}
	if !isNil(o.MoveFiles) {
		toSerialize["moveFiles"] = o.MoveFiles
	}
	if !isNil(o.DeleteFiles) {
		toSerialize["deleteFiles"] = o.DeleteFiles
	}
	return json.Marshal(toSerialize)
}

type NullableAuthorEditorResource struct {
	value *AuthorEditorResource
	isSet bool
}

func (v NullableAuthorEditorResource) Get() *AuthorEditorResource {
	return v.value
}

func (v *NullableAuthorEditorResource) Set(val *AuthorEditorResource) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthorEditorResource) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthorEditorResource) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthorEditorResource(val *AuthorEditorResource) *NullableAuthorEditorResource {
	return &NullableAuthorEditorResource{value: val, isSet: true}
}

func (v NullableAuthorEditorResource) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthorEditorResource) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


