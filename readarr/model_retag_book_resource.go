/*
Readarr

Readarr API docs

API version: v0.4.10.2734
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package readarr

import (
	"encoding/json"
)

// checks if the RetagBookResource type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RetagBookResource{}

// RetagBookResource struct for RetagBookResource
type RetagBookResource struct {
	Id *int32 `json:"id,omitempty"`
	AuthorId *int32 `json:"authorId,omitempty"`
	BookId *int32 `json:"bookId,omitempty"`
	TrackNumbers []int32 `json:"trackNumbers,omitempty"`
	BookFileId *int32 `json:"bookFileId,omitempty"`
	Path NullableString `json:"path,omitempty"`
	Changes []TagDifference `json:"changes,omitempty"`
}

// NewRetagBookResource instantiates a new RetagBookResource object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRetagBookResource() *RetagBookResource {
	this := RetagBookResource{}
	return &this
}

// NewRetagBookResourceWithDefaults instantiates a new RetagBookResource object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRetagBookResourceWithDefaults() *RetagBookResource {
	this := RetagBookResource{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *RetagBookResource) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RetagBookResource) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *RetagBookResource) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *RetagBookResource) SetId(v int32) {
	o.Id = &v
}

// GetAuthorId returns the AuthorId field value if set, zero value otherwise.
func (o *RetagBookResource) GetAuthorId() int32 {
	if o == nil || IsNil(o.AuthorId) {
		var ret int32
		return ret
	}
	return *o.AuthorId
}

// GetAuthorIdOk returns a tuple with the AuthorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RetagBookResource) GetAuthorIdOk() (*int32, bool) {
	if o == nil || IsNil(o.AuthorId) {
		return nil, false
	}
	return o.AuthorId, true
}

// HasAuthorId returns a boolean if a field has been set.
func (o *RetagBookResource) HasAuthorId() bool {
	if o != nil && !IsNil(o.AuthorId) {
		return true
	}

	return false
}

// SetAuthorId gets a reference to the given int32 and assigns it to the AuthorId field.
func (o *RetagBookResource) SetAuthorId(v int32) {
	o.AuthorId = &v
}

// GetBookId returns the BookId field value if set, zero value otherwise.
func (o *RetagBookResource) GetBookId() int32 {
	if o == nil || IsNil(o.BookId) {
		var ret int32
		return ret
	}
	return *o.BookId
}

// GetBookIdOk returns a tuple with the BookId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RetagBookResource) GetBookIdOk() (*int32, bool) {
	if o == nil || IsNil(o.BookId) {
		return nil, false
	}
	return o.BookId, true
}

// HasBookId returns a boolean if a field has been set.
func (o *RetagBookResource) HasBookId() bool {
	if o != nil && !IsNil(o.BookId) {
		return true
	}

	return false
}

// SetBookId gets a reference to the given int32 and assigns it to the BookId field.
func (o *RetagBookResource) SetBookId(v int32) {
	o.BookId = &v
}

// GetTrackNumbers returns the TrackNumbers field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RetagBookResource) GetTrackNumbers() []int32 {
	if o == nil {
		var ret []int32
		return ret
	}
	return o.TrackNumbers
}

// GetTrackNumbersOk returns a tuple with the TrackNumbers field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RetagBookResource) GetTrackNumbersOk() ([]int32, bool) {
	if o == nil || IsNil(o.TrackNumbers) {
		return nil, false
	}
	return o.TrackNumbers, true
}

// HasTrackNumbers returns a boolean if a field has been set.
func (o *RetagBookResource) HasTrackNumbers() bool {
	if o != nil && !IsNil(o.TrackNumbers) {
		return true
	}

	return false
}

// SetTrackNumbers gets a reference to the given []int32 and assigns it to the TrackNumbers field.
func (o *RetagBookResource) SetTrackNumbers(v []int32) {
	o.TrackNumbers = v
}

// GetBookFileId returns the BookFileId field value if set, zero value otherwise.
func (o *RetagBookResource) GetBookFileId() int32 {
	if o == nil || IsNil(o.BookFileId) {
		var ret int32
		return ret
	}
	return *o.BookFileId
}

// GetBookFileIdOk returns a tuple with the BookFileId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RetagBookResource) GetBookFileIdOk() (*int32, bool) {
	if o == nil || IsNil(o.BookFileId) {
		return nil, false
	}
	return o.BookFileId, true
}

// HasBookFileId returns a boolean if a field has been set.
func (o *RetagBookResource) HasBookFileId() bool {
	if o != nil && !IsNil(o.BookFileId) {
		return true
	}

	return false
}

// SetBookFileId gets a reference to the given int32 and assigns it to the BookFileId field.
func (o *RetagBookResource) SetBookFileId(v int32) {
	o.BookFileId = &v
}

// GetPath returns the Path field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RetagBookResource) GetPath() string {
	if o == nil || IsNil(o.Path.Get()) {
		var ret string
		return ret
	}
	return *o.Path.Get()
}

// GetPathOk returns a tuple with the Path field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RetagBookResource) GetPathOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Path.Get(), o.Path.IsSet()
}

// HasPath returns a boolean if a field has been set.
func (o *RetagBookResource) HasPath() bool {
	if o != nil && o.Path.IsSet() {
		return true
	}

	return false
}

// SetPath gets a reference to the given NullableString and assigns it to the Path field.
func (o *RetagBookResource) SetPath(v string) {
	o.Path.Set(&v)
}
// SetPathNil sets the value for Path to be an explicit nil
func (o *RetagBookResource) SetPathNil() {
	o.Path.Set(nil)
}

// UnsetPath ensures that no value is present for Path, not even an explicit nil
func (o *RetagBookResource) UnsetPath() {
	o.Path.Unset()
}

// GetChanges returns the Changes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RetagBookResource) GetChanges() []TagDifference {
	if o == nil {
		var ret []TagDifference
		return ret
	}
	return o.Changes
}

// GetChangesOk returns a tuple with the Changes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RetagBookResource) GetChangesOk() ([]TagDifference, bool) {
	if o == nil || IsNil(o.Changes) {
		return nil, false
	}
	return o.Changes, true
}

// HasChanges returns a boolean if a field has been set.
func (o *RetagBookResource) HasChanges() bool {
	if o != nil && !IsNil(o.Changes) {
		return true
	}

	return false
}

// SetChanges gets a reference to the given []TagDifference and assigns it to the Changes field.
func (o *RetagBookResource) SetChanges(v []TagDifference) {
	o.Changes = v
}

func (o RetagBookResource) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RetagBookResource) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.AuthorId) {
		toSerialize["authorId"] = o.AuthorId
	}
	if !IsNil(o.BookId) {
		toSerialize["bookId"] = o.BookId
	}
	if o.TrackNumbers != nil {
		toSerialize["trackNumbers"] = o.TrackNumbers
	}
	if !IsNil(o.BookFileId) {
		toSerialize["bookFileId"] = o.BookFileId
	}
	if o.Path.IsSet() {
		toSerialize["path"] = o.Path.Get()
	}
	if o.Changes != nil {
		toSerialize["changes"] = o.Changes
	}
	return toSerialize, nil
}

type NullableRetagBookResource struct {
	value *RetagBookResource
	isSet bool
}

func (v NullableRetagBookResource) Get() *RetagBookResource {
	return v.value
}

func (v *NullableRetagBookResource) Set(val *RetagBookResource) {
	v.value = val
	v.isSet = true
}

func (v NullableRetagBookResource) IsSet() bool {
	return v.isSet
}

func (v *NullableRetagBookResource) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRetagBookResource(val *RetagBookResource) *NullableRetagBookResource {
	return &NullableRetagBookResource{value: val, isSet: true}
}

func (v NullableRetagBookResource) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRetagBookResource) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


